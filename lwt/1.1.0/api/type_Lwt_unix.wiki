<<code language="ocaml" | sig
  val handle_unix_error : ('a -> 'b Lwt.t) -> 'a -> 'b Lwt.t
  type async_method = Async_none | Async_detach | Async_switch
  val default_async_method : unit -> Lwt_unix.async_method
  val set_default_async_method : Lwt_unix.async_method -> unit
  val async_method : unit -> Lwt_unix.async_method
  val async_method_key : Lwt_unix.async_method Lwt.key
  val with_async_none : (unit -> 'a) -> 'a
  val with_async_detach : (unit -> 'a) -> 'a
  val with_async_switch : (unit -> 'a) -> 'a
  val sleep : float -> unit Lwt.t
  val yield : unit -> unit Lwt.t
  val auto_yield : float -> unit -> unit Lwt.t
  exception Timeout
  val timeout : float -> 'a Lwt.t
  val with_timeout : float -> (unit -> 'a Lwt.t) -> 'a Lwt.t
  type file_descr
  type state = Opened | Closed | Aborted of exn
  val state : Lwt_unix.file_descr -> Lwt_unix.state
  val unix_file_descr : Lwt_unix.file_descr -> Unix.file_descr
  val of_unix_file_descr :
    ?blocking:bool ->
    ?set_flags:bool -> Unix.file_descr -> Lwt_unix.file_descr
  val blocking : Lwt_unix.file_descr -> bool Lwt.t
  val set_blocking : ?set_flags:bool -> Lwt_unix.file_descr -> bool -> unit
  val abort : Lwt_unix.file_descr -> exn -> unit
  val wait : unit -> (int * Unix.process_status) Lwt.t
  val waitpid :
    Unix.wait_flag list -> int -> (int * Unix.process_status) Lwt.t
  type resource_usage = { ru_utime : float; ru_stime : float; }
  val wait4 :
    Unix.wait_flag list ->
    int -> (int * Unix.process_status * Lwt_unix.resource_usage) Lwt.t
  val has_wait4 : bool
  val system : string -> Unix.process_status Lwt.t
  val stdin : Lwt_unix.file_descr
  val stdout : Lwt_unix.file_descr
  val stderr : Lwt_unix.file_descr
  val openfile :
    string ->
    Unix.open_flag list -> Unix.file_perm -> Lwt_unix.file_descr Lwt.t
  val close : Lwt_unix.file_descr -> unit Lwt.t
  val read : Lwt_unix.file_descr -> string -> int -> int -> int Lwt.t
  val write : Lwt_unix.file_descr -> string -> int -> int -> int Lwt.t
  val readable : Lwt_unix.file_descr -> bool
  val writable : Lwt_unix.file_descr -> bool
  val wait_read : Lwt_unix.file_descr -> unit Lwt.t
  val wait_write : Lwt_unix.file_descr -> unit Lwt.t
  val lseek : Lwt_unix.file_descr -> int -> Unix.seek_command -> int Lwt.t
  val truncate : string -> int -> unit Lwt.t
  val ftruncate : Lwt_unix.file_descr -> int -> unit Lwt.t
  val stat : string -> Unix.stats Lwt.t
  val lstat : string -> Unix.stats Lwt.t
  val fstat : Lwt_unix.file_descr -> Unix.stats Lwt.t
  val isatty : Lwt_unix.file_descr -> bool Lwt.t
  module LargeFile :
    sig
      val lseek :
        Lwt_unix.file_descr -> int64 -> Unix.seek_command -> int64 Lwt.t
      val truncate : string -> int64 -> unit Lwt.t
      val ftruncate : Lwt_unix.file_descr -> int64 -> unit Lwt.t
      val stat : string -> Unix.LargeFile.stats Lwt.t
      val lstat : string -> Unix.LargeFile.stats Lwt.t
      val fstat : Lwt_unix.file_descr -> Unix.LargeFile.stats Lwt.t
    end
  val unlink : string -> unit Lwt.t
  val rename : string -> string -> unit Lwt.t
  val link : string -> string -> unit Lwt.t
  val chmod : string -> Unix.file_perm -> unit Lwt.t
  val fchmod : Lwt_unix.file_descr -> Unix.file_perm -> unit Lwt.t
  val chown : string -> int -> int -> unit Lwt.t
  val fchown : Lwt_unix.file_descr -> int -> int -> unit Lwt.t
  val access : string -> Unix.access_permission list -> unit Lwt.t
  val dup : Lwt_unix.file_descr -> Lwt_unix.file_descr
  val dup2 : Lwt_unix.file_descr -> Lwt_unix.file_descr -> unit
  val set_close_on_exec : Lwt_unix.file_descr -> unit
  val clear_close_on_exec : Lwt_unix.file_descr -> unit
  val mkdir : string -> Unix.file_perm -> unit Lwt.t
  val rmdir : string -> unit Lwt.t
  val chdir : string -> unit Lwt.t
  val chroot : string -> unit Lwt.t
  val opendir : string -> Unix.dir_handle Lwt.t
  val readdir : Unix.dir_handle -> string Lwt.t
  val readdir_n : Unix.dir_handle -> int -> string array Lwt.t
  val rewinddir : Unix.dir_handle -> unit Lwt.t
  val closedir : Unix.dir_handle -> unit Lwt.t
  val files_of_directory : string -> string Lwt_stream.t
  val pipe : unit -> Lwt_unix.file_descr * Lwt_unix.file_descr
  val pipe_in : unit -> Lwt_unix.file_descr * Unix.file_descr
  val pipe_out : unit -> Unix.file_descr * Lwt_unix.file_descr
  val mkfifo : string -> Unix.file_perm -> unit Lwt.t
  val symlink : string -> string -> unit Lwt.t
  val readlink : string -> string Lwt.t
  val lockf : Lwt_unix.file_descr -> Unix.lock_command -> int -> unit Lwt.t
  val getlogin : unit -> string Lwt.t
  val getpwnam : string -> Unix.passwd_entry Lwt.t
  val getgrnam : string -> Unix.group_entry Lwt.t
  val getpwuid : int -> Unix.passwd_entry Lwt.t
  val getgrgid : int -> Unix.group_entry Lwt.t
  type signal_handler_id
  val on_signal : int -> (int -> unit) -> Lwt_unix.signal_handler_id
  val disable_signal_handler : Lwt_unix.signal_handler_id -> unit
  val socket :
    Unix.socket_domain -> Unix.socket_type -> int -> Lwt_unix.file_descr
  val socketpair :
    Unix.socket_domain ->
    Unix.socket_type -> int -> Lwt_unix.file_descr * Lwt_unix.file_descr
  val bind : Lwt_unix.file_descr -> Unix.sockaddr -> unit
  val listen : Lwt_unix.file_descr -> int -> unit
  val accept :
    Lwt_unix.file_descr -> (Lwt_unix.file_descr * Unix.sockaddr) Lwt.t
  val accept_n :
    Lwt_unix.file_descr ->
    int -> ((Lwt_unix.file_descr * Unix.sockaddr) list * exn option) Lwt.t
  val connect : Lwt_unix.file_descr -> Unix.sockaddr -> unit Lwt.t
  val shutdown : Lwt_unix.file_descr -> Unix.shutdown_command -> unit
  val getsockname : Lwt_unix.file_descr -> Unix.sockaddr
  val getpeername : Lwt_unix.file_descr -> Unix.sockaddr
  val recv :
    Lwt_unix.file_descr ->
    string -> int -> int -> Unix.msg_flag list -> int Lwt.t
  val recvfrom :
    Lwt_unix.file_descr ->
    string -> int -> int -> Unix.msg_flag list -> (int * Unix.sockaddr) Lwt.t
  val send :
    Lwt_unix.file_descr ->
    string -> int -> int -> Unix.msg_flag list -> int Lwt.t
  val sendto :
    Lwt_unix.file_descr ->
    string -> int -> int -> Unix.msg_flag list -> Unix.sockaddr -> int Lwt.t
  type io_vector = {
    iov_buffer : string;
    iov_offset : int;
    iov_length : int;
  }
  val io_vector :
    buffer:string -> offset:int -> length:int -> Lwt_unix.io_vector
  val recv_msg :
    socket:Lwt_unix.file_descr ->
    io_vectors:Lwt_unix.io_vector list -> (int * Unix.file_descr list) Lwt.t
  val send_msg :
    socket:Lwt_unix.file_descr ->
    io_vectors:Lwt_unix.io_vector list ->
    fds:Unix.file_descr list -> int Lwt.t
  type credentials = { cred_pid : int; cred_uid : int; cred_gid : int; }
  val get_credentials : Lwt_unix.file_descr -> Lwt_unix.credentials
  val getsockopt : Lwt_unix.file_descr -> Unix.socket_bool_option -> bool
  val setsockopt :
    Lwt_unix.file_descr -> Unix.socket_bool_option -> bool -> unit
  val getsockopt_int : Lwt_unix.file_descr -> Unix.socket_int_option -> int
  val setsockopt_int :
    Lwt_unix.file_descr -> Unix.socket_int_option -> int -> unit
  val getsockopt_optint :
    Lwt_unix.file_descr -> Unix.socket_optint_option -> int option
  val setsockopt_optint :
    Lwt_unix.file_descr -> Unix.socket_optint_option -> int option -> unit
  val getsockopt_float :
    Lwt_unix.file_descr -> Unix.socket_float_option -> float
  val setsockopt_float :
    Lwt_unix.file_descr -> Unix.socket_float_option -> float -> unit
  val getsockopt_error : Lwt_unix.file_descr -> Unix.error option
  val gethostname : unit -> string Lwt.t
  val gethostbyname : string -> Unix.host_entry Lwt.t
  val gethostbyaddr : Unix.inet_addr -> Unix.host_entry Lwt.t
  val getprotobyname : string -> Unix.protocol_entry Lwt.t
  val getprotobynumber : int -> Unix.protocol_entry Lwt.t
  val getservbyname : string -> string -> Unix.service_entry Lwt.t
  val getservbyport : int -> string -> Unix.service_entry Lwt.t
  val getaddrinfo :
    string ->
    string -> Unix.getaddrinfo_option list -> Unix.addr_info list Lwt.t
  val getnameinfo :
    Unix.sockaddr -> Unix.getnameinfo_option list -> Unix.name_info Lwt.t
  val tcgetattr : Lwt_unix.file_descr -> Unix.terminal_io Lwt.t
  val tcsetattr :
    Lwt_unix.file_descr ->
    Unix.setattr_when -> Unix.terminal_io -> unit Lwt.t
  val tcsendbreak : Lwt_unix.file_descr -> int -> unit Lwt.t
  val tcdrain : Lwt_unix.file_descr -> unit Lwt.t
  val tcflush : Lwt_unix.file_descr -> Unix.flush_queue -> unit Lwt.t
  val tcflow : Lwt_unix.file_descr -> Unix.flow_action -> unit Lwt.t
  exception Retry
  exception Retry_read
  exception Retry_write
  type io_event = Read | Write
  val wrap_syscall :
    Lwt_unix.io_event -> Lwt_unix.file_descr -> (unit -> 'a) -> 'a Lwt.t
  val check_descriptor : Lwt_unix.file_descr -> unit
  val register_action :
    Lwt_unix.io_event -> Lwt_unix.file_descr -> (unit -> 'a) -> 'a Lwt.t
  type 'a job
  val execute_job :
    ?async_method:Lwt_unix.async_method ->
    job:'a Lwt_unix.job ->
    result:('a Lwt_unix.job -> 'b) ->
    free:('a Lwt_unix.job -> unit) -> 'b Lwt.t
  val make_notification : ?once:bool -> (unit -> unit) -> int
  val send_notification : int -> unit
  val stop_notification : int -> unit
  val set_notification : int -> (unit -> unit) -> unit
  val pool_size : unit -> int
  val set_pool_size : int -> unit
  val thread_count : unit -> int
  val thread_waiting_count : unit -> int
  val get_cpu : unit -> int
  val get_affinity : ?pid:int -> unit -> int list
  val set_affinity : ?pid:int -> int list -> unit
  val run : 'a Lwt.t -> 'a
end >>