<<code language="ocaml" | sig
  type _ page
  type options
  type _ return
  val register :
    ?app:string ->
    ?scope:[< Eliom_common.scope ] ->
    ?options:Eliom_registration_sigs.S_poly_without_send.options ->
    ?charset:string ->
    ?code:int ->
    ?content_type:string ->
    ?headers:Http_headers.t ->
    ?secure_session:bool ->
    service:('get, 'post, 'b, 'c, 'd, Eliom_service.non_ext,
             Eliom_service.reg, [< `WithSuffix | `WithoutSuffix ], 'e, 'f,
             'a Eliom_registration_sigs.S_poly_without_send.return)
            Eliom_service.t ->
    ?error_handler:((string * exn) list ->
                    'a Eliom_registration_sigs.S_poly_without_send.page Lwt.t) ->
    ('get ->
     'post -> 'a Eliom_registration_sigs.S_poly_without_send.page Lwt.t) ->
    unit
  val create :
    ?app:string ->
    ?scope:[< Eliom_common.scope ] ->
    ?options:Eliom_registration_sigs.S_poly_without_send.options ->
    ?charset:string ->
    ?code:int ->
    ?content_type:string ->
    ?headers:Http_headers.t ->
    ?secure_session:bool ->
    ?https:bool ->
    ?name:string ->
    ?csrf_safe:bool ->
    ?csrf_scope:[< Eliom_common.user_scope ] ->
    ?csrf_secure:bool ->
    ?max_use:int ->
    ?timeout:float ->
    meth:('m, 'gp, 'gn, 'pp, 'pn, [< `WithSuffix | `WithoutSuffix ] as 'b,
          'mf, 'gp_)
         Eliom_service.meth ->
    id:('att, 'co, Eliom_service.non_ext, Eliom_service.reg, 'mf,
        'a Eliom_registration_sigs.S_poly_without_send.return, 'gp_)
       Eliom_service.id ->
    ?error_handler:((string * exn) list ->
                    'a Eliom_registration_sigs.S_poly_without_send.page Lwt.t) ->
    ('gp -> 'pp -> 'a Eliom_registration_sigs.S_poly_without_send.page Lwt.t) ->
    ('gp, 'pp, 'm, 'att, 'co, Eliom_service.non_ext, Eliom_service.reg, 'b,
     'gn, 'pn, 'a Eliom_registration_sigs.S_poly_without_send.return)
    Eliom_service.t
end >>