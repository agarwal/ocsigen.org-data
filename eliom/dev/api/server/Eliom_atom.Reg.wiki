=Module <<a_api_type subproject="server" | module Eliom_atom.Reg >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Reg>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_atom.Reg >><<span class="ocsforge_color_keyword"|end>>>>
----


==@@id="2_Serviceregistration"@@~Service registration ==

<<pre id="VALregister" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|register>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?scope: >>[< <<a_api subproject="server" text="Eliom_common.scope" | type Eliom_common.scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?options: >>unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?charset: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?code: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?content_type: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?headers: >><<span class="ocsforge_color_uid"|Http_headers>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?secure_session: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'get, 'post, 'a, 'b, 'c, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ext>>,\\           <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|reg>>, [< `WithSuffix | `WithoutSuffix ], 'd, 'e,\\           <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ocaml>><<span class="ocsforge_color_delimiter"| ) >>\\          <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?error_handler: >><<span class="ocsforge_color_delimiter"| ( >><<span class="ocsforge_color_delimiter"| ( >>string * exn<<span class="ocsforge_color_delimiter"| ) >> list <<span class="ocsforge_color_delimiter"| -> >> <<a_api subproject="server" text="Atom_feed.feed" | type Atom_feed.feed >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get <<span class="ocsforge_color_delimiter"| -> >> 'post <<span class="ocsforge_color_delimiter"| -> >> <<a_api subproject="server" text="Atom_feed.feed" | type Atom_feed.feed >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|register service handler>> will associate the
    <<span class="odocwiki_inlinecode"|service>> to the function <<span class="odocwiki_inlinecode"|handler>>~. ~The <<span class="odocwiki_inlinecode"|handler>> function take
    two parameters~, the ~G~E~T and ~P~O~S~T parameters of the current ~H~T~T~P
    request~, and should returns the corresponding page~.


    ~The optional parameter <<span class="odocwiki_inlinecode"|~~scope>> is <<a_api subproject="server" | val Eliom_common.global_scope >> by
    default~, see the ~Eliom manual for detailled description     <<a_manual chapter="server-services" fragment="scope"|of different
    scope>>~.


    ~The optional parameter <<span class="odocwiki_inlinecode"|~~options>> is specific to each output
    module~, see the type description for more information~.


    ~The optional parameters <<span class="odocwiki_inlinecode"|~?charset>>~, <<span class="odocwiki_inlinecode"|~?code>>~, <<span class="odocwiki_inlinecode"|~?content~_type>> and
    <<span class="odocwiki_inlinecode"|~?headers>> can be used to modify the ~H~T~T~P answer sent by
    ~Eliom~. ~Use this with care~.


    ~The optional parameter <<span class="odocwiki_inlinecode"|~~secure~_session>> has no effect for scope
    <<a_api subproject="server" | val Eliom_common.global_scope >>~. ~With other scopes~, the parameter is used
    to force the session service table in which the <<span class="odocwiki_inlinecode"|handler>> will be
    registered~. ~By default~, the service is registred in the unsecure
    session if the current request~'s protocol is <<span class="odocwiki_inlinecode"|http>>~, or in the
    secure session if the protocol is <<span class="odocwiki_inlinecode"|https>>~. ~If set to <<span class="odocwiki_inlinecode"|false>>
    ~(resp~. <<span class="odocwiki_inlinecode"|true>>~) the <<span class="odocwiki_inlinecode"|handler>> will be stored in the unsecure
    ~(resp~. secure~) session~. ~See the ~Eliom manual for an introduction
    to <<a_manual chapter="server-state"|secure state>>~.


    ~The optional parameter <<span class="odocwiki_inlinecode"|~~error~_handler>> is used to specialize the
    error page when actual parameters aren~'t compatible with the
    expected type~. ~The default error handler is <<span class="odocwiki_inlinecode"| fun l ~-~> raise
    ~(>><<a_api subproject="server" | exception Eliom_common.Eliom_Typing_Error >><<span class="odocwiki_inlinecode"| l~) >>~.
>>
<<pre id="VALcreate" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|create>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?scope: >>[< <<a_api subproject="server" text="Eliom_common.scope" | type Eliom_common.scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?options: >>unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?charset: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?code: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?content_type: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?headers: >><<span class="ocsforge_color_uid"|Http_headers>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?secure_session: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| meth: >><<span class="ocsforge_color_delimiter"| ( >>'m, 'gp, 'gn, 'pp, 'pn, [< `WithSuffix | `WithoutSuffix ] as 'a,\\        'mf, 'gp_<<span class="ocsforge_color_delimiter"| ) >>\\       <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Meth>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| id: >><<span class="ocsforge_color_delimiter"| ( >>'att, 'co, 'mf, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ocaml>>, 'gp_<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Id>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?error_handler: >><<span class="ocsforge_color_delimiter"| ( >><<span class="ocsforge_color_delimiter"| ( >>string * exn<<span class="ocsforge_color_delimiter"| ) >> list <<span class="ocsforge_color_delimiter"| -> >> <<a_api subproject="server" text="Atom_feed.feed" | type Atom_feed.feed >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'gp <<span class="ocsforge_color_delimiter"| -> >> 'pp <<span class="ocsforge_color_delimiter"| -> >> <<a_api subproject="server" text="Atom_feed.feed" | type Atom_feed.feed >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'gp, 'pp, 'm, 'att, 'co, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ext>>, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|reg>>,\\   'a, 'gn, 'pn, <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|non_ocaml>><<span class="ocsforge_color_delimiter"| ) >>\\  <<span class="ocsforge_color_uid"|Eliom_service>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Same as <<span class="odocwiki_inlinecode"|~Eliom~_service~.create>> followed by <<a_api subproject="server" | val Eliom_atom.Reg.register >>~.
>>


==@@id="2_Lowlevelfunction"@@~Low~-level function ==

<<pre id="VALsend" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|send>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?options: >>unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?charset: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?code: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?content_type: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?headers: >><<span class="ocsforge_color_uid"|Http_headers>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api subproject="server" text="Atom_feed.feed" | type Atom_feed.feed >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<a_api subproject="server" text="Eliom_registration.browser_content" | type Eliom_registration.browser_content >> <<a_api subproject="server" text="Eliom_registration.kind" | type Eliom_registration.kind >> <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|send page>> build the ~H~T~T~P frame corresponding to
    <<span class="odocwiki_inlinecode"|page>>~. ~This may be used for example in an service handler
    registered with <<a_api subproject="server" | val Eliom_registration.Any.register >> or when building a
    custom output module~.
>>
