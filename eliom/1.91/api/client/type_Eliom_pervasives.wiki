<<code language="ocaml" | sig
  exception Eliom_Internal_Error of string
  external id : 'a -> 'a = "%identity"
  val ( >>= ) : 'a Lwt.t -> ('a -> 'b Lwt.t) -> 'b Lwt.t
  val ( >|= ) : 'a Lwt.t -> ('a -> 'b) -> 'b Lwt.t
  val ( !! ) : 'a Lazy.t -> 'a
  val map_option : ('a -> 'b) -> 'a option -> 'b option
  type ('a, 'b) leftright = Left of 'a | Right of 'b
  module List :
    sig
      val length : 'a list -> int
      val hd : 'a list -> 'a
      val tl : 'a list -> 'a list
      val nth : 'a list -> int -> 'a
      val rev : 'a list -> 'a list
      val append : 'a list -> 'a list -> 'a list
      val rev_append : 'a list -> 'a list -> 'a list
      val concat : 'a list list -> 'a list
      val flatten : 'a list list -> 'a list
      val iter : ('a -> unit) -> 'a list -> unit
      val map : ('a -> 'b) -> 'a list -> 'b list
      val rev_map : ('a -> 'b) -> 'a list -> 'b list
      val fold_left : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
      val fold_right : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
      val iter2 : ('a -> 'b -> unit) -> 'a list -> 'b list -> unit
      val map2 : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
      val rev_map2 : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
      val fold_left2 :
        ('a -> 'b -> 'c -> 'a) -> 'a -> 'b list -> 'c list -> 'a
      val fold_right2 :
        ('a -> 'b -> 'c -> 'c) -> 'a list -> 'b list -> 'c -> 'c
      val for_all : ('a -> bool) -> 'a list -> bool
      val exists : ('a -> bool) -> 'a list -> bool
      val for_all2 : ('a -> 'b -> bool) -> 'a list -> 'b list -> bool
      val exists2 : ('a -> 'b -> bool) -> 'a list -> 'b list -> bool
      val mem : 'a -> 'a list -> bool
      val memq : 'a -> 'a list -> bool
      val find : ('a -> bool) -> 'a list -> 'a
      val filter : ('a -> bool) -> 'a list -> 'a list
      val find_all : ('a -> bool) -> 'a list -> 'a list
      val partition : ('a -> bool) -> 'a list -> 'a list * 'a list
      val assoc : 'a -> ('a * 'b) list -> 'b
      val assq : 'a -> ('a * 'b) list -> 'b
      val mem_assoc : 'a -> ('a * 'b) list -> bool
      val mem_assq : 'a -> ('a * 'b) list -> bool
      val remove_assoc : 'a -> ('a * 'b) list -> ('a * 'b) list
      val remove_assq : 'a -> ('a * 'b) list -> ('a * 'b) list
      val split : ('a * 'b) list -> 'a list * 'b list
      val combine : 'a list -> 'b list -> ('a * 'b) list
      val sort : ('a -> 'a -> int) -> 'a list -> 'a list
      val stable_sort : ('a -> 'a -> int) -> 'a list -> 'a list
      val fast_sort : ('a -> 'a -> int) -> 'a list -> 'a list
      val merge : ('a -> 'a -> int) -> 'a list -> 'a list -> 'a list
      val is_prefix_skip_end_slash : string list -> string list -> bool
    end
  module String :
    sig
      external length : string -> int = "%string_length"
      external get : string -> int -> char = "%string_safe_get"
      external set : string -> int -> char -> unit = "%string_safe_set"
      external create : int -> string = "caml_create_string"
      val make : int -> char -> string
      val copy : string -> string
      val sub : string -> int -> int -> string
      val fill : string -> int -> int -> char -> unit
      val blit : string -> int -> string -> int -> int -> unit
      val concat : string -> string list -> string
      val iter : (char -> unit) -> string -> unit
      val escaped : string -> string
      val index : string -> char -> int
      val rindex : string -> char -> int
      val index_from : string -> int -> char -> int
      val rindex_from : string -> int -> char -> int
      val contains : string -> char -> bool
      val contains_from : string -> int -> char -> bool
      val rcontains_from : string -> int -> char -> bool
      val uppercase : string -> string
      val lowercase : string -> string
      val capitalize : string -> string
      val uncapitalize : string -> string
      type t = string
      val compare : t -> t -> int
      external unsafe_get : string -> int -> char = "%string_unsafe_get"
      external unsafe_set : string -> int -> char -> unit
        = "%string_unsafe_set"
      external unsafe_blit : string -> int -> string -> int -> int -> unit
        = "caml_blit_string" "noalloc"
      external unsafe_fill : string -> int -> int -> char -> unit
        = "caml_fill_string" "noalloc"
      val split : ?multisep:bool -> char -> string -> string list
      val may_concat : string -> sep:string -> string -> string
      module Table :
        sig
          type key = string
          type +'a t
          val empty : 'a t
          val is_empty : 'a t -> bool
          val mem : key -> 'a t -> bool
          val add : key -> 'a -> 'a t -> 'a t
          val singleton : key -> 'a -> 'a t
          val remove : key -> 'a t -> 'a t
          val merge :
            (key -> 'a option -> 'b option -> 'c option) ->
            'a t -> 'b t -> 'c t
          val compare : ('a -> 'a -> int) -> 'a t -> 'a t -> int
          val equal : ('a -> 'a -> bool) -> 'a t -> 'a t -> bool
          val iter : (key -> 'a -> unit) -> 'a t -> unit
          val fold : (key -> 'a -> 'b -> 'b) -> 'a t -> 'b -> 'b
          val for_all : (key -> 'a -> bool) -> 'a t -> bool
          val exists : (key -> 'a -> bool) -> 'a t -> bool
          val filter : (key -> 'a -> bool) -> 'a t -> 'a t
          val partition : (key -> 'a -> bool) -> 'a t -> 'a t * 'a t
          val cardinal : 'a t -> int
          val bindings : 'a t -> (key * 'a) list
          val min_binding : 'a t -> key * 'a
          val max_binding : 'a t -> key * 'a
          val choose : 'a t -> key * 'a
          val split : key -> 'a t -> 'a t * 'a option * 'a t
          val find : key -> 'a t -> 'a
          val map : ('a -> 'b) -> 'a t -> 'b t
          val mapi : (key -> 'a -> 'b) -> 'a t -> 'b t
        end
    end
  module Url :
    sig
      val urldecode : string -> string
      val urlencode : ?with_plus:bool -> string -> string
      type http_url = {
        hu_host : string;
        hu_port : int;
        hu_path : string list;
        hu_path_string : string;
        hu_arguments : (string * string) list;
        hu_fragment : string;
      }
      type file_url = {
        fu_path : string list;
        fu_path_string : string;
        fu_arguments : (string * string) list;
        fu_fragment : string;
      }
      type url = Http of http_url | Https of http_url | File of file_url
      val default_http_port : int
      val default_https_port : int
      val path_of_path_string : string -> string list
      val encode_arguments : (string * string) list -> string
      val decode_arguments : string -> (string * string) list
      val url_of_string : string -> url option
      val string_of_url : url -> string
      module Current :
        sig
          val host : string
          val port : int option
          val path_string : string
          val path : string list
          val arguments : (string * string) list
          val get_fragment : unit -> string
          val set_fragment : string -> unit
          val get : unit -> url option
          val set : url -> unit
          val as_string : string
        end
      type t = string
      type path = string list
      val make_absolute_url :
        https:bool ->
        host:string -> port:int -> string -> Eliom_pervasives.Url.t
      val remove_internal_slash : string list -> string list
      val remove_slash_at_beginning : string list -> string list
      val decode : string -> string
      val encode : ?plus:bool -> string -> string
      val make_encoded_parameters : (string * string) list -> string
    end
  module Printexc :
    sig
      val to_string : exn -> string
      val print : ('a -> 'b) -> 'a -> 'b
      val catch : ('a -> 'b) -> 'a -> 'b
      val print_backtrace : out_channel -> unit
      val get_backtrace : unit -> string
      val record_backtrace : bool -> unit
      val backtrace_status : unit -> bool
      val register_printer : (exn -> string option) -> unit
      val register_exn_printer : ((exn -> string) -> exn -> string) -> unit
    end
  val debug : string -> unit
  val jsdebug : 'a -> unit
  val alert : string -> unit
  val jsalert : Js.js_string Js.t -> unit
  val to_json : ?typ:'a -> 'b -> string
  val of_json : ?typ:'a -> string -> 'b
  val encode_form_value : 'a -> string
  val unmarshal_js_var : string -> 'a
  val encode_header_value : 'a -> string
  module XML :
    sig
      module M :
        sig
          type aname = string
          type attrib = string * Js.Unsafe.any
          type attribs = Eliom_pervasives.XML.M.attrib list
          type event = unit -> unit
          val attrib_name :
            Eliom_pervasives.XML.M.attrib -> Eliom_pervasives.XML.M.aname
          val float_attrib :
            Eliom_pervasives.XML.M.aname ->
            float -> Eliom_pervasives.XML.M.attrib
          val int_attrib :
            Eliom_pervasives.XML.M.aname ->
            int -> Eliom_pervasives.XML.M.attrib
          val string_attrib :
            Eliom_pervasives.XML.M.aname ->
            string -> Eliom_pervasives.XML.M.attrib
          val space_sep_attrib :
            Eliom_pervasives.XML.M.aname ->
            string list -> Eliom_pervasives.XML.M.attrib
          val comma_sep_attrib :
            Eliom_pervasives.XML.M.aname ->
            string list -> Eliom_pervasives.XML.M.attrib
          val event_attrib :
            Eliom_pervasives.XML.M.aname ->
            Eliom_pervasives.XML.M.event -> Eliom_pervasives.XML.M.attrib
          type ename = string
          type elt = Dom.node Js.t
          val pcdata : string -> Eliom_pervasives.XML.M.elt
          val encodedpcdata : string -> Eliom_pervasives.XML.M.elt
          val entity : string -> Eliom_pervasives.XML.M.elt
          val empty : unit -> Eliom_pervasives.XML.M.elt
          val comment : string -> Eliom_pervasives.XML.M.elt
          val leaf :
            ?a:Eliom_pervasives.XML.M.attrib list ->
            Eliom_pervasives.XML.M.ename -> Eliom_pervasives.XML.M.elt
          val node :
            ?a:Eliom_pervasives.XML.M.attrib list ->
            Eliom_pervasives.XML.M.ename ->
            Eliom_pervasives.XML.M.elt list -> Eliom_pervasives.XML.M.elt
          val cdata : string -> Eliom_pervasives.XML.M.elt
          val cdata_script : string -> Eliom_pervasives.XML.M.elt
          val cdata_style : string -> Eliom_pervasives.XML.M.elt
          val lwt_register_event :
            ?keep_default:bool ->
            Eliom_pervasives.XML.M.elt ->
            Eliom_pervasives.XML.M.ename -> ('a -> 'b Lwt.t) -> 'a -> unit
          val register_event :
            ?keep_default:bool ->
            Eliom_pervasives.XML.M.elt ->
            Eliom_pervasives.XML.M.ename -> ('a -> 'b) -> 'a -> unit
          val ref_node : Eliom_pervasives.XML.M.elt -> int
          type ref_tree =
              Ref_tree of int option *
                (int * Eliom_pervasives.XML.M.ref_tree) list
        end
    end
  module SVG : sig module M : SVG_sigs.SVG(XML.M).T end
  module HTML5 :
    sig
      module M :
        sig
          module Info : XML_sigs.Info
          type uri = Uri.uri
          type uris = Uri.uris
          val string_of_uri : uri -> string
          val uri_of_string : string -> uri
          type +'a attrib
          val to_xmlattribs : 'a attrib list -> XML.M.attrib list
          val to_attrib : XML.M.attrib -> 'a attrib
          val a_autocomplete : [< `Off | `On ] -> [> `Autocomplete ] attrib
          val a_async : [< `Async ] -> [> `Async ] attrib
          val a_autofocus : [< `Autofocus ] -> [> `Autofocus ] attrib
          val a_autoplay : [< `Autoplay ] -> [> `Autoplay ] attrib
          val a_challenge : HTML5_types.text -> [> `Challenge ] attrib
          val a_contenteditable :
            [< `False | `True ] -> [> `Contexteditable ] attrib
          val a_contextmenu : HTML5_types.idref -> [> `Contextmenu ] attrib
          val a_controls : [< `Controls ] -> [> `Controls ] attrib
          val a_dir : [< `Ltr | `Rtl ] -> [> `Dir ] attrib
          val a_draggable : [< `False | `True ] -> [> `Draggable ] attrib
          val a_form : HTML5_types.idref -> [> `Form ] attrib
          val a_formaction : uri -> [> `Formaction ] attrib
          val a_formenctype :
            HTML5_types.contenttype -> [> `Formenctype ] attrib
          val a_formmethod :
            [< `Delete | `Get | `Post | `Put ] -> [> `Formmethod ] attrib
          val a_formnovalidate :
            [< `Formnovalidate ] -> [> `Formnovalidate ] attrib
          val a_formtarget : HTML5_types.text -> [> `Formtarget ] attrib
          val a_hidden : [< `Hidden ] -> [> `Hidden ] attrib
          val a_high : HTML5_types.float_number -> [> `High ] attrib
          val a_icon : uri -> [> `Icon ] attrib
          val a_ismap : [< `Ismap ] -> [> `Ismap ] attrib
          val a_keytype : HTML5_types.text -> [> `Keytype ] attrib
          val a_list : HTML5_types.idref -> [> `List ] attrib
          val a_loop : [< `Loop ] -> [> `Loop ] attrib
          val a_low : HTML5_types.float_number -> [> `High ] attrib
          val a_max : HTML5_types.float_number -> [> `Max ] attrib
          val a_input_max : HTML5_types.number -> [> `Max ] attrib
          val a_min : HTML5_types.float_number -> [> `Min ] attrib
          val a_input_min : HTML5_types.number -> [> `Min ] attrib
          val a_novalidate : [< `Novalidate ] -> [> `Novalidate ] attrib
          val a_open : [< `Open ] -> [> `Open ] attrib
          val a_optimum : HTML5_types.float_number -> [> `Optimum ] attrib
          val a_pattern : HTML5_types.text -> [> `Pattern ] attrib
          val a_placeholder : HTML5_types.text -> [> `Placeholder ] attrib
          val a_poster : uri -> [> `Poster ] attrib
          val a_preload :
            [< `Audio | `Metadata | `None ] -> [> `Preload ] attrib
          val a_pubdate : [< `Pubdate ] -> [> `Pubdate ] attrib
          val a_radiogroup : HTML5_types.text -> [> `Radiogroup ] attrib
          val a_required : [< `Required ] -> [> `Required ] attrib
          val a_reversed : [< `Reversed ] -> [> `Reversed ] attrib
          val a_sandbox :
            [< `AllowForms | `AllowSameOrigin | `AllowScript ] list ->
            [> `Sandbox ] attrib
          val a_spellcheck : [< `False | `True ] -> [> `Spellcheck ] attrib
          val a_scoped : [< `Scoped ] -> [> `Scoped ] attrib
          val a_seamless : [< `Seamless ] -> [> `Seamless ] attrib
          val a_sizes : HTML5_types.numbers -> [> `Sizes ] attrib
          val a_span : HTML5_types.number -> [> `Span ] attrib
          val a_srclang : HTML5_types.nmtoken -> [> `XML_lang ] attrib
          val a_start : HTML5_types.number -> [> `Start ] attrib
          val a_step : HTML5_types.float_number -> [> `Step ] attrib
          val a_wrap : [< `Hard | `Soft ] -> [> `Wrap ] attrib
          val a_class : HTML5_types.nmtokens -> [> `Class ] attrib
          val a_user_data :
            HTML5_types.nmtoken -> HTML5_types.text -> [> `User_data ] attrib
          val a_id : HTML5_types.text -> [> `Id ] attrib
          val a_title : HTML5_types.text -> [> `Title ] attrib
          val a_xml_lang : HTML5_types.nmtoken -> [> `XML_lang ] attrib
          val a_onabort : XML.M.event -> [> `OnAbort ] attrib
          val a_onafterprint : XML.M.event -> [> `OnAfterPrint ] attrib
          val a_onbeforeprint : XML.M.event -> [> `OnBeforePrint ] attrib
          val a_onbeforeunload : XML.M.event -> [> `OnBeforeUnload ] attrib
          val a_onblur : XML.M.event -> [> `OnBlur ] attrib
          val a_oncanplay : XML.M.event -> [> `OnCanPlay ] attrib
          val a_oncanplaythrough :
            XML.M.event -> [> `OnCanPlayThrough ] attrib
          val a_onchange : XML.M.event -> [> `OnChange ] attrib
          val a_onclick : XML.M.event -> [> `OnClick ] attrib
          val a_oncontextmenu : XML.M.event -> [> `OnContextMenu ] attrib
          val a_ondblclick : XML.M.event -> [> `OnDblClick ] attrib
          val a_ondrag : XML.M.event -> [> `OnDrag ] attrib
          val a_ondragend : XML.M.event -> [> `OnDragEnd ] attrib
          val a_ondragenter : XML.M.event -> [> `OnDragEnter ] attrib
          val a_ondragleave : XML.M.event -> [> `OnDragLeave ] attrib
          val a_ondragover : XML.M.event -> [> `OnDragOver ] attrib
          val a_ondragstart : XML.M.event -> [> `OnDragStart ] attrib
          val a_ondrop : XML.M.event -> [> `OnDrop ] attrib
          val a_ondurationchange :
            XML.M.event -> [> `OnDurationChange ] attrib
          val a_onemptied : XML.M.event -> [> `OnEmptied ] attrib
          val a_onended : XML.M.event -> [> `OnEnded ] attrib
          val a_onerror : XML.M.event -> [> `OnError ] attrib
          val a_onfocus : XML.M.event -> [> `OnFocus ] attrib
          val a_onformchange : XML.M.event -> [> `OnFormChange ] attrib
          val a_onforminput : XML.M.event -> [> `OnFormInput ] attrib
          val a_onhashchange : XML.M.event -> [> `OnHashChange ] attrib
          val a_oninput : XML.M.event -> [> `OnInput ] attrib
          val a_oninvalid : XML.M.event -> [> `OnInvalid ] attrib
          val a_onmousedown : XML.M.event -> [> `OnMouseDown ] attrib
          val a_onmouseup : XML.M.event -> [> `OnMouseUp ] attrib
          val a_onmouseover : XML.M.event -> [> `OnMouseOver ] attrib
          val a_onmousemove : XML.M.event -> [> `OnMouseMove ] attrib
          val a_onmouseout : XML.M.event -> [> `OnMouseOut ] attrib
          val a_onmousewheel : XML.M.event -> [> `OnMouseWheel ] attrib
          val a_onoffline : XML.M.event -> [> `OnOffLine ] attrib
          val a_ononline : XML.M.event -> [> `OnOnLine ] attrib
          val a_onpause : XML.M.event -> [> `OnPause ] attrib
          val a_onplay : XML.M.event -> [> `OnPlay ] attrib
          val a_onplaying : XML.M.event -> [> `OnPlaying ] attrib
          val a_onpagehide : XML.M.event -> [> `OnPageHide ] attrib
          val a_onpageshow : XML.M.event -> [> `OnPageShow ] attrib
          val a_onpopstate : XML.M.event -> [> `OnPopState ] attrib
          val a_onprogress : XML.M.event -> [> `OnProgress ] attrib
          val a_onratechange : XML.M.event -> [> `OnRateChange ] attrib
          val a_onreadystatechange :
            XML.M.event -> [> `OnReadyStateChange ] attrib
          val a_onredo : XML.M.event -> [> `OnRedo ] attrib
          val a_onresize : XML.M.event -> [> `OnResize ] attrib
          val a_onscroll : XML.M.event -> [> `OnScroll ] attrib
          val a_onseeked : XML.M.event -> [> `OnSeeked ] attrib
          val a_onseeking : XML.M.event -> [> `OnSeeking ] attrib
          val a_onselect : XML.M.event -> [> `OnSelect ] attrib
          val a_onshow : XML.M.event -> [> `OnShow ] attrib
          val a_onstalled : XML.M.event -> [> `OnStalled ] attrib
          val a_onstorage : XML.M.event -> [> `OnStorage ] attrib
          val a_onsubmit : XML.M.event -> [> `OnSubmit ] attrib
          val a_onsuspend : XML.M.event -> [> `OnSuspend ] attrib
          val a_ontimeupdate : XML.M.event -> [> `OnTimeUpdate ] attrib
          val a_onundo : XML.M.event -> [> `OnUndo ] attrib
          val a_onunload : XML.M.event -> [> `OnUnload ] attrib
          val a_onvolumechange : XML.M.event -> [> `OnVolumeChange ] attrib
          val a_onwaiting : XML.M.event -> [> `OnWaiting ] attrib
          val a_onkeypress : XML.M.event -> [> `OnKeyPress ] attrib
          val a_onkeydown : XML.M.event -> [> `OnKeyDown ] attrib
          val a_onkeyup : XML.M.event -> [> `OnKeyUp ] attrib
          val a_onload : XML.M.event -> [> `OnLoad ] attrib
          val a_onloadeddata : XML.M.event -> [> `OnLoadedData ] attrib
          val a_onloadedmetadata :
            XML.M.event -> [> `OnLoadedMetaData ] attrib
          val a_onloadstart : XML.M.event -> [> `OnLoadStart ] attrib
          val a_onmessage : XML.M.event -> [> `OnMessage ] attrib
          val a_version : HTML5_types.cdata -> [> `Version ] attrib
          val a_xmlns : [< `W3_org_1999_xhtml ] -> [> `XMLns ] attrib
          val a_manifest : uri -> [> `Manifest ] attrib
          val a_cite : uri -> [> `Cite ] attrib
          val a_xml_space : [< `Preserve ] -> [> `XML_space ] attrib
          val a_accesskey : HTML5_types.character -> [> `Accesskey ] attrib
          val a_charset : HTML5_types.charset -> [> `Charset ] attrib
          val a_accept_charset :
            HTML5_types.charsets -> [> `Accept_charset ] attrib
          val a_accept : HTML5_types.contenttypes -> [> `Accept ] attrib
          val a_href : uri -> [> `Href ] attrib
          val a_hreflang : HTML5_types.languagecode -> [> `Hreflang ] attrib
          val a_rel : HTML5_types.linktypes -> [> `Rel ] attrib
          val a_tabindex : HTML5_types.number -> [> `Tabindex ] attrib
          val a_mime_type : HTML5_types.contenttype -> [> `Mime_type ] attrib
          val a_datetime : HTML5_types.cdata -> [> `Datetime ] attrib
          val a_action : uri -> [> `Action ] attrib
          val a_checked : [< `Checked ] -> [> `Checked ] attrib
          val a_cols : HTML5_types.number -> [> `Cols ] attrib
          val a_enctype : HTML5_types.contenttype -> [> `Enctype ] attrib
          val a_for : HTML5_types.idref -> [> `For ] attrib
          val a_for_list : HTML5_types.idrefs -> [> `For_List ] attrib
          val a_maxlength : HTML5_types.number -> [> `Maxlength ] attrib
          val a_method :
            [< `Delete | `Get | `Post | `Put ] -> [> `Method ] attrib
          val a_multiple : [< `Multiple ] -> [> `Multiple ] attrib
          val a_name : HTML5_types.text -> [> `Name ] attrib
          val a_rows : HTML5_types.number -> [> `Rows ] attrib
          val a_selected : [< `Selected ] -> [> `Selected ] attrib
          val a_size : HTML5_types.number -> [> `Size ] attrib
          val a_src : uri -> [> `Src ] attrib
          val a_input_type :
            [< `Button
             | `Checkbox
             | `Color
             | `Date
             | `Datetime
             | `Datetime_local
             | `Email
             | `File
             | `Hidden
             | `Image
             | `Month
             | `Number
             | `Password
             | `Radio
             | `Range
             | `Reset
             | `Search
             | `Submit
             | `Tel
             | `Text
             | `Time
             | `Url
             | `Week ] ->
            [> `Input_Type ] attrib
          val a_text_value : HTML5_types.text -> [> `Text_Value ] attrib
          val a_int_value : HTML5_types.number -> [> `Int_Value ] attrib
          val a_value : HTML5_types.cdata -> [> `Value ] attrib
          val a_float_value :
            HTML5_types.float_number -> [> `Float_Value ] attrib
          val a_disabled : [< `Disabled ] -> [> `Disabled ] attrib
          val a_readonly : [< `Readonly ] -> [> `Readonly ] attrib
          val a_button_type :
            [< `Button | `Reset | `Submit ] -> [> `Button_Type ] attrib
          val a_command_type :
            [< `Checkbox | `Command | `Radio ] -> [> `Command_Type ] attrib
          val a_menu_type :
            [< `Context | `Toolbar ] -> [> `Menu_Type ] attrib
          val a_label : HTML5_types.text -> [> `Label ] attrib
          val a_align :
            [< `Char | `Justify | `Left | `Right ] -> [> `Align ] attrib
          val a_axis : HTML5_types.cdata -> [> `Axis ] attrib
          val a_colspan : HTML5_types.number -> [> `Colspan ] attrib
          val a_headers : HTML5_types.idrefs -> [> `Headers ] attrib
          val a_rowspan : HTML5_types.number -> [> `Rowspan ] attrib
          val a_scope :
            [< `Col | `Colgroup | `Row | `Rowgroup ] -> [> `Scope ] attrib
          val a_summary : HTML5_types.text -> [> `Summary ] attrib
          val a_border : HTML5_types.pixels -> [> `Border ] attrib
          val a_cellpadding : HTML5_types.length -> [> `Cellpadding ] attrib
          val a_cellspacing : HTML5_types.length -> [> `Cellspacing ] attrib
          val a_datapagesize : HTML5_types.cdata -> [> `Datapagesize ] attrib
          val a_rules :
            [< `All | `Cols | `Groups | `None | `Rows ] -> [> `Rules ] attrib
          val a_char : HTML5_types.character -> [> `Char ] attrib
          val a_charoff : HTML5_types.length -> [> `Charoff ] attrib
          val a_alt : HTML5_types.text -> [> `Alt ] attrib
          val a_height : HTML5_types.number -> [> `Height ] attrib
          val a_width : HTML5_types.number -> [> `Width ] attrib
          type shape = [ `Circle | `Default | `Poly | `Rect ]
          val a_shape : shape -> [> `Shape ] attrib
          val a_coords : HTML5_types.numbers -> [> `Coords ] attrib
          val a_usemap : HTML5_types.idref -> [> `Usemap ] attrib
          val a_data : uri -> [> `Data ] attrib
          val a_codetype : HTML5_types.contenttype -> [> `Codetype ] attrib
          val a_fs_rows : HTML5_types.multilengths -> [> `FS_Rows ] attrib
          val a_fs_cols : HTML5_types.multilengths -> [> `FS_Cols ] attrib
          val a_frameborder : [< `One | `Zero ] -> [> `Frameborder ] attrib
          val a_marginheight :
            HTML5_types.pixels -> [> `Marginheight ] attrib
          val a_marginwidth : HTML5_types.pixels -> [> `Marginwidth ] attrib
          val a_scrolling : [< `Auto | `No | `Yes ] -> [> `Scrolling ] attrib
          val a_target : HTML5_types.frametarget -> [> `Target ] attrib
          val a_content : HTML5_types.text -> [> `Content ] attrib
          val a_http_equiv : HTML5_types.text -> [> `Http_equiv ] attrib
          val a_defer : [< `Defer ] -> [> `Defer ] attrib
          val a_media : HTML5_types.mediadesc -> [> `Media ] attrib
          val a_style : string -> [> `Style_Attr ] attrib
          type +'a elt
          type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
          type ('a, 'b, 'c) unary = ?a:'a attrib list -> 'b elt -> 'c elt
          type ('a, 'b, 'c, 'd) binary =
              ?a:'a attrib list -> 'b elt -> 'c elt -> 'd elt
          type ('a, 'b, 'c, 'd) tri = 'a elt -> 'b elt -> 'c elt -> 'd elt
          type ('a, 'b, 'c) star = ?a:'a attrib list -> 'b elt list -> 'c elt
          type ('a, 'b, 'c) plus =
              ?a:'a attrib list -> 'b elt -> 'b elt list -> 'c elt
          type html = [ `Html ] elt
          type rt =
              [ `Rpt of [ `Rp ] elt * [ `Rt ] elt * [ `Rp ] elt
              | `Rt of [ `Rt ] elt ]
          type ruby_content = HTML5_types.phrasing elt list * rt
          type rp =
              HTML5_types.common attrib list * HTML5_types.phrasing elt list
          val html :
            ?a:HTML5_types.html_attrib attrib list ->
            [< `Head ] elt -> [< `Body ] elt -> [> `Html ] elt
          val head :
            ?a:HTML5_types.head_attrib attrib list ->
            [< `Title ] elt ->
            HTML5_types.head_content_fun elt list ->
            [> HTML5_types.head ] elt
          val base :
            ([< HTML5_types.base_attrib ], [> HTML5_types.base ]) nullary
          val title :
            (HTML5_types.title_attrib, [< HTML5_types.title_content_fun ],
             [> HTML5_types.title ])
            unary
          val body :
            ([< HTML5_types.body_attrib ], [< HTML5_types.body_content_fun ],
             [> HTML5_types.body ])
            star
          val svg :
            ?xmlns:string ->
            ?a:[< HTML5_types.svg_attrib ] SVG.M.attrib list ->
            [< HTML5_types.svg_content ] SVG.M.elt list ->
            [> HTML5_types.svg ] elt
          val footer :
            ([< HTML5_types.common ],
             [< HTML5_types.flow5_without_header_footer ], [> `Footer ])
            star
          val header :
            ([< HTML5_types.common ],
             [< HTML5_types.flow5_without_header_footer ], [> `Header ])
            star
          val section :
            ([< HTML5_types.section_attrib ],
             [< HTML5_types.section_content_fun ], [> HTML5_types.section ])
            star
          val nav :
            ([< HTML5_types.nav_attrib ], [< HTML5_types.nav_content_fun ],
             [> HTML5_types.nav ])
            star
          val h1 :
            ([< HTML5_types.h1_attrib ], [< HTML5_types.h1_content_fun ],
             [> HTML5_types.h1 ])
            star
          val h2 :
            ([< HTML5_types.h2_attrib ], [< HTML5_types.h2_content_fun ],
             [> HTML5_types.h2 ])
            star
          val h3 :
            ([< HTML5_types.h3_attrib ], [< HTML5_types.h3_content_fun ],
             [> HTML5_types.h3 ])
            star
          val h4 :
            ([< HTML5_types.h4_attrib ], [< HTML5_types.h4_content_fun ],
             [> HTML5_types.h4 ])
            star
          val h5 :
            ([< HTML5_types.h5_attrib ], [< HTML5_types.h5_content_fun ],
             [> HTML5_types.h5 ])
            star
          val h6 :
            ([< HTML5_types.h6_attrib ], [< HTML5_types.h6_content_fun ],
             [> HTML5_types.h6 ])
            star
          val hgroup :
            ([< HTML5_types.hgroup_attrib ],
             [< HTML5_types.hgroup_content_fun ], [> HTML5_types.hgroup ])
            plus
          val address :
            ([< HTML5_types.address_attrib ],
             [< HTML5_types.address_content_fun ], [> HTML5_types.address ])
            star
          val article :
            ([< HTML5_types.article_attrib ],
             [< HTML5_types.article_content_fun ], [> HTML5_types.article ])
            star
          val aside :
            ([< HTML5_types.aside_attrib ],
             [< HTML5_types.aside_content_fun ], [> HTML5_types.aside ])
            star
          val p :
            ([< HTML5_types.p_attrib ], [< HTML5_types.p_content_fun ],
             [> HTML5_types.p ])
            star
          val pre :
            ([< HTML5_types.pre_attrib ], [< HTML5_types.pre_content_fun ],
             [> HTML5_types.pre ])
            star
          val blockquote :
            ([< HTML5_types.blockquote_attrib ],
             [< HTML5_types.blockquote_content_fun ],
             [> HTML5_types.blockquote ])
            star
          val div :
            ([< HTML5_types.div_attrib ], [< HTML5_types.div_content_fun ],
             [> HTML5_types.div ])
            star
          val dl :
            ?a:[< HTML5_types.common ] attrib list ->
            (([< `Dt ] elt * [< `Dt ] elt list) *
             ([< `Dd ] elt * [< `Dd ] elt list))
            list -> [> `Dl ] elt
          val ol :
            ([< HTML5_types.ol_attrib ], [< HTML5_types.ol_content_fun ],
             [> HTML5_types.ol ])
            star
          val ul :
            ([< HTML5_types.ul_attrib ], [< HTML5_types.ul_content_fun ],
             [> HTML5_types.ul ])
            star
          val dd :
            ([< HTML5_types.dd_attrib ], [< HTML5_types.dd_content_fun ],
             [> HTML5_types.dd ])
            star
          val dt :
            ([< HTML5_types.dt_attrib ], [< HTML5_types.dt_content_fun ],
             [> HTML5_types.dt ])
            star
          val li :
            ([< HTML5_types.li_attrib ], [< HTML5_types.li_content_fun ],
             [> HTML5_types.li ])
            star
          val figcaption :
            ([< HTML5_types.figcaption_attrib ],
             [< HTML5_types.figcaption_content_fun ],
             [> HTML5_types.figcaption ])
            star
          val figure :
            ?figcaption:[< `Figcaption ] elt ->
            ([< HTML5_types.common ], [< HTML5_types.flow5 ], [> `Figure ])
            star
          val hr : ([< HTML5_types.hr_attrib ], [> HTML5_types.hr ]) nullary
          val rt :
            ?rp:rp * rp ->
            ?a:[< HTML5_types.common ] attrib list ->
            [< HTML5_types.phrasing ] elt list -> rt
          val rp :
            ?a:[< HTML5_types.common ] attrib list ->
            [< HTML5_types.phrasing ] elt list -> rp
          val ruby :
            ?a:[< HTML5_types.common ] attrib list ->
            ruby_content -> ruby_content list -> [> `Ruby ] elt
          val b :
            ([< HTML5_types.b_attrib ], [< HTML5_types.b_content_fun ],
             [> HTML5_types.b ])
            star
          val i :
            ([< HTML5_types.i_attrib ], [< HTML5_types.i_content_fun ],
             [> HTML5_types.i ])
            star
          val small :
            ([< HTML5_types.small_attrib ],
             [< HTML5_types.small_content_fun ], [> HTML5_types.small ])
            star
          val sub :
            ([< HTML5_types.sub_attrib ], [< HTML5_types.sub_content_fun ],
             [> HTML5_types.sub ])
            star
          val sup :
            ([< HTML5_types.sup_attrib ], [< HTML5_types.sup_content_fun ],
             [> HTML5_types.sup ])
            star
          val mark :
            ([< HTML5_types.mark_attrib ], [< HTML5_types.mark_content_fun ],
             [> HTML5_types.mark ])
            star
          val wbr :
            ([< HTML5_types.wbr_attrib ], [> HTML5_types.wbr ]) nullary
          val bdo :
            dir:[< `Ltr | `Rtl ] ->
            ([< HTML5_types.common ], [< HTML5_types.phrasing ], [> `Bdo ])
            star
          val abbr :
            ([< HTML5_types.abbr_attrib ], [< HTML5_types.abbr_content_fun ],
             [> HTML5_types.abbr ])
            star
          val br : ([< HTML5_types.br_attrib ], [> HTML5_types.br ]) nullary
          val cite :
            ([< HTML5_types.cite_attrib ], [< HTML5_types.cite_content_fun ],
             [> HTML5_types.cite ])
            star
          val code :
            ([< HTML5_types.code_attrib ], [< HTML5_types.code_content_fun ],
             [> HTML5_types.code ])
            star
          val dfn :
            ([< HTML5_types.dfn_attrib ], [< HTML5_types.dfn_content_fun ],
             [> HTML5_types.dfn ])
            star
          val em :
            ([< HTML5_types.em_attrib ], [< HTML5_types.em_content_fun ],
             [> HTML5_types.em ])
            star
          val kbd :
            ([< HTML5_types.kbd_attrib ], [< HTML5_types.kbd_content_fun ],
             [> HTML5_types.kbd ])
            star
          val q :
            ([< HTML5_types.q_attrib ], [< HTML5_types.q_content_fun ],
             [> HTML5_types.q ])
            star
          val samp :
            ([< HTML5_types.samp_attrib ], [< HTML5_types.samp_content_fun ],
             [> HTML5_types.samp ])
            star
          val span :
            ([< HTML5_types.span_attrib ], [< HTML5_types.span_content_fun ],
             [> HTML5_types.span ])
            star
          val strong :
            ([< HTML5_types.strong_attrib ],
             [< HTML5_types.strong_content_fun ], [> HTML5_types.strong ])
            star
          val time :
            ([< HTML5_types.time_attrib ], [< HTML5_types.time_content_fun ],
             [> HTML5_types.time ])
            star
          val var :
            ([< HTML5_types.var_attrib ], [< HTML5_types.var_content_fun ],
             [> HTML5_types.var ])
            star
          val a : ([< HTML5_types.a_attrib ], 'a, [> `A of 'a ]) star
          val del : ([< HTML5_types.del_attrib ], 'a, [> `Del of 'a ]) star
          val ins : ([< HTML5_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
          val img :
            src:uri ->
            alt:HTML5_types.text ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Ismap
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang ],
             [> `Img ])
            nullary
          val iframe :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Sandbox
              | `Seamless
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang ],
             [< `PCDATA ], [> `Iframe ])
            star
          val object_ :
            ?params:[< `Param ] elt list ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Data
              | `Dir
              | `Draggable
              | `Form
              | `Height
              | `Hidden
              | `Id
              | `Mime_type
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `Usemap
              | `User_data
              | `Width
              | `XML_lang ],
             'a, [> `Object of 'a ])
            star
          val param :
            ([< HTML5_types.param_attrib ], [> HTML5_types.param ]) nullary
          val embed :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang ],
             [> `Embed ])
            nullary
          val audio :
            ?srcs:uri * [< `Source ] elt list ->
            ([< `Accesskey
              | `Autoplay
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Controls
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Loop
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Preload
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             'a, [> `Audio of 'a ])
            star
          val video :
            ?srcs:uri * [< `Source ] elt list ->
            ([< `Accesskey
              | `Autoplay
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Controls
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Loop
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Poster
              | `Preload
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang ],
             'a, [> `Video of 'a ])
            star
          val canvas :
            ([< HTML5_types.canvas_attrib ], 'a, [> `Canvas of 'a ]) star
          val source :
            ([< HTML5_types.source_attrib ], [> HTML5_types.source ]) nullary
          val area :
            alt:HTML5_types.text ->
            ([< `Accesskey
              | `Alt
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Coords
              | `Dir
              | `Draggable
              | `Hidden
              | `Hreflang
              | `Id
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Shape
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Target
              | `Title
              | `User_data
              | `XML_lang ],
             [> `Area ])
            nullary
          val map : ([< HTML5_types.map_attrib ], 'a, [> `A of 'a ]) plus
          val caption :
            ([< HTML5_types.caption_attrib ],
             [< HTML5_types.caption_content_fun ], [> HTML5_types.caption ])
            star
          val table :
            ?caption:[< `Caption ] elt ->
            ?columns:[< `Colgroup ] elt list ->
            ?thead:[< `Thead ] elt ->
            ?tfoot:[< `Tfoot ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Summary
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [< `Tr ], [> `Table ])
            plus
          val tablex :
            ?caption:[< `Caption ] elt ->
            ?columns:[< `Colgroup ] elt list ->
            ?thead:[< `Thead ] elt ->
            ?tfoot:[< `Tfoot ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Summary
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [< `Tbody ], [> `Table ])
            star
          val colgroup :
            ([< HTML5_types.colgroup_attrib ],
             [< HTML5_types.colgroup_content_fun ],
             [> HTML5_types.colgroup ])
            star
          val col :
            ([< HTML5_types.col_attrib ], [> HTML5_types.col ]) nullary
          val thead :
            ([< HTML5_types.thead_attrib ],
             [< HTML5_types.thead_content_fun ], [> HTML5_types.thead ])
            star
          val tbody :
            ([< HTML5_types.tbody_attrib ],
             [< HTML5_types.tbody_content_fun ], [> HTML5_types.tbody ])
            star
          val tfoot :
            ([< HTML5_types.tfoot_attrib ],
             [< HTML5_types.tfoot_content_fun ], [> HTML5_types.tfoot ])
            star
          val td :
            ([< HTML5_types.td_attrib ], [< HTML5_types.td_content_fun ],
             [> HTML5_types.td ])
            star
          val th :
            ([< HTML5_types.th_attrib ], [< HTML5_types.th_content_fun ],
             [> HTML5_types.th ])
            star
          val tr :
            ([< HTML5_types.tr_attrib ], [< HTML5_types.tr_content_fun ],
             [> HTML5_types.tr ])
            star
          val form :
            ([< HTML5_types.form_attrib ], [< HTML5_types.form_content_fun ],
             [> HTML5_types.form ])
            plus
          val fieldset :
            ?legend:[ `Legend ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Form
              | `Hidden
              | `Id
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [< HTML5_types.flow5 ], [> `Fieldset ])
            star
          val legend :
            ([< HTML5_types.legend_attrib ],
             [< HTML5_types.legend_content_fun ], [> HTML5_types.legend ])
            star
          val label :
            ([< HTML5_types.label_attrib ],
             [< HTML5_types.label_content_fun ], [> HTML5_types.label ])
            star
          val input :
            ([< HTML5_types.input_attrib ], [> HTML5_types.input ]) nullary
          val button :
            ([< HTML5_types.button_attrib ],
             [< HTML5_types.button_content_fun ], [> HTML5_types.button ])
            star
          val select :
            ([< HTML5_types.select_attrib ],
             [< HTML5_types.select_content_fun ], [> HTML5_types.select ])
            star
          val datalist :
            ?children:[< `Options of [< `Option ] elt list
                       | `Phras of [< HTML5_types.phrasing ] elt list ] ->
            ([< HTML5_types.common ], [> `Datalist ]) nullary
          val optgroup :
            label:HTML5_types.text ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [< `Option ], [> `Optgroup ])
            star
          val option :
            ([< HTML5_types.option_attrib ],
             [< HTML5_types.option_content_fun ],
             [> HTML5_types.selectoption ])
            unary
          val textarea :
            ([< HTML5_types.textarea_attrib ],
             [< HTML5_types.textarea_content_fun ],
             [> HTML5_types.textarea ])
            unary
          val keygen :
            ([< HTML5_types.keygen_attrib ], [> HTML5_types.keygen ]) nullary
          val progress :
            ([< HTML5_types.progress_attrib ],
             [< HTML5_types.progress_content_fun ],
             [> HTML5_types.progress ])
            star
          val meter :
            ([< HTML5_types.meter_attrib ],
             [< HTML5_types.meter_content_fun ], [> HTML5_types.meter ])
            star
          val output_elt :
            ([< HTML5_types.output_elt_attrib ],
             [< HTML5_types.output_elt_content_fun ],
             [> HTML5_types.output_elt ])
            star
          val pcdata : string -> [> `PCDATA ] elt
          val entity : string -> [> `PCDATA ] elt
          val space : unit -> [> `PCDATA ] elt
          val cdata : string -> [> `PCDATA ] elt
          val cdata_script : string -> [> `PCDATA ] elt
          val cdata_style : string -> [> `PCDATA ] elt
          val unsafe_data : string -> 'a elt
          val details :
            [< `Summary ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Open
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [< HTML5_types.flow5 ] elt, [> `Details ])
            star
          val summary :
            ([< HTML5_types.summary_attrib ],
             [< HTML5_types.summary_content_fun ], [> HTML5_types.summary ])
            star
          val command :
            label:HTML5_types.text ->
            ([< `Accesskey
              | `Checked
              | `Class
              | `Command_Type
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Icon
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Radiogroup
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [> `Command ])
            nullary
          val menu :
            ?child:[< `Flows of [< HTML5_types.flow5 ] elt list
                    | `Lis of [< `Li of [< HTML5_types.common ] ] elt list ] ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Menu_Type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [> `Menu ])
            nullary
          val script :
            ([< HTML5_types.script_attrib ],
             [< HTML5_types.script_content_fun ], [> HTML5_types.script ])
            unary
          val noscript :
            ([< HTML5_types.noscript_attrib ],
             [< HTML5_types.noscript_content_fun ],
             [> HTML5_types.noscript ])
            plus
          val meta :
            ([< HTML5_types.meta_attrib ], [> HTML5_types.meta ]) nullary
          val style :
            ([< HTML5_types.style_attrib ],
             [< HTML5_types.style_content_fun ], [> HTML5_types.style ])
            star
          val link :
            rel:HTML5_types.linktypes ->
            href:uri ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Href
              | `Hreflang
              | `Id
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Sizes
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang ],
             [> `Link ])
            nullary
          val tot : XML.M.elt -> 'a elt
          val totl : XML.M.elt list -> 'a elt list
          val toelt : 'a elt -> XML.M.elt
          val toeltl : 'a elt list -> XML.M.elt list
          type doc = [ `Html ] elt
          val doc_toelt : doc -> XML.M.elt
          val to_element : 'a elt -> Dom_html.element Js.t
          val to_html : HTML5_types.html elt -> Dom_html.htmlElement Js.t
          val to_head : HTML5_types.head elt -> Dom_html.headElement Js.t
          val to_link : HTML5_types.link elt -> Dom_html.linkElement Js.t
          val to_title : HTML5_types.title elt -> Dom_html.titleElement Js.t
          val to_meta : HTML5_types.meta elt -> Dom_html.metaElement Js.t
          val to_base : HTML5_types.base elt -> Dom_html.baseElement Js.t
          val to_style : HTML5_types.style elt -> Dom_html.styleElement Js.t
          val to_body : HTML5_types.body elt -> Dom_html.bodyElement Js.t
          val to_form : HTML5_types.form elt -> Dom_html.formElement Js.t
          val to_optGroup :
            HTML5_types.optgroup elt -> Dom_html.optGroupElement Js.t
          val to_option :
            HTML5_types.selectoption elt -> Dom_html.optionElement Js.t
          val to_select :
            HTML5_types.select elt -> Dom_html.selectElement Js.t
          val to_input : HTML5_types.input elt -> Dom_html.inputElement Js.t
          val to_textArea :
            HTML5_types.textarea elt -> Dom_html.textAreaElement Js.t
          val to_button :
            HTML5_types.button elt -> Dom_html.buttonElement Js.t
          val to_label : HTML5_types.label elt -> Dom_html.labelElement Js.t
          val to_fieldSet :
            HTML5_types.fieldset elt -> Dom_html.fieldSetElement Js.t
          val to_legend :
            HTML5_types.legend elt -> Dom_html.legendElement Js.t
          val to_uList : HTML5_types.ul elt -> Dom_html.uListElement Js.t
          val to_oList : HTML5_types.ol elt -> Dom_html.oListElement Js.t
          val to_dList : [ `Dl ] elt -> Dom_html.dListElement Js.t
          val to_li : HTML5_types.li elt -> Dom_html.liElement Js.t
          val to_div : HTML5_types.div elt -> Dom_html.divElement Js.t
          val to_paragraph :
            HTML5_types.p elt -> Dom_html.paragraphElement Js.t
          val to_heading :
            HTML5_types.heading elt -> Dom_html.headingElement Js.t
          val to_quote :
            HTML5_types.blockquote elt -> Dom_html.quoteElement Js.t
          val to_pre : HTML5_types.pre elt -> Dom_html.preElement Js.t
          val to_br : HTML5_types.br elt -> Dom_html.brElement Js.t
          val to_hr : HTML5_types.hr elt -> Dom_html.hrElement Js.t
          val to_anchor : 'a HTML5_types.a elt -> Dom_html.anchorElement Js.t
          val to_image : [ `Img ] elt -> Dom_html.imageElement Js.t
          val to_object :
            'a HTML5_types.object_ elt -> Dom_html.objectElement Js.t
          val to_param : HTML5_types.param elt -> Dom_html.paramElement Js.t
          val to_area : HTML5_types.area elt -> Dom_html.areaElement Js.t
          val to_map : 'a HTML5_types.map elt -> Dom_html.mapElement Js.t
          val to_script :
            HTML5_types.script elt -> Dom_html.scriptElement Js.t
          val to_tableCell : [ `Td ] elt -> Dom_html.tableCellElement Js.t
          val to_tableRow :
            HTML5_types.tr elt -> Dom_html.tableRowElement Js.t
          val to_tableCol :
            HTML5_types.col elt -> Dom_html.tableColElement Js.t
          val to_tableSection :
            [ `Tbody | `Tfoot | `Thead ] elt ->
            Dom_html.tableSectionElement Js.t
          val to_tableCaption :
            HTML5_types.caption elt -> Dom_html.tableCaptionElement Js.t
          val to_table : HTML5_types.table elt -> Dom_html.tableElement Js.t
          val to_canvas :
            'a HTML5_types.canvas elt -> Dom_html.canvasElement Js.t
          val to_iFrame :
            HTML5_types.iframe elt -> Dom_html.iFrameElement Js.t
        end
    end
  module Regexp :
    sig
      type t
      type flag = Global_search | Case_insensitive | Multi_line
      val last_index : Eliom_pervasives.Regexp.t -> int
      val make :
        ?global:bool ->
        ?case_insensitive:bool ->
        ?multi_line:bool -> string -> Eliom_pervasives.Regexp.t
      val test : Eliom_pervasives.Regexp.t -> string -> bool
      val exec : Eliom_pervasives.Regexp.t -> string -> string array
      val index : Eliom_pervasives.Regexp.t -> string -> int
      val replace : Eliom_pervasives.Regexp.t -> string -> string -> string
      val replace_fun :
        Eliom_pervasives.Regexp.t ->
        (int -> string array -> string) -> string -> string
      val split : Eliom_pervasives.Regexp.t -> string -> string array
    end
end >>