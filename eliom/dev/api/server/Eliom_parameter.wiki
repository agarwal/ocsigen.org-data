=Module <<a_api_type subproject="server" | module Eliom_parameter >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_parameter>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_parameter >><<span class="ocsforge_color_keyword"|end>>>>~Specifying parameter as <<span class="odocwiki_inlinecode"|type~_checker check t>> is equivalent as
    <<span class="odocwiki_inlinecode"|t>> but the check function is called after decoding the
    parameters~, allowing you to make more checks on the parameters
    before the service handler is called~. ~Raise an exception if the
    parameter is not correct~, and the error handler will be called
    instead of the service handler~.

----
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api subproject="server" | module type Eliom_parameter_sigs.S >>>>
<<pre id="VALtype_checker" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|type~_checker>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>'a <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [< suff ] as 'b, 'c<<span class="ocsforge_color_delimiter"| ) >> params_type <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>'a, 'b, 'c<<span class="ocsforge_color_delimiter"| ) >> params_type>>>><<div class="odocwiki_info"|~Specifying parameter as <<span class="odocwiki_inlinecode"|type~_checker check t>> is equivalent as
    <<span class="odocwiki_inlinecode"|t>> but the check function is called after decoding the
    parameters~, allowing you to make more checks on the parameters
    before the service handler is called~. ~Raise an exception if the
    parameter is not correct~, and the error handler will be called
    instead of the service handler~.
>>
<<pre id="VALregexp" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|regexp>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_uid"|Netstring_pcre>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|regexp>> <<span class="ocsforge_color_delimiter"| -> >>\\  string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| to_string: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>string, [ `WithoutSuffix ], [ `One of string ] param_name<<span class="ocsforge_color_delimiter"| ) >>\\  params_type>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|regexp r d s>> tells that the service takes a string that matches
    the regular expression <<span class="odocwiki_inlinecode"|r>> as parameter~, labeled <<span class="odocwiki_inlinecode"|s>>~, and that will
    be rewritten in d~.  ~The syntax of regexp is ~P~C~R~E~'s one ~(uses
    <<span class="odocwiki_inlinecode"|~Netstring~_pcre>>~, from ~O~Camlnet~)~.  ~For example~: <<span class="odocwiki_inlinecode"|regexp
    ~(~Netstring~_pcre~.regexp "~\~[~(~.~* ~)~\~]"~) "~(~$~1~)" "myparam">> will match
    the parameter <<span class="odocwiki_inlinecode"|myparam~=~[hello~]>> and send the string <<span class="odocwiki_inlinecode"|"~(hello~)">> to
    the service handler~.
>>
<<pre id="VALall_suffix_regexp" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|all~_suffix~_regexp>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_uid"|Netstring_pcre>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|regexp>> <<span class="ocsforge_color_delimiter"| -> >>\\  string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| to_string: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>string, [ `Endsuffix ], [ `One of string ] param_name<<span class="ocsforge_color_delimiter"| ) >> params_type>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|all~_suffix~_regexp r d s>> takes all the suffix~, as long as
    possible~, matching the regular expression <<span class="odocwiki_inlinecode"|r>>~, name <<span class="odocwiki_inlinecode"|s>>~, and
    rewrite it in <<span class="odocwiki_inlinecode"|d>>~.
>>
<<pre id="VALget_non_localized_get_parameters" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|get~_non~_localized~_get~_parameters>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [ `WithoutSuffix ], 'b<<span class="ocsforge_color_delimiter"| ) >> non_localized_params <<span class="ocsforge_color_delimiter"| -> >> 'a option>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_non~_localized~_get~_parameters ~~sp p>> decodes and returns non
    localized ~G~E~T parameters specified by <<span class="odocwiki_inlinecode"|p>> if present~.
>>
<<pre id="VALget_non_localized_post_parameters" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|get~_non~_localized~_post~_parameters>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [ `WithoutSuffix ], 'b<<span class="ocsforge_color_delimiter"| ) >> non_localized_params <<span class="ocsforge_color_delimiter"| -> >> 'a option>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|get~_non~_localized~_post~_parameters ~~sp p>> decodes and returns non
    localized ~P~O~S~T parameters specified by <<span class="odocwiki_inlinecode"|p>> if present~.
>>
