=Module <<a_api_type subproject="server" | module Ow_slide_event >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Ow_slide_event>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Ow_slide_event >><<span class="ocsforge_color_keyword"|end>>>>~First is moves event
      ~Second is end event
      ~Third is move~_func call at each move event
      ~Fourth is end event call at end event


      ~Theses events are catch on document

----

~First is start event
      ~Second is function which take move~_func and end~_func
      ~(partial slide~_without~_start~)
      ~Third is html element where catch start event
      ~Fourth is start~_func call at start event
      ~Fifth is move~_func call at each move event
      ~Sixth is end~_func call at end event

~Same as slide~_event but catch all start event instead of only one

~First is html element where catch start event
      ~Second is start~_func call at start event
      ~Third is move~_func call at each move event
      ~Fourth is end event call at end event

~Same as mouseslide but catch all start event instead of only one

~Same as mouseslide but with touchevent

~Same as mouseslides but with touchevent

~Based on get~_mouse~_ev~_coord and get~_touch~_ev~_coord


      ~First arg is the way to get touch with ~J~S ~A~P~I
      ~Second arg is the id for touch event


      ~It get client positions

~Based on get~_local~_mouse~_ev~_coord and get~_local~_touch~_ev~_coord


      ~First arg is the way to get touch with ~J~S ~A~P~I
      ~Second arg is the target
      ~Third arg is the id for touch event


      ~It get client positions

~Same as mouseslide or touchslide but handle the both

~Same as touch~_or~_mouse~_slide
      but catch all event instead of only the first
