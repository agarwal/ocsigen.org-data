=Module <<a_api_type subproject="server" | module Eliom_react >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_react>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_react >><<span class="ocsforge_color_keyword"|end>>>>~Propagate events
    occurrences from the server to the client and the other way
    around~. ~It is to be noted that occurrence propagation is done
    asynchronously~.\\


    ~The use of this module is pretty much useless without it~'s client counter
    part~.\\

----
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Down" | module Eliom_react.Down >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_react.Down >><<span class="ocsforge_color_keyword"|end>>>><<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="Up" | module Eliom_react.Up >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_react.Up >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|of~_react ~?scope ~?throttling ~?name e>> create an
      asynchronous edge originating from <<span class="odocwiki_inlinecode"|e>>~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="server" text="S" | module Eliom_react.S >> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_react.S >><<span class="ocsforge_color_keyword"|end>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|create param>> creates an ~Up event~.
>>
