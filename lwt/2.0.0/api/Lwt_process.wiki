=Module <<a_api_type | module Lwt_process >> =
<<div class="code"|<<span class="keyword"|module>> Lwt_process: <<span class='code'|sig>><<a_api text=".." | module Lwt_process >><<span class='code'|end>>>>~Process management\\

----
\\
~This modules allow you to spawn processes and communicate with them~.\\
<<div class="code" id="TYPEcommand"|<<span class="keyword"|type>> command = <<span class="code type"|string * string array>> >>
<<div class="info"|~A command is a program name with a list of arguments\\
>>

<<div id="VALshell" class="code"|<<span class="keyword"|val>> shell : <<span class="code type"|string -> <<a_api text="command" | type Lwt_process.command >>>>>><<div class="info"|~A command executed with <<span class='code'|"~/bin~/sh">>\\
>>
\\
~All the following functions take an optionnal argument
    <<span class='code'|timeout>>~. ~If specified~, after expiration~, the process will be
    sent a <<span class='code'|~Unix~.sigkill>> signal and channels will be closed~.\\
\\

======@@id="6_Highlevelfunctions"@@~High~-level functions======
\\
\\

<<div class="h8"| ~Redirections>>
\\
<<div class="code" id="TYPEredirection"|<<span class="keyword"|type>> redirection = <<span class="code type"|\\{{{   }}}[ `Close\\{{{   }}}  | `Dev_null\\{{{   }}}  | `FD_copy of Unix.file_descr\\{{{   }}}  | `FD_move of Unix.file_descr\\{{{   }}}  | `Keep ]>> >>
<<div class="info"|~A file descriptor redirection~. ~It describe how standard file
    descriptors are redirected in the child process~.\\
>>

\\
~Note~: all optionnal redirection argumetns default to <<span class='code'|`~Keep>>\\
\\

<<div class="h8"| ~Executing>>
\\
<<div id="VALexec" class="code"|<<span class="keyword"|val>> exec : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> Unix.process_status <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="info"|~Executes the given command and returns its exit status~.\\
>>
\\

<<div class="h8"| ~Receiving>>
\\
<<div id="VALpread" class="code"|<<span class="keyword"|val>> pread : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> string <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpread_chars" class="code"|<<span class="keyword"|val>> pread~_chars : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>><<div id="VALpread_line" class="code"|<<span class="keyword"|val>> pread~_line : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> string <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpread_lines" class="code"|<<span class="keyword"|val>> pread~_lines : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>>\\

<<div class="h8"| ~Sending>>
\\
<<div id="VALpwrite" class="code"|<<span class="keyword"|val>> pwrite : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> string -> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpwrite_chars" class="code"|<<span class="keyword"|val>> pwrite~_chars : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> -> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpwrite_line" class="code"|<<span class="keyword"|val>> pwrite~_line : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> string -> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpwrite_lines" class="code"|<<span class="keyword"|val>> pwrite~_lines : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> -> unit <<a_api text="Lwt.t" | type Lwt.t >>>>>>\\

<<div class="h8"| ~Mapping>>
\\
<<div id="VALpmap" class="code"|<<span class="keyword"|val>> pmap : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> string -> string <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpmap_chars" class="code"|<<span class="keyword"|val>> pmap~_chars : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> -> char <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>><<div id="VALpmap_line" class="code"|<<span class="keyword"|val>> pmap~_line : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> string -> string <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div id="VALpmap_lines" class="code"|<<span class="keyword"|val>> pmap~_lines : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >> -> string <<a_api text="Lwt_stream.t" | type Lwt_stream.t >>>>>>\\

======@@id="6_Spawningprocesses"@@~Spawning processes======
\\
<<div class="code" id="TYPEstate"|<<span class="keyword"|type>> state = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Running>>|@@class="typefieldcomment lefttop startcom"@@{{{(*}}}|@@class="typefieldcomment lefttop"@@~The process is still running|@@class="typefieldcomment leftbottom endcom"@@{{{*)}}}|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Exited>> <<span class="keyword"|of>> <<span class="code type"|Unix.process_status>>|@@class="typefieldcomment lefttop startcom"@@{{{(*}}}|@@class="typefieldcomment lefttop"@@~The process has exited|@@class="typefieldcomment leftbottom endcom"@@{{{*)}}}|>>
<<div class="info"|~State of a sub~-process\\
>>

<<div class="code"|<<span name="TYPEprocess_none"|<<span class="keyword"|class>> <<a_api text="process_none" | class Lwt_process.process_none >>>> : <<span class="code type"|?timeout:float -> ?env:string array -> ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> -> ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> -> ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> >><<span class='code'|object>><<a_api text=".." | class Lwt_process.process_none >><<span class='code'|end>>>><<div id="VALopen_process_none" class="code"|<<span class="keyword"|val>> open~_process~_none : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> <<a_api text="process_none" | class type Lwt_process.process_none >>>>>><<div id="VALwith_process_none" class="code"|<<span class="keyword"|val>> with~_process~_none : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> (<<a_api text="process_none" | class type Lwt_process.process_none >> -> 'a <<a_api text="Lwt.t" | type Lwt.t >>) -> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="code"|<<span name="TYPEprocess_in"|<<span class="keyword"|class>> <<a_api text="process_in" | class Lwt_process.process_in >>>> : <<span class="code type"|?timeout:float -> ?env:string array -> ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> -> ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> >><<span class='code'|object>><<a_api text=".." | class Lwt_process.process_in >><<span class='code'|end>>>><<div id="VALopen_process_in" class="code"|<<span class="keyword"|val>> open~_process~_in : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> <<a_api text="process_in" | class type Lwt_process.process_in >>>>>><<div id="VALwith_process_in" class="code"|<<span class="keyword"|val>> with~_process~_in : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdin:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> (<<a_api text="process_in" | class type Lwt_process.process_in >> -> 'a <<a_api text="Lwt.t" | type Lwt.t >>) -> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="code"|<<span name="TYPEprocess_out"|<<span class="keyword"|class>> <<a_api text="process_out" | class Lwt_process.process_out >>>> : <<span class="code type"|?timeout:float -> ?env:string array -> ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> -> ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> >><<span class='code'|object>><<a_api text=".." | class Lwt_process.process_out >><<span class='code'|end>>>><<div id="VALopen_process_out" class="code"|<<span class="keyword"|val>> open~_process~_out : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> <<a_api text="process_out" | class type Lwt_process.process_out >>>>>><<div id="VALwith_process_out" class="code"|<<span class="keyword"|val>> with~_process~_out : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stdout:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> (<<a_api text="process_out" | class type Lwt_process.process_out >> -> 'a <<a_api text="Lwt.t" | type Lwt.t >>) -> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="code"|<<span name="TYPEprocess"|<<span class="keyword"|class>> <<a_api text="process" | class Lwt_process.process >>>> : <<span class="code type"|?timeout:float -> ?env:string array -> ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> >><<span class='code'|object>><<a_api text=".." | class Lwt_process.process >><<span class='code'|end>>>><<div id="VALopen_process" class="code"|<<span class="keyword"|val>> open~_process : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> -> <<a_api text="command" | type Lwt_process.command >> -> <<a_api text="process" | class type Lwt_process.process >>>>>><<div id="VALwith_process" class="code"|<<span class="keyword"|val>> with~_process : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  ?stderr:<<a_api text="redirection" | type Lwt_process.redirection >> ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> (<<a_api text="process" | class type Lwt_process.process >> -> 'a <<a_api text="Lwt.t" | type Lwt.t >>) -> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>><<div class="code"|<<span name="TYPEprocess_full"|<<span class="keyword"|class>> <<a_api text="process_full" | class Lwt_process.process_full >>>> : <<span class="code type"|?timeout:float -> ?env:string array -> <<a_api text="command" | type Lwt_process.command >> -> >><<span class='code'|object>><<a_api text=".." | class Lwt_process.process_full >><<span class='code'|end>>>><<div id="VALopen_process_full" class="code"|<<span class="keyword"|val>> open~_process~_full : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array -> <<a_api text="command" | type Lwt_process.command >> -> <<a_api text="process_full" | class type Lwt_process.process_full >>>>>><<div id="VALwith_process_full" class="code"|<<span class="keyword"|val>> with~_process~_full : <<span class="code type"|\\{{{   }}}?timeout:float ->\\{{{   }}}  ?env:string array ->\\{{{   }}}  <<a_api text="command" | type Lwt_process.command >> -> (<<a_api text="process_full" | class type Lwt_process.process_full >> -> 'a <<a_api text="Lwt.t" | type Lwt.t >>) -> 'a <<a_api text="Lwt.t" | type Lwt.t >>>>>>