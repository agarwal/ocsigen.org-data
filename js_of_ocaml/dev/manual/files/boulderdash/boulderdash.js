// Generated by js_of_ocaml 2.8.1
(function(joo_global_object)
   {"use strict";
    function raw_array_sub(a,i,l)
     {var b=new Array(l);for(var j=0;j<l;j++)b[j]=a[i+j];return b}
    function caml_subarray_to_string(a,i,len)
     {var f=String.fromCharCode;
      if(i==0&&len<=4096&&len==a.length)return f.apply(null,a);
      var s="";
      for(;0<len;i+=1024,len-=1024)
       s+=f.apply(null,raw_array_sub(a,i,Math.min(len,1024)));
      return s}
    function caml_convert_string_to_array(s)
     {if(joo_global_object.Uint8Array)
       var a=new (joo_global_object.Uint8Array)(s.l);
      else
       var a=new Array(s.l);
      var b=s.c,l=b.length,i=0;
      for(;i<l;i++)a[i]=b.charCodeAt(i);
      for(l=s.l;i<l;i++)a[i]=0;
      s.c=a;
      s.t=4;
      return a}
    function caml_blit_string(s1,i1,s2,i2,len)
     {if(len==0)return 0;
      if(i2==0&&(len>=s2.l||s2.t==2&&len>=s2.c.length))
       {s2.c=
        s1.t==4
         ?caml_subarray_to_string(s1.c,i1,len)
         :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
        s2.t=s2.c.length==s2.l?0:2}
      else
       if(s2.t==2&&i2==s2.c.length)
        {s2.c+=
         s1.t==4
          ?caml_subarray_to_string(s1.c,i1,len)
          :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
         s2.t=s2.c.length==s2.l?0:2}
       else
        {if(s2.t!=4)caml_convert_string_to_array(s2);
         var c1=s1.c,c2=s2.c;
         if(s1.t==4)
          for(var i=0;i<len;i++)c2[i2+i]=c1[i1+i];
         else
          {var l=Math.min(len,c1.length-i1);
           for(var i=0;i<l;i++)c2[i2+i]=c1.charCodeAt(i1+i);
           for(;i<len;i++)c2[i2+i]=0}}
      return 0}
    function caml_str_repeat(n,s)
     {if(s.repeat)return s.repeat(n);
      var r="",l=0;
      if(n==0)return r;
      for(;;)
       {if(n&1)r+=s;n>>=1;if(n==0)return r;s+=s;l++;if(l==9)s.slice(0,1)}}
    function caml_convert_string_to_bytes(s)
     {if(s.t==2)
       s.c+=caml_str_repeat(s.l-s.c.length,"\0");
      else
       s.c=caml_subarray_to_string(s.c,0,s.c.length);
      s.t=0}
    function caml_bytes_of_string(s)
     {if((s.t&6)!=0)caml_convert_string_to_bytes(s);return s.c}
    function raw_array_append_one(a,x)
     {var l=a.length,b=new Array(l+1),i=0;
      for(;i<l;i++)b[i]=a[i];
      b[i]=x;
      return b}
    function caml_call_gen(f,args)
     {if(f.fun)return caml_call_gen(f.fun,args);
      var n=f.length,argsLen=args.length,d=n-argsLen;
      if(d==0)
       return f.apply(null,args);
      else
       if(d<0)
        return caml_call_gen
                (f.apply(null,raw_array_sub(args,0,n)),
                 raw_array_sub(args,n,argsLen-n));
       else
        return function(x)
         {return caml_call_gen(f,raw_array_append_one(args,x))}}
    function caml_raise_with_arg(tag,arg){throw [0,tag,arg]}
    function caml_is_ascii(s)
     {if(s.length<24)
       {for(var i=0;i<s.length;i++)if(s.charCodeAt(i)>127)return false;
        return true}
      else
       return !/[^\x00-\x7f]/.test(s)}
    function caml_utf16_of_utf8(s)
     {for(var b="",t="",c,c1,c2,v,i=0,l=s.length;i<l;i++)
       {c1=s.charCodeAt(i);
        if(c1<128)
         {for(var j=i+1;j<l&&(c1=s.charCodeAt(j))<128;j++);
          if(j-i>512)
           {t.substr(0,1);b+=t;t="";b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        v=1;
        if(++i<l&&((c2=s.charCodeAt(i))&-64)==128)
         {c=c2+(c1<<6);
          if(c1<224)
           {v=c-12416;if(v<128)v=1}
          else
           {v=2;
            if(++i<l&&((c2=s.charCodeAt(i))&-64)==128)
             {c=c2+(c<<6);
              if(c1<240)
               {v=c-925824;if(v<2048||v>=55295&&v<57344)v=2}
              else
               {v=3;
                if(++i<l&&((c2=s.charCodeAt(i))&-64)==128&&c1<245)
                 {v=c2-63447168+(c<<6);if(v<65536||v>1114111)v=3}}}}}
        if(v<4)
         {i-=v;t+="\ufffd"}
        else
         if(v>65535)
          t+=String.fromCharCode(55232+(v>>10),56320+(v&1023));
         else
          t+=String.fromCharCode(v);
        if(t.length>1024){t.substr(0,1);b+=t;t=""}}
      return b+t}
    function caml_to_js_string(s)
     {switch(s.t)
       {case 9:return s.c;
        default:caml_convert_string_to_bytes(s);case 0:
         if(caml_is_ascii(s.c)){s.t=9;return s.c}s.t=8;
        case 8:return caml_utf16_of_utf8(s.c)
        }}
    function MlString(tag,contents,length)
     {this.t=tag;this.c=contents;this.l=length}
    MlString.prototype.toString=function(){return caml_to_js_string(this)};
    function caml_new_string(s){return new MlString(0,s,s.length)}
    function caml_raise_with_string(tag,msg)
     {caml_raise_with_arg(tag,caml_new_string(msg))}
    var caml_global_data=[0];
    function caml_invalid_argument(msg)
     {caml_raise_with_string(caml_global_data.Invalid_argument,msg)}
    function caml_array_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_check_bound(array,index)
     {if(index>>>0>=array.length-1)caml_array_bound_error();return array}
    function caml_classify_float(x)
     {if(isFinite(x))
       {if(Math.abs(x)>=2.22507385850720138e-308)return 0;
        if(x!=0)return 1;
        return 2}
      return isNaN(x)?4:3}
    function caml_failwith(msg)
     {caml_raise_with_string(caml_global_data.Failure,msg)}
    function caml_convert_raw_backtrace_slot()
     {caml_failwith("caml_convert_raw_backtrace_slot")}
    function caml_create_string(len)
     {if(len<0)caml_invalid_argument("String.create");
      return new MlString(len?2:9,"",len)}
    function caml_int64_compare(x,y)
     {var x3=x[3]<<16,y3=y[3]<<16;
      if(x3>y3)return 1;
      if(x3<y3)return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int_compare(a,b){if(a<b)return -1;if(a==b)return 0;return 1}
    function caml_string_compare(s1,s2)
     {s1.t&6&&caml_convert_string_to_bytes(s1);
      s2.t&6&&caml_convert_string_to_bytes(s2);
      return s1.c<s2.c?-1:s1.c>s2.c?1:0}
    function caml_compare_val(a,b,total)
     {var stack=[];
      for(;;)
       {if(!(total&&a===b))
         if(a instanceof MlString)
          if(b instanceof MlString)
           {if(a!==b){var x=caml_string_compare(a,b);if(x!=0)return x}}
          else
           return 1;
         else
          if(a instanceof Array&&a[0]===(a[0]|0))
           {var ta=a[0];
            if(ta===254)ta=0;
            if(ta===250)
             {a=a[1];continue}
            else
             if(b instanceof Array&&b[0]===(b[0]|0))
              {var tb=b[0];
               if(tb===254)tb=0;
               if(tb===250)
                {b=b[1];continue}
               else
                if(ta!=tb)
                 return ta<tb?-1:1;
                else
                 switch(ta)
                  {case 248:
                    var x=caml_int_compare(a[2],b[2]);if(x!=0)return x;break;
                   case 251:caml_invalid_argument("equal: abstract value");
                   case 255:
                    var x=caml_int64_compare(a,b);if(x!=0)return x;break;
                   default:
                    if(a.length!=b.length)return a.length<b.length?-1:1;
                    if(a.length>1)stack.push(a,b,1)}}
             else
              return 1}
          else
           if(b instanceof MlString||b instanceof Array&&b[0]===(b[0]|0))
            return -1;
           else
            if(typeof a!="number"&&a&&a.compare)
             return a.compare(b,total);
            else
             if(typeof a=="function")
              caml_invalid_argument("equal: functional value");
             else
              {if(a<b)return -1;
               if(a>b)return 1;
               if(a!=b)
                {if(!total)return NaN;if(a==a)return 1;if(b==b)return -1}}
        if(stack.length==0)return 0;
        var i=stack.pop();
        b=stack.pop();
        a=stack.pop();
        if(i+1<a.length)stack.push(a,b,i+1);
        a=a[i];
        b=b[i]}}
    function caml_equal(x,y){return +(caml_compare_val(x,y,false)==0)}
    function caml_fill_string(s,i,l,c)
     {if(l>0)
       if(i==0&&(l>=s.l||s.t==2&&l>=s.c.length))
        if(c==0)
         {s.c="";s.t=2}
        else
         {s.c=caml_str_repeat(l,String.fromCharCode(c));s.t=l==s.l?0:2}
       else
        {if(s.t!=4)caml_convert_string_to_array(s);for(l+=i;i<l;i++)s.c[i]=c}
      return 0}
    function caml_parse_format(fmt)
     {fmt=caml_bytes_of_string(fmt);
      var len=fmt.length;
      if(len>31)caml_invalid_argument("format_int: format too long");
      var
       f=
        {justify:"+",
         signstyle:"-",
         filler:" ",
         alternate:false,
         base:0,
         signedconv:false,
         width:0,
         uppercase:false,
         sign:1,
         prec:-1,
         conv:"f"};
      for(var i=0;i<len;i++)
       {var c=fmt.charAt(i);
        switch(c)
         {case "-":f.justify="-";break;
          case "+":
          case " ":f.signstyle=c;break;
          case "0":f.filler="0";break;
          case "#":f.alternate=true;break;
          case "1":
          case "2":
          case "3":
          case "4":
          case "5":
          case "6":
          case "7":
          case "8":
          case "9":
           f.width=0;
           while(c=fmt.charCodeAt(i)-48,c>=0&&c<=9){f.width=f.width*10+c;i++}
           i--;
           break;
          case ".":
           f.prec=0;
           i++;
           while(c=fmt.charCodeAt(i)-48,c>=0&&c<=9){f.prec=f.prec*10+c;i++}
           i--;
          case "d":
          case "i":f.signedconv=true;
          case "u":f.base=10;break;
          case "x":f.base=16;break;
          case "X":f.base=16;f.uppercase=true;break;
          case "o":f.base=8;break;
          case "e":
          case "f":
          case "g":f.signedconv=true;f.conv=c;break;
          case "E":
          case "F":
          case "G":
           f.signedconv=true;f.uppercase=true;f.conv=c.toLowerCase();break
          }}
      return f}
    function caml_finish_formatting(f,rawbuffer)
     {if(f.uppercase)rawbuffer=rawbuffer.toUpperCase();
      var len=rawbuffer.length;
      if(f.signedconv&&(f.sign<0||f.signstyle!="-"))len++;
      if(f.alternate){if(f.base==8)len+=1;if(f.base==16)len+=2}
      var buffer="";
      if(f.justify=="+"&&f.filler==" ")
       for(var i=len;i<f.width;i++)buffer+=" ";
      if(f.signedconv)
       if(f.sign<0)buffer+="-";else if(f.signstyle!="-")buffer+=f.signstyle;
      if(f.alternate&&f.base==8)buffer+="0";
      if(f.alternate&&f.base==16)buffer+="0x";
      if(f.justify=="+"&&f.filler=="0")
       for(var i=len;i<f.width;i++)buffer+="0";
      buffer+=rawbuffer;
      if(f.justify=="-")for(var i=len;i<f.width;i++)buffer+=" ";
      return caml_new_string(buffer)}
    function caml_format_float(fmt,x)
     {var s,f=caml_parse_format(fmt),prec=f.prec<0?6:f.prec;
      if(x<0||x==0&&1/x==-Infinity){f.sign=-1;x=-x}
      if(isNaN(x))
       {s="nan";f.filler=" "}
      else
       if(!isFinite(x))
        {s="inf";f.filler=" "}
       else
        switch(f.conv)
         {case "e":
           var s=x.toExponential(prec),i=s.length;
           if(s.charAt(i-3)=="e")s=s.slice(0,i-1)+"0"+s.slice(i-1);
           break;
          case "f":s=x.toFixed(prec);break;
          case "g":
           prec=prec?prec:1;
           s=x.toExponential(prec-1);
           var j=s.indexOf("e"),exp=+s.slice(j+1);
           if(exp<-4||x>=1e+21||x.toFixed(0).length>prec)
            {var i=j-1;
             while(s.charAt(i)=="0")i--;
             if(s.charAt(i)==".")i--;
             s=s.slice(0,i+1)+s.slice(j);
             i=s.length;
             if(s.charAt(i-3)=="e")s=s.slice(0,i-1)+"0"+s.slice(i-1);
             break}
           else
            {var p=prec;
             if(exp<0)
              {p-=exp+1;s=x.toFixed(p)}
             else
              while(s=x.toFixed(p),s.length>prec+1)p--;
             if(p)
              {var i=s.length-1;
               while(s.charAt(i)=="0")i--;
               if(s.charAt(i)==".")i--;
               s=s.slice(0,i+1)}}
           break
          }
      return caml_finish_formatting(f,s)}
    function caml_format_int(fmt,i)
     {if(caml_bytes_of_string(fmt)=="%d")return caml_new_string(""+i);
      var f=caml_parse_format(fmt);
      if(i<0)if(f.signedconv){f.sign=-1;i=-i}else i>>>=0;
      var s=i.toString(f.base);
      if(f.prec>=0)
       {f.filler=" ";var n=f.prec-s.length;if(n>0)s=caml_str_repeat(n,"0")+s}
      return caml_finish_formatting(f,s)}
    function caml_raise_constant(tag){throw tag}
    function caml_raise_not_found()
     {caml_raise_constant(caml_global_data.Not_found)}
    function unix_gettimeofday(){return new Date().getTime()/1e3}
    function unix_time(){return Math.floor(unix_gettimeofday())}
    function caml_string_of_array(a){return new MlString(4,a,a.length)}
    var file_inode=0;
    function MlDir()
     {this.content={};
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlDir.prototype=
    {exists:function(name){return this.content[name]?1:0},
     mk:function(name,c){this.content[name]=c},
     get:function(name){return this.content[name]},
     list:function(){var a=[];for(var n in this.content)a.push(n);return a},
     remove:function(name){delete this.content[name]}};
    var caml_root_dir=new MlDir();
    caml_root_dir.mk("",new MlDir());
    function caml_raise_sys_error(msg)
     {caml_raise_with_string(caml_global_data.Sys_error,msg)}
    function caml_raise_no_such_file(name)
     {name=name instanceof MlString?name.toString():name;
      caml_raise_sys_error(name+": No such file or directory")}
    function caml_fs_content(path)
     {var dir=caml_root_dir;
      for(var i=0;i<path.length;i++)
       {if(!(dir.exists&&dir.exists(path[i])))
         caml_raise_no_such_file(path.orig);
        dir=dir.get(path[i])}
      return dir}
    var caml_current_dir="/";
    function caml_make_path(name)
     {name=name instanceof MlString?name.toString():name;
      if(name.charCodeAt(0)!=47)name=caml_current_dir+name;
      var comp=name.split("/"),ncomp=[];
      for(var i=0;i<comp.length;i++)
       switch(comp[i])
        {case "..":if(ncomp.length>1)ncomp.pop();break;
         case ".":break;
         case "":if(ncomp.length==0)ncomp.push("");break;
         default:ncomp.push(comp[i]);break}
      ncomp.orig=name;
      return ncomp}
    function MlFile(content)
     {this.data=content;
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlFile.prototype=
    {truncate:function(){this.data=caml_create_string(0);this.modified()},
     modified:function(){var now=unix_time();this.atime=now;this.mtime=now}};
    function caml_fs_file_content(name)
     {var path=caml_make_path(name),f=caml_fs_content(path);
      if(f instanceof MlFile){var now=unix_time();f.atime=now;return f.data}
      caml_raise_not_found()}
    function caml_array_of_string(s)
     {if(s.t!=4)caml_convert_string_to_array(s);return s.c}
    function caml_fs_register(name,content)
     {var path=caml_make_path(name),dir=caml_root_dir;
      for(var i=0;i<path.length-1;i++)
       {var d=path[i];
        if(!dir.exists(d))dir.mk(d,new MlDir());
        dir=dir.get(d);
        if(!(dir instanceof MlDir))
         caml_raise_sys_error(path.orig+" : file already exists")}
      var d=path[path.length-1];
      if(dir.exists(d))
       caml_raise_sys_error(path.orig+" : file already exists");
      if(content instanceof MlDir)
       dir.mk(d,content);
      else
       if(content instanceof MlFile)
        dir.mk(d,content);
       else
        if(content instanceof MlString)
         dir.mk(d,new MlFile(content));
        else
         if(content instanceof Array)
          dir.mk(d,new MlFile(caml_string_of_array(content)));
         else
          if(content.toString)
           {var mlstring=caml_new_string(content.toString());
            dir.mk(d,new MlFile(mlstring))}
          else
           caml_invalid_argument("caml_fs_register");
      return 0}
    function caml_get_exception_raw_backtrace(){return [0]}
    function caml_greaterequal(x,y){return +(caml_compare_val(x,y,false)>=0)}
    function caml_int64_is_zero(x){return (x[3]|x[2]|x[1])==0}
    function caml_int64_of_int32(x)
     {return [255,x&16777215,x>>24&16777215,x>>31&65535]}
    function caml_obj_dup(x)
     {var l=x.length,a=new Array(l);for(var i=0;i<l;i++)a[i]=x[i];return a}
    function caml_int64_sub(x,y)
     {var z1=x[1]-y[1],z2=x[2]-y[2]+(z1>>24),z3=x[3]-y[3]+(z2>>24);
      return [255,z1&16777215,z2&16777215,z3&65535]}
    function caml_int64_ucompare(x,y)
     {if(x[3]>y[3])return 1;
      if(x[3]<y[3])return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int64_lsl1(x)
     {x[3]=x[3]<<1|x[2]>>23;
      x[2]=(x[2]<<1|x[1]>>23)&16777215;
      x[1]=x[1]<<1&16777215}
    function caml_int64_lsr1(x)
     {x[1]=(x[1]>>>1|x[2]<<23)&16777215;
      x[2]=(x[2]>>>1|x[3]<<23)&16777215;
      x[3]=x[3]>>>1}
    function caml_int64_udivmod(x,y)
     {var
       offset=0,
       modulus=caml_obj_dup(x),
       divisor=caml_obj_dup(y),
       quotient=[255,0,0,0];
      while(caml_int64_ucompare(modulus,divisor)>0)
       {offset++;caml_int64_lsl1(divisor)}
      while(offset>=0)
       {offset--;
        caml_int64_lsl1(quotient);
        if(caml_int64_ucompare(modulus,divisor)>=0)
         {quotient[1]++;modulus=caml_int64_sub(modulus,divisor)}
        caml_int64_lsr1(divisor)}
      return [0,quotient,modulus]}
    function caml_int64_to_int32(x){return x[1]|x[2]<<24}
    function caml_int64_is_negative(x){return x[3]<<16<0}
    function caml_int64_neg(x)
     {var y1=-x[1],y2=-x[2]+(y1>>24),y3=-x[3]+(y2>>24);
      return [255,y1&16777215,y2&16777215,y3&65535]}
    function caml_int64_format(fmt,x)
     {var f=caml_parse_format(fmt);
      if(f.signedconv&&caml_int64_is_negative(x))
       {f.sign=-1;x=caml_int64_neg(x)}
      var
       buffer="",
       wbase=caml_int64_of_int32(f.base),
       cvtbl="0123456789abcdef";
      do
       {var p=caml_int64_udivmod(x,wbase);
        x=p[1];
        buffer=cvtbl.charAt(caml_int64_to_int32(p[2]))+buffer}
      while
       (!caml_int64_is_zero(x));
      if(f.prec>=0)
       {f.filler=" ";
        var n=f.prec-buffer.length;
        if(n>0)buffer=caml_str_repeat(n,"0")+buffer}
      return caml_finish_formatting(f,buffer)}
    function caml_string_unsafe_get(s,i)
     {switch(s.t&6)
       {default:if(i>=s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function caml_ml_string_length(s){return s.l}
    function caml_parse_sign_and_base(s)
     {var
       i=0,
       len=caml_ml_string_length(s),
       base=10,
       sign=len>0&&caml_string_unsafe_get(s,0)==45?(i++,-1):1;
      if(i+1<len&&caml_string_unsafe_get(s,i)==48)
       switch(caml_string_unsafe_get(s,i+1))
        {case 120:
         case 88:base=16;i+=2;break;
         case 111:
         case 79:base=8;i+=2;break;
         case 98:
         case 66:base=2;i+=2;break
         }
      return [i,sign,base]}
    function caml_parse_digit(c)
     {if(c>=48&&c<=57)return c-48;
      if(c>=65&&c<=90)return c-55;
      if(c>=97&&c<=122)return c-87;
      return -1}
    function caml_int_of_string(s)
     {var
       r=caml_parse_sign_and_base(s),
       i=r[0],
       sign=r[1],
       base=r[2],
       len=caml_ml_string_length(s),
       threshold=-1>>>0,
       c=i<len?caml_string_unsafe_get(s,i):0,
       d=caml_parse_digit(c);
      if(d<0||d>=base)caml_failwith("int_of_string");
      var res=d;
      for(i++;i<len;i++)
       {c=caml_string_unsafe_get(s,i);
        if(c==95)continue;
        d=caml_parse_digit(c);
        if(d<0||d>=base)break;
        res=base*res+d;
        if(res>threshold)caml_failwith("int_of_string")}
      if(i!=len)caml_failwith("int_of_string");
      res=sign*res;
      if(base==10&&(res|0)!=res)caml_failwith("int_of_string");
      return res|0}
    function caml_is_printable(c){return +(c>31&&c<127)}
    function caml_js_get_console()
     {var
       c=joo_global_object.console?joo_global_object.console:{},
       m=
        ["log",
         "debug",
         "info",
         "warn",
         "error",
         "assert",
         "dir",
         "dirxml",
         "trace",
         "group",
         "groupCollapsed",
         "groupEnd",
         "time",
         "timeEnd"];
      function f(){}
      for(var i=0;i<m.length;i++)if(!c[m[i]])c[m[i]]=f;
      return c}
    var caml_js_regexps={amp:/&/g,lt:/</g,quot:/\"/g,all:/[&<\"]/};
    function caml_js_html_escape(s)
     {if(!caml_js_regexps.all.test(s))return s;
      return s.replace(caml_js_regexps.amp,"&amp;").replace
               (caml_js_regexps.lt,"&lt;").replace
              (caml_js_regexps.quot,"&quot;")}
    function caml_js_on_ie()
     {var
       ua=
        joo_global_object.navigator?joo_global_object.navigator.userAgent:"";
      return ua.indexOf("MSIE")!=-1&&ua.indexOf("Opera")!=0}
    function caml_js_to_byte_string(s){return caml_new_string(s)}
    function caml_utf8_of_utf16(s)
     {for(var b="",t=b,c,d,i=0,l=s.length;i<l;i++)
       {c=s.charCodeAt(i);
        if(c<128)
         {for(var j=i+1;j<l&&(c=s.charCodeAt(j))<128;j++);
          if(j-i>512)
           {t.substr(0,1);b+=t;t="";b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        if(c<2048)
         {t+=String.fromCharCode(192|c>>6);t+=String.fromCharCode(128|c&63)}
        else
         if(c<55296||c>=57343)
          t+=String.fromCharCode(224|c>>12,128|c>>6&63,128|c&63);
         else
          if(c>=56319||i+1==l||(d=s.charCodeAt(i+1))<56320||d>57343)
           t+="\xef\xbf\xbd";
          else
           {i++;
            c=(c<<10)+d-56613888;
            t+=
            String.fromCharCode(240|c>>18,128|c>>12&63,128|c>>6&63,128|c&63)}
        if(t.length>1024){t.substr(0,1);b+=t;t=""}}
      return b+t}
    function caml_js_to_string(s)
     {var tag=9;
      if(!caml_is_ascii(s))tag=8,s=caml_utf8_of_utf16(s);
      return new MlString(tag,s,s.length)}
    function raw_array_copy(a)
     {var l=a.length,b=new Array(l);for(var i=0;i<l;i++)b[i]=a[i];return b}
    function caml_js_wrap_callback(f)
     {return function()
       {return arguments.length>0
                ?caml_call_gen(f,raw_array_copy(arguments))
                :caml_call_gen(f,[undefined])}}
    function raw_array_cons(a,x)
     {var l=a.length,b=new Array(l+1);
      b[0]=x;
      for(var i=1;i<=l;i++)b[i]=a[i-1];
      return b}
    function caml_js_wrap_meth_callback(f)
     {return function()
       {return caml_call_gen(f,raw_array_cons(arguments,this))}}
    function caml_make_vect(len,init)
     {var len=len+1|0,b=new Array(len);
      b[0]=0;
      for(var i=1;i<len;i++)b[i]=init;
      return b}
    function caml_ml_flush(oc)
     {if(!oc.opened)caml_raise_sys_error("Cannot flush a closed channel");
      if(oc.buffer=="")return 0;
      if(oc.output)
       switch(oc.output.length)
        {case 2:oc.output(oc,oc.buffer);break;default:oc.output(oc.buffer)}
      oc.buffer="";
      return 0}
    function caml_sys_is_directory(name)
     {var path=caml_make_path(name),dir=caml_fs_content(path);
      return dir instanceof MlDir?1:0}
    function caml_sys_file_exists(name)
     {var dir=caml_root_dir,path=caml_make_path(name),auto_load,pos;
      for(var i=0;i<path.length;i++)
       {if(dir.auto){auto_load=dir.auto;pos=i}
        if(!(dir.exists&&dir.exists(path[i])))
         return auto_load?auto_load(path,pos):0;
        dir=dir.get(path[i])}
      return 1}
    function caml_sys_open_internal(idx,file,flags)
     {if(caml_global_data.fds===undefined)caml_global_data.fds=new Array();
      flags=flags?flags:{};
      var info={};
      info.file=file;
      info.offset=flags.append?caml_ml_string_length(file.data):0;
      info.flags=flags;
      caml_global_data.fds[idx]=info;
      caml_global_data.fd_last_idx=idx;
      return idx}
    function caml_sys_open(name,flags,_perms)
     {var f={};
      while(flags)
       {switch(flags[1])
         {case 0:f.rdonly=1;break;
          case 1:f.wronly=1;break;
          case 2:f.append=1;break;
          case 3:f.create=1;break;
          case 4:f.truncate=1;break;
          case 5:f.excl=1;break;
          case 6:f.binary=1;break;
          case 7:f.text=1;break;
          case 8:f.nonblock=1;break
          }
        flags=flags[2]}
      var name2=name.toString(),path=caml_make_path(name);
      if(f.rdonly&&f.wronly)
       caml_raise_sys_error
        (name2+" : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text&&f.binary)
       caml_raise_sys_error
        (name2+" : flags Open_text and Open_binary are not compatible");
      if(caml_sys_file_exists(name))
       {if(caml_sys_is_directory(name))
         caml_raise_sys_error(name2+" : is a directory");
        if(f.create&&f.excl)
         caml_raise_sys_error(name2+" : file already exists");
        var
         idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0,
         file=caml_fs_content(path);
        if(f.truncate)file.truncate();
        return caml_sys_open_internal(idx+1,file,f)}
      else
       if(f.create)
        {var idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;
         caml_fs_register(name,caml_create_string(0));
         var file=caml_fs_content(path);
         return caml_sys_open_internal(idx+1,file,f)}
       else
        caml_raise_no_such_file(name)}
    caml_sys_open_internal(0,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(1,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(2,new MlFile(caml_create_string(0)));
    function caml_ml_open_descriptor_in(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.wronly)caml_raise_sys_error("fd "+fd+" is writeonly");
      return {file:data.file,offset:data.offset,fd:fd,opened:true,refill:null}}
    function js_print_stderr(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stderr.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.error&&v.error(s)}}
    function js_print_stdout(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stdout.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.log&&v.log(s)}}
    var caml_ml_out_channels=new Array();
    function caml_std_output(chan,s)
     {var
       str=caml_new_string(s),
       slen=caml_ml_string_length(str),
       clen=caml_ml_string_length(chan.file.data),
       offset=chan.offset;
      if(offset+slen>=clen)
       {var new_str=caml_create_string(offset+slen);
        caml_blit_string(chan.file.data,0,new_str,0,clen);
        caml_blit_string(str,0,new_str,offset,slen);
        chan.file.data=new_str}
      chan.offset+=slen;
      chan.file.modified();
      return 0}
    function caml_ml_open_descriptor_out(fd)
     {var output;
      switch(fd)
       {case 1:output=js_print_stdout;break;
        case 2:output=js_print_stderr;break;
        default:output=caml_std_output}
      var data=caml_global_data.fds[fd];
      if(data.flags.rdonly)caml_raise_sys_error("fd "+fd+" is readonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         buffer:"",
         output:output};
      caml_ml_out_channels[channel.fd]=channel;
      return channel}
    function caml_ml_out_channels_list()
     {var l=0;
      for(var c in caml_ml_out_channels)
       if(caml_ml_out_channels[c].opened)l=[0,caml_ml_out_channels[c],l];
      return l}
    function caml_ml_output(oc,buffer,offset,len)
     {if(!oc.opened)caml_raise_sys_error("Cannot output to a closed channel");
      var string;
      if(offset==0&&caml_ml_string_length(buffer)==len)
       string=buffer;
      else
       {string=caml_create_string(len);
        caml_blit_string(buffer,offset,string,0,len)}
      var jsstring=string.toString(),id=jsstring.lastIndexOf("\n");
      if(id<0)
       oc.buffer+=jsstring;
      else
       {oc.buffer+=jsstring.substr(0,id+1);
        caml_ml_flush(oc);
        oc.buffer+=jsstring.substr(id+1)}
      return 0}
    function caml_ml_output_char(oc,c)
     {var s=caml_new_string(String.fromCharCode(c));
      caml_ml_output(oc,s,0,1);
      return 0}
    if(!Math.imul)
     Math.imul=function(x,y){y|=0;return ((x>>16)*y<<16)+(x&65535)*y|0};
    var caml_mul=Math.imul;
    function caml_notequal(x,y){return +(caml_compare_val(x,y,false)!=0)}
    function caml_obj_is_block(x){return +(x instanceof Array)}
    function caml_obj_tag(x)
     {return x instanceof Array?x[0]:x instanceof MlString?252:1e3}
    function caml_register_global(n,v,name_opt)
     {caml_global_data[n+1]=v;if(name_opt)caml_global_data[name_opt]=v}
    var caml_named_values={};
    function caml_register_named_value(nm,v)
     {caml_named_values[caml_bytes_of_string(nm)]=v;return 0}
    var caml_oo_last_id=0;
    function caml_set_oo_id(b){b[2]=caml_oo_last_id++;return b}
    function caml_string_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_string_get(s,i)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_get(s,i)}
    function caml_string_equal(s1,s2)
     {s1.t&6&&caml_convert_string_to_bytes(s1);
      s2.t&6&&caml_convert_string_to_bytes(s2);
      return s1.c==s2.c?1:0}
    function caml_string_notequal(s1,s2){return 1-caml_string_equal(s1,s2)}
    function caml_string_unsafe_set(s,i,c)
     {c&=255;
      if(s.t!=4)
       {if(i==s.c.length)
         {s.c+=String.fromCharCode(c);if(i+1==s.l)s.t=0;return 0}
        caml_convert_string_to_array(s)}
      s.c[i]=c;
      return 0}
    function caml_string_set(s,i,c)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_set(s,i,c)}
    function caml_sys_exit(code)
     {var g=joo_global_object;
      if(g.quit)g.quit(code);
      if(g.process&&g.process.exit)g.process.exit(code);
      caml_invalid_argument("Function 'exit' not implemented")}
    var caml_initial_time=new Date()*0.001;
    function caml_sys_time(){return new Date()*0.001-caml_initial_time}
    function caml_update_dummy(x,y)
     {if(typeof y==="function"){x.fun=y;return 0}
      if(y.fun){x.fun=y.fun;return 0}
      var i=y.length;
      while(i--)x[i]=y[i];
      return 0}
    function caml_return_exn_constant(tag){return tag}
    function caml_named_value(nm){return caml_named_values[nm]}
    function caml_wrap_exception(e)
     {if(e instanceof Array)return e;
      if
       (joo_global_object.RangeError&&
        e instanceof joo_global_object.RangeError&&
        e.message&&
        e.message.match(/maximum call stack/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if
       (joo_global_object.InternalError&&
        e instanceof joo_global_object.InternalError&&
        e.message&&
        e.message.match(/too much recursion/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if(e instanceof joo_global_object.Error)
       return [0,caml_named_value("jsError"),e];
      return [0,caml_global_data.Failure,caml_js_to_string(String(e))]}
    function caml_call1(f,a0){return f.length==1?f(a0):caml_call_gen(f,[a0])}
    function caml_call2(f,a0,a1)
     {return f.length==2?f(a0,a1):caml_call_gen(f,[a0,a1])}
    function caml_call3(f,a0,a1,a2)
     {return f.length==3?f(a0,a1,a2):caml_call_gen(f,[a0,a1,a2])}
    function caml_call5(f,a0,a1,a2,a3,a4)
     {return f.length==5?f(a0,a1,a2,a3,a4):caml_call_gen(f,[a0,a1,a2,a3,a4])}
    caml_fs_register
     ("/maps/level0.map",
      "###################\n#S........+.......#\n#+....+.........+##\n#...+........+.#.E#\n###################\n");
    caml_fs_register
     ("/maps/level1.map",
      "##################\n#S  X #          #\n#   + #.X..XX....#\n#   X #.+..++....#\n#   + #    +     #\n#     #   XX     #\n#     .   +.    E#\n##################\n");
    caml_fs_register
     ("/maps/level2.map",
      "####################\n#S#          XXXXX #\n# #    XX    .XXX. #\n# #   .XX.    .X.  #\n# #    +.      +   #\n# ##   XX          #\n#      +X.        E#\n####################\n");
    caml_fs_register
     ("/maps/level3.map",
      "##############\n#XXXX#       #\n#XXX+#  +    #\n#X..S#  X##  #\n#+     +X+#  #\n#    #X#X#   #\n#   +E....   #\n#   #++      #\n##############\n");
    caml_fs_register
     ("/maps/level4.map",
      "########################################\n#...... ..+.X .....X.X....... ....X....#\n#.XSX...... .........X+..X.... ..... ..#\n#.......... ..X.....X.X..X........X....#\n#X.XX.........X......X..X....X...X.....#\n#X. X......... X..X........X......X.XX.#\n#... ..X........X.....X. X........X.XX.#\n###############################...X..X.#\n#. ...X..+. ..X.X..........+.X+...... .#\n#..+.....X..... ........XX X..X....X...#\n#...X..X.X..............X .X..X........#\n#.X.....X........XXX.......X.. .+....X.#\n#.+.. ..X.  .....X.X+..+....X...X..+. .#\n#. X..............X X..X........+.....X#\n#........###############################\n# X.........X...+....X.....X...X.......#\n# X......... X..X........X......X.XX..E#\n#. ..X........X.....X.  ....+...X.XX...#\n#....X+..X........X......X.X+......X...#\n#... ..X. ..X.XX.........X.X+...... ..X#\n#.+.... ..... ......... .X..X....X...X.#\n########################################\n");
    caml_fs_register
     ("/maps.txt",
      '"maps/level0.map"\t"Level without boulders"\n"maps/level1.map"\t"Simple falls"\n"maps/level2.map"\t"More falls"\n"maps/level3.map"\t"Real (yet little) puzzle"\n"maps/level4.map"\t"Bigger puzzle (copie de BeeDeeDash)"\n');
    var
     Out_of_memory=[248,caml_new_string("Out_of_memory"),-1],
     Sys_error=[248,caml_new_string("Sys_error"),-2],
     Failure=[248,caml_new_string("Failure"),-3],
     Invalid_argument=[248,caml_new_string("Invalid_argument"),-4],
     End_of_file=[248,caml_new_string("End_of_file"),-5],
     Division_by_zero=[248,caml_new_string("Division_by_zero"),-6],
     Not_found=[248,caml_new_string("Not_found"),-7],
     Match_failure=[248,caml_new_string("Match_failure"),-8],
     Stack_overflow=[248,caml_new_string("Stack_overflow"),-9],
     Sys_blocked_io=[248,caml_new_string("Sys_blocked_io"),-10],
     Assert_failure=[248,caml_new_string("Assert_failure"),-11],
     Undefined_recursive_module=
      [248,caml_new_string("Undefined_recursive_module"),-12],
     locfmt=
      [0,
       [11,
        caml_new_string('File "'),
        [2,
         0,
         [11,
          caml_new_string('", line '),
          [4,
           0,
           0,
           0,
           [11,
            caml_new_string(", characters "),
            [4,0,0,0,[12,45,[4,0,0,0,[11,caml_new_string(": "),[2,0,0]]]]]]]]]],
       caml_new_string('File "%s", line %d, characters %d-%d: %s')],
     state_return_unit=[0,0],
     s=caml_new_string("+");
    caml_register_global
     (11,Undefined_recursive_module,"Undefined_recursive_module");
    caml_register_global(10,Assert_failure,"Assert_failure");
    caml_register_global(9,Sys_blocked_io,"Sys_blocked_io");
    caml_register_global(8,Stack_overflow,"Stack_overflow");
    caml_register_global(7,Match_failure,"Match_failure");
    caml_register_global(6,Not_found,"Not_found");
    caml_register_global(5,Division_by_zero,"Division_by_zero");
    caml_register_global(4,End_of_file,"End_of_file");
    caml_register_global(3,Invalid_argument,"Invalid_argument");
    caml_register_global(2,Failure,"Failure");
    caml_register_global(1,Sys_error,"Sys_error");
    caml_register_global(0,Out_of_memory,"Out_of_memory");
    var
     _i_=caml_new_string("%.12g"),
     _h_=caml_new_string("."),
     _f_=caml_new_string("true"),
     _g_=caml_new_string("false"),
     _d_=caml_new_string("Pervasives.Exit"),
     _l_=caml_new_string("Array.Bottom"),
     _m_=caml_new_string("nth"),
     _n_=caml_new_string("List.nth"),
     _t_=caml_new_string("\\b"),
     _u_=caml_new_string("\\t"),
     _v_=caml_new_string("\\n"),
     _w_=caml_new_string("\\r"),
     _s_=caml_new_string("\\\\"),
     _r_=caml_new_string("\\'"),
     _E_=caml_new_string("String.index_from / Bytes.index_from"),
     _D_=caml_new_string("String.blit / Bytes.blit_string"),
     _B_=caml_new_string("Bytes.blit"),
     _y_=caml_new_string("String.sub / Bytes.sub"),
     _I_=caml_new_string(""),
     _L_=caml_new_string("Sys.Break"),
     _M_=caml_new_string("Queue.Empty"),
     _O_=caml_new_string("CamlinternalLazy.Undefined"),
     _Q_=caml_new_string("Buffer.add: cannot grow buffer"),
     _ag_=caml_new_string("%c"),
     _ah_=caml_new_string("%s"),
     _ai_=caml_new_string("%i"),
     _aj_=caml_new_string("%li"),
     _ak_=caml_new_string("%ni"),
     _al_=caml_new_string("%Li"),
     _am_=caml_new_string("%f"),
     _an_=caml_new_string("%B"),
     _ao_=caml_new_string("%{"),
     _ap_=caml_new_string("%}"),
     _aq_=caml_new_string("%("),
     _ar_=caml_new_string("%)"),
     _as_=caml_new_string("%a"),
     _at_=caml_new_string("%t"),
     _au_=caml_new_string("%?"),
     _av_=caml_new_string("%r"),
     _aw_=caml_new_string("%_r"),
     _aA_=[0,caml_new_string("camlinternalFormat.ml"),816,23],
     _aL_=[0,caml_new_string("camlinternalFormat.ml"),780,21],
     _aD_=[0,caml_new_string("camlinternalFormat.ml"),781,21],
     _aM_=[0,caml_new_string("camlinternalFormat.ml"),784,21],
     _aE_=[0,caml_new_string("camlinternalFormat.ml"),785,21],
     _aN_=[0,caml_new_string("camlinternalFormat.ml"),788,19],
     _aF_=[0,caml_new_string("camlinternalFormat.ml"),789,19],
     _aO_=[0,caml_new_string("camlinternalFormat.ml"),792,22],
     _aG_=[0,caml_new_string("camlinternalFormat.ml"),793,22],
     _aP_=[0,caml_new_string("camlinternalFormat.ml"),797,30],
     _aH_=[0,caml_new_string("camlinternalFormat.ml"),798,30],
     _aJ_=[0,caml_new_string("camlinternalFormat.ml"),802,26],
     _aB_=[0,caml_new_string("camlinternalFormat.ml"),803,26],
     _aK_=[0,caml_new_string("camlinternalFormat.ml"),812,28],
     _aC_=[0,caml_new_string("camlinternalFormat.ml"),813,28],
     _aI_=[0,caml_new_string("camlinternalFormat.ml"),817,23],
     _bJ_=caml_new_string("%u"),
     _bH_=[0,caml_new_string("camlinternalFormat.ml"),1449,4],
     _bI_=caml_new_string("Printf: bad conversion %["),
     _bK_=[0,caml_new_string("camlinternalFormat.ml"),1517,39],
     _bL_=[0,caml_new_string("camlinternalFormat.ml"),1540,31],
     _bM_=[0,caml_new_string("camlinternalFormat.ml"),1541,31],
     _bN_=caml_new_string("Printf: bad conversion %_"),
     _bP_=caml_new_string("@{"),
     _bQ_=caml_new_string("@["),
     _bS_=caml_new_string("@{"),
     _bT_=caml_new_string("@["),
     _bA_=[0,caml_new_string("'"),[0,caml_new_string("'"),0]],
     _by_=caml_new_string("nan"),
     _bz_=caml_new_string("."),
     _bw_=caml_new_string("neg_infinity"),
     _bx_=caml_new_string("infinity"),
     _bq_=caml_new_string("%.12g"),
     _bd_=[0,caml_new_string("%"),[0,caml_new_string("d"),0]],
     _be_=[0,caml_new_string("%+"),[0,caml_new_string("d"),0]],
     _bf_=[0,caml_new_string("% "),[0,caml_new_string("d"),0]],
     _bg_=[0,caml_new_string("%"),[0,caml_new_string("i"),0]],
     _bh_=[0,caml_new_string("%+"),[0,caml_new_string("i"),0]],
     _bi_=[0,caml_new_string("% "),[0,caml_new_string("i"),0]],
     _bj_=[0,caml_new_string("%"),[0,caml_new_string("x"),0]],
     _bk_=[0,caml_new_string("%#"),[0,caml_new_string("x"),0]],
     _bl_=[0,caml_new_string("%"),[0,caml_new_string("X"),0]],
     _bm_=[0,caml_new_string("%#"),[0,caml_new_string("X"),0]],
     _bn_=[0,caml_new_string("%"),[0,caml_new_string("o"),0]],
     _bo_=[0,caml_new_string("%#"),[0,caml_new_string("o"),0]],
     _bp_=[0,caml_new_string("%"),[0,caml_new_string("u"),0]],
     _a1_=caml_new_string("%d"),
     _a2_=caml_new_string("%+d"),
     _a3_=caml_new_string("% d"),
     _a4_=caml_new_string("%i"),
     _a5_=caml_new_string("%+i"),
     _a6_=caml_new_string("% i"),
     _a7_=caml_new_string("%x"),
     _a8_=caml_new_string("%#x"),
     _a9_=caml_new_string("%X"),
     _a__=caml_new_string("%#X"),
     _a$_=caml_new_string("%o"),
     _ba_=caml_new_string("%#o"),
     _bb_=caml_new_string("%u"),
     _a0_=[0,caml_new_string('"'),[0,caml_new_string('"'),0]],
     _Z_=caml_new_string("@]"),
     ___=caml_new_string("@}"),
     _$_=caml_new_string("@?"),
     _aa_=caml_new_string("@\n"),
     _ab_=caml_new_string("@."),
     _ac_=caml_new_string("@@"),
     _ad_=caml_new_string("@%"),
     _ae_=caml_new_string("@"),
     _aQ_=caml_new_string("CamlinternalFormat.Type_mismatch"),
     _bZ_=caml_new_string(""),
     _b0_=
      [0,[11,caml_new_string(", "),[2,0,[2,0,0]]],caml_new_string(", %s%s")],
     _ce_=[0,[2,0,[12,10,0]],caml_new_string("%s\n")],
     _cf_=
      [0,
       [11,
        caml_new_string
         ("(Program not linked with -g, cannot print stack backtrace)\n"),
        0],
       caml_new_string
        ("(Program not linked with -g, cannot print stack backtrace)\n")],
     _b__=caml_new_string("Raised at"),
     _b$_=caml_new_string("Re-raised at"),
     _ca_=caml_new_string("Raised by primitive operation at"),
     _cb_=caml_new_string("Called from"),
     _cc_=
      [0,
       [2,
        0,
        [11,
         caml_new_string(' file "'),
         [2,
          0,
          [11,
           caml_new_string('", line '),
           [4,
            0,
            0,
            0,
            [11,
             caml_new_string(", characters "),
             [4,0,0,0,[12,45,[4,0,0,0,0]]]]]]]]],
       caml_new_string('%s file "%s", line %d, characters %d-%d')],
     _cd_=
      [0,
       [2,0,[11,caml_new_string(" unknown location"),0]],
       caml_new_string("%s unknown location")],
     _b5_=caml_new_string("Out of memory"),
     _b6_=caml_new_string("Stack overflow"),
     _b7_=caml_new_string("Pattern matching failed"),
     _b8_=caml_new_string("Assertion failed"),
     _b9_=caml_new_string("Undefined recursive module"),
     _b1_=[0,[12,40,[2,0,[2,0,[12,41,0]]]],caml_new_string("(%s%s)")],
     _b2_=caml_new_string(""),
     _b3_=caml_new_string(""),
     _b4_=[0,[12,40,[2,0,[12,41,0]]],caml_new_string("(%s)")],
     _bY_=[0,[4,0,0,0,0],caml_new_string("%d")],
     _bW_=[0,[3,0,0],caml_new_string("%S")],
     _bX_=caml_new_string("_"),
     _cg_=caml_new_string("Lwt_sequence.Empty"),
     _ct_=[0,caml_new_string("src/core/lwt.ml"),699,20],
     _cu_=[0,caml_new_string("src/core/lwt.ml"),702,8],
     _cr_=[0,caml_new_string("src/core/lwt.ml"),655,20],
     _cs_=[0,caml_new_string("src/core/lwt.ml"),658,8],
     _cq_=[0,caml_new_string("src/core/lwt.ml"),498,8],
     _cp_=[0,caml_new_string("src/core/lwt.ml"),487,9],
     _co_=caml_new_string("Lwt.wakeup_later_result"),
     _cn_=caml_new_string("Lwt.wakeup_result"),
     _cm_=caml_new_string("Fatal error: exception "),
     _cl_=caml_new_string("Lwt.Canceled"),
     _cz_=caml_new_string("Js.Error"),
     _cI_=caml_new_string("table"),
     _cH_=caml_new_string("img"),
     _cG_=caml_new_string("br"),
     _cF_=caml_new_string("h1"),
     _cE_=caml_new_string("div"),
     _cD_=caml_new_string("select"),
     _cC_=caml_new_string("option"),
     _cJ_=caml_new_string("Dom_html.Canvas_not_available"),
     _cM_=caml_new_string("Exception during Lwt.async: "),
     _cN_=caml_new_string("[\\][()\\\\|+*.?{}^$]"),
     _cQ_=caml_new_string(""),
     _cS_=caml_new_string(""),
     _cO_=caml_new_string("Url.Local_exn"),
     _cP_=caml_new_string("Url.Not_an_http_protocol"),
     _cT_=
      caml_new_string
       ("^([Hh][Tt][Tt][Pp][Ss]?)://([0-9a-zA-Z.-]+|\\[[0-9a-zA-Z.-]+\\]|\\[[0-9A-Fa-f:.]+\\])?(:([0-9]+))?(/([^\\?#]*)(\\?([^#]*))?(#(.*))?)?$"),
     _cU_=
      caml_new_string
       ("^([Ff][Ii][Ll][Ee])://([^\\?#]*)(\\?([^#]*))?(#(.*))?$"),
     _cY_=[0,caml_new_string("xmlHttpRequest.ml"),87,2],
     _cZ_=caml_new_string("XmlHttpRequest.Wrong_headers"),
     _c8_=[0,[8,9,0,0,0],caml_new_string("%g")],
     _c9_=caml_new_string("malformed level"),
     _c__=caml_new_string("Boulder Dash in Ocaml"),
     _c$_=caml_new_string("Elapsed time: "),
     _da_=caml_new_string(" Remaining diamonds: "),
     _db_=caml_new_string(" "),
     _dc_=caml_new_string("Choose a level"),
     _c6_=[0,caml_new_string("boulderdash.ml"),302,17],
     _c7_=caml_new_string("--"),
     _dd_=caml_new_string("maps.txt"),
     _c3_=
      [0,
       [4,0,[0,2,2],0,[12,58,[4,0,[0,2,2],0,[12,58,[4,0,[0,2,2],0,0]]]]],
       caml_new_string("%02d:%02d:%02d")],
     _c2_=caml_new_string("--:--:--"),
     _c1_=caml_new_string("LOADING..."),
     _c4_=caml_new_string("Boulderdash.Death"),
     _c5_=caml_new_string("Boulderdash.Eos");
    function _a_(param)
     {if(typeof param==="number")
       return 0;
      else
       switch(param[0])
        {case 0:var rest=param[1];return [0,_a_(rest)];
         case 1:var rest$0=param[1];return [1,_a_(rest$0)];
         case 2:var rest$1=param[1];return [2,_a_(rest$1)];
         case 3:var rest$2=param[1];return [3,_a_(rest$2)];
         case 4:var rest$3=param[1];return [4,_a_(rest$3)];
         case 5:var rest$4=param[1];return [5,_a_(rest$4)];
         case 6:var rest$5=param[1];return [6,_a_(rest$5)];
         case 7:var rest$6=param[1];return [7,_a_(rest$6)];
         case 8:var rest$7=param[2],ty=param[1];return [8,ty,_a_(rest$7)];
         case 9:
          var rest$8=param[3],ty1=param[1];return [9,ty1,ty1,_a_(rest$8)];
         case 10:var rest$9=param[1];return [10,_a_(rest$9)];
         case 11:var rest$10=param[1];return [11,_a_(rest$10)];
         case 12:var rest$11=param[1];return [12,_a_(rest$11)];
         case 13:var rest$12=param[1];return [13,_a_(rest$12)];
         default:var rest$13=param[1];return [14,_a_(rest$13)]}}
    function _b_(fmtty1,fmtty2)
     {if(typeof fmtty1==="number")
       return fmtty2;
      else
       switch(fmtty1[0])
        {case 0:var rest=fmtty1[1];return [0,_b_(rest,fmtty2)];
         case 1:var rest$0=fmtty1[1];return [1,_b_(rest$0,fmtty2)];
         case 2:var rest$1=fmtty1[1];return [2,_b_(rest$1,fmtty2)];
         case 3:var rest$2=fmtty1[1];return [3,_b_(rest$2,fmtty2)];
         case 4:var rest$3=fmtty1[1];return [4,_b_(rest$3,fmtty2)];
         case 5:var rest$4=fmtty1[1];return [5,_b_(rest$4,fmtty2)];
         case 6:var rest$5=fmtty1[1];return [6,_b_(rest$5,fmtty2)];
         case 7:var rest$6=fmtty1[1];return [7,_b_(rest$6,fmtty2)];
         case 8:
          var rest$7=fmtty1[2],ty=fmtty1[1];return [8,ty,_b_(rest$7,fmtty2)];
         case 9:
          var rest$8=fmtty1[3],ty2=fmtty1[2],ty1=fmtty1[1];
          return [9,ty1,ty2,_b_(rest$8,fmtty2)];
         case 10:var rest$9=fmtty1[1];return [10,_b_(rest$9,fmtty2)];
         case 11:var rest$10=fmtty1[1];return [11,_b_(rest$10,fmtty2)];
         case 12:var rest$11=fmtty1[1];return [12,_b_(rest$11,fmtty2)];
         case 13:var rest$12=fmtty1[1];return [13,_b_(rest$12,fmtty2)];
         default:var rest$13=fmtty1[1];return [14,_b_(rest$13,fmtty2)]}}
    function _c_(fmt1,fmt2)
     {if(typeof fmt1==="number")
       return fmt2;
      else
       switch(fmt1[0])
        {case 0:var rest=fmt1[1];return [0,_c_(rest,fmt2)];
         case 1:var rest$0=fmt1[1];return [1,_c_(rest$0,fmt2)];
         case 2:
          var rest$1=fmt1[2],pad=fmt1[1];return [2,pad,_c_(rest$1,fmt2)];
         case 3:
          var rest$2=fmt1[2],pad$0=fmt1[1];return [3,pad$0,_c_(rest$2,fmt2)];
         case 4:
          var rest$3=fmt1[4],prec=fmt1[3],pad$1=fmt1[2],iconv=fmt1[1];
          return [4,iconv,pad$1,prec,_c_(rest$3,fmt2)];
         case 5:
          var rest$4=fmt1[4],prec$0=fmt1[3],pad$2=fmt1[2],iconv$0=fmt1[1];
          return [5,iconv$0,pad$2,prec$0,_c_(rest$4,fmt2)];
         case 6:
          var rest$5=fmt1[4],prec$1=fmt1[3],pad$3=fmt1[2],iconv$1=fmt1[1];
          return [6,iconv$1,pad$3,prec$1,_c_(rest$5,fmt2)];
         case 7:
          var rest$6=fmt1[4],prec$2=fmt1[3],pad$4=fmt1[2],iconv$2=fmt1[1];
          return [7,iconv$2,pad$4,prec$2,_c_(rest$6,fmt2)];
         case 8:
          var rest$7=fmt1[4],prec$3=fmt1[3],pad$5=fmt1[2],fconv=fmt1[1];
          return [8,fconv,pad$5,prec$3,_c_(rest$7,fmt2)];
         case 9:var rest$8=fmt1[1];return [9,_c_(rest$8,fmt2)];
         case 10:var rest$9=fmt1[1];return [10,_c_(rest$9,fmt2)];
         case 11:
          var rest$10=fmt1[2],str=fmt1[1];return [11,str,_c_(rest$10,fmt2)];
         case 12:
          var rest$11=fmt1[2],chr=fmt1[1];return [12,chr,_c_(rest$11,fmt2)];
         case 13:
          var rest$12=fmt1[3],fmtty=fmt1[2],pad$6=fmt1[1];
          return [13,pad$6,fmtty,_c_(rest$12,fmt2)];
         case 14:
          var rest$13=fmt1[3],fmtty$0=fmt1[2],pad$7=fmt1[1];
          return [14,pad$7,fmtty$0,_c_(rest$13,fmt2)];
         case 15:var rest$14=fmt1[1];return [15,_c_(rest$14,fmt2)];
         case 16:var rest$15=fmt1[1];return [16,_c_(rest$15,fmt2)];
         case 17:
          var rest$16=fmt1[2],fmting_lit=fmt1[1];
          return [17,fmting_lit,_c_(rest$16,fmt2)];
         case 18:
          var rest$17=fmt1[2],fmting_gen=fmt1[1];
          return [18,fmting_gen,_c_(rest$17,fmt2)];
         case 19:var rest$18=fmt1[1];return [19,_c_(rest$18,fmt2)];
         case 20:
          var rest$19=fmt1[3],char_set=fmt1[2],width_opt=fmt1[1];
          return [20,width_opt,char_set,_c_(rest$19,fmt2)];
         case 21:
          var rest$20=fmt1[2],counter=fmt1[1];
          return [21,counter,_c_(rest$20,fmt2)];
         case 22:var rest$21=fmt1[1];return [22,_c_(rest$21,fmt2)];
         case 23:
          var rest$22=fmt1[2],ign=fmt1[1];return [23,ign,_c_(rest$22,fmt2)];
         default:
          var rest$23=fmt1[3],f=fmt1[2],arity=fmt1[1];
          return [24,arity,f,_c_(rest$23,fmt2)]}}
    function failwith(s){throw [0,Failure,s]}
    function invalid_arg(s){throw [0,Invalid_argument,s]}
    caml_set_oo_id([248,_d_,0]);
    function abs(x){return 0<=x?x:-x|0}
    function _e_(s1,s2)
     {var
       l1=caml_ml_string_length(s1),
       l2=caml_ml_string_length(s2),
       s=caml_create_string(l1+l2|0);
      caml_blit_string(s1,0,s,0,l1);
      caml_blit_string(s2,0,s,l1,l2);
      return s}
    caml_ml_open_descriptor_in(0);
    caml_ml_open_descriptor_out(1);
    var stderr=caml_ml_open_descriptor_out(2);
    function output_string(oc,s)
     {return caml_ml_output(oc,s,0,caml_ml_string_length(s))}
    function prerr_string(s){return output_string(stderr,s)}
    function do_at_exit(param)
     {function iter(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var l=param$0[2],a=param$0[1];
            try {caml_ml_flush(a)}catch(_hQ_){}
            var param$0=l;
            continue}
          return 0}}
      return iter(caml_ml_out_channels_list(0))}
    function _j_(f,a)
     {var l=a.length-1;
      if(0===l)return [0];
      var r=caml_make_vect(l,caml_call1(f,a[1])),_hO_=l-1|0,_hN_=1;
      if(!(_hO_<1))
       {var i=_hN_;
        for(;;)
         {r[i+1]=caml_call1(f,a[i+1]);
          var _hP_=i+1|0;
          if(_hO_!==i){var i=_hP_;continue}
          break}}
      return r}
    function _k_(l)
     {if(l)
       {var tl=l[2],hd=l[1],accu=0,param=l;
        for(;;)
         {if(param)
           {var t=param[2],accu$0=accu+1|0,accu=accu$0,param=t;continue}
          var a=caml_make_vect(accu,hd),i=1,param$0=tl;
          for(;;)
           {if(param$0)
             {var tl$0=param$0[2],hd$0=param$0[1];
              a[i+1]=hd$0;
              var i$0=i+1|0,i=i$0,param$0=tl$0;
              continue}
            return a}}}
      return [0]}
    caml_set_oo_id([248,_l_,0]);
    function _o_(l$0)
     {var l1=l$0,l2=0;
      for(;;)
       {if(l1){var l=l1[2],a=l1[1],l2$0=[0,a,l2],l1=l,l2=l2$0;continue}
        return l2}}
    function _p_(f,param)
     {if(param)
       {var l=param[2],a=param[1],r=caml_call1(f,a);return [0,r,_p_(f,l)]}
      return 0}
    function _q_(f,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],a=param$0[1];
          caml_call1(f,a);
          var param$0=l;
          continue}
        return 0}}
    function make(n,c)
     {var s=caml_create_string(n);caml_fill_string(s,0,n,c);return s}
    function _x_(s,ofs,len)
     {if(0<=ofs)
       if(0<=len)
        if(!((caml_ml_string_length(s)-len|0)<ofs))
         {var r=caml_create_string(len);
          caml_blit_string(s,ofs,r,0,len);
          return r}
      return invalid_arg(_y_)}
    function _z_(b,ofs,len){return _x_(b,ofs,len)}
    function _A_(s1,ofs1,s2,ofs2,len)
     {if(0<=len)
       if(0<=ofs1)
        if(!((caml_ml_string_length(s1)-len|0)<ofs1))
         if(0<=ofs2)
          if(!((caml_ml_string_length(s2)-len|0)<ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_B_)}
    function _C_(s1,ofs1,s2,ofs2,len)
     {if(0<=len)
       if(0<=ofs1)
        if(!((caml_ml_string_length(s1)-len|0)<ofs1))
         if(0<=ofs2)
          if(!((caml_ml_string_length(s2)-len|0)<ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_D_)}
    function _F_(n,c){return make(n,c)}
    function _G_(s,ofs,len){return _x_(s,ofs,len)}
    function _H_(sep,l)
     {if(l)
       {var tl=l[2],hd=l[1],num=[0,0],len=[0,0];
        _q_
         (function(s)
           {num[1]++;len[1]=len[1]+caml_ml_string_length(s)|0;return 0},
          l);
        var
         r=
          caml_create_string
           (len[1]+caml_mul(caml_ml_string_length(sep),num[1]-1|0)|0);
        caml_blit_string(hd,0,r,0,caml_ml_string_length(hd));
        var pos=[0,caml_ml_string_length(hd)];
        _q_
         (function(s)
           {caml_blit_string(sep,0,r,pos[1],caml_ml_string_length(sep));
            pos[1]=pos[1]+caml_ml_string_length(sep)|0;
            caml_blit_string(s,0,r,pos[1],caml_ml_string_length(s));
            pos[1]=pos[1]+caml_ml_string_length(s)|0;
            return 0},
          tl);
        return r}
      return _I_}
    function _J_(s,i$1,c)
     {var lim=caml_ml_string_length(s);
      if(0<=i$1)
       if(!(lim<i$1))
        {var i=i$1;
         for(;;)
          {if(lim<=i)throw Not_found;
           if(caml_string_unsafe_get(s,i)===c)return i;
           var i$0=i+1|0,i=i$0;
           continue}}
      return invalid_arg(_E_)}
    caml_set_oo_id([248,_L_,0]);
    var _N_=caml_set_oo_id([248,_M_,0]);
    caml_set_oo_id([248,_O_,0]);
    var _K_=16777211;
    function _P_(b,more)
     {var len=b[3],new_len=[0,len];
      for(;;)
       {if(new_len[1]<(b[2]+more|0)){new_len[1]=2*new_len[1]|0;continue}
        if(16777211<new_len[1])
         if((b[2]+more|0)<=16777211)new_len[1]=_K_;else failwith(_Q_);
        var new_buffer=caml_create_string(new_len[1]);
        _A_(b[1],0,new_buffer,0,b[2]);
        b[1]=new_buffer;
        b[3]=new_len[1];
        return 0}}
    function _R_(b,s)
     {var len=caml_ml_string_length(s),new_position=b[2]+len|0;
      if(b[3]<new_position)_P_(b,len);
      _C_(s,0,b[1],b[2],len);
      b[2]=new_position;
      return 0}
    var _S_=6;
    function _T_(init_size){return [0,0,caml_create_string(init_size)]}
    function _U_(buf,overhead)
     {var
       len=caml_ml_string_length(buf[2]),
       y=buf[1]+overhead|0,
       _hL_=len<y?1:0;
      if(_hL_)
       {var
         x=len*2|0,
         new_len=caml_greaterequal(x,y)?x:y,
         new_str=caml_create_string(new_len);
        _A_(buf[2],0,new_str,0,len);
        buf[2]=new_str;
        var _hM_=0}
      else
       var _hM_=_hL_;
      return _hM_}
    function _V_(buf,c)
     {_U_(buf,1);caml_string_set(buf[2],buf[1],c);buf[1]=buf[1]+1|0;return 0}
    function _W_(buf,s)
     {var str_len=caml_ml_string_length(s);
      _U_(buf,str_len);
      _C_(s,0,buf[2],buf[1],str_len);
      buf[1]=buf[1]+str_len|0;
      return 0}
    function _X_(buf){return _z_(buf[2],0,buf[1])}
    function _Y_(formatting_lit)
     {if(typeof formatting_lit==="number")
       switch(formatting_lit)
        {case 0:return _Z_;
         case 1:return ___;
         case 2:return _$_;
         case 3:return _aa_;
         case 4:return _ab_;
         case 5:return _ac_;
         default:return _ad_}
      else
       switch(formatting_lit[0])
        {case 0:var str=formatting_lit[1];return str;
         case 1:var str$0=formatting_lit[1];return str$0;
         default:var c=formatting_lit[1];return _e_(_ae_,_F_(1,c))}}
    function _af_(buf,fmtty)
     {var fmtty$0=fmtty;
      for(;;)
       if(typeof fmtty$0==="number")
        return 0;
       else
        switch(fmtty$0[0])
         {case 0:var rest=fmtty$0[1];_W_(buf,_ag_);var fmtty$0=rest;continue;
          case 1:
           var rest$0=fmtty$0[1];_W_(buf,_ah_);var fmtty$0=rest$0;continue;
          case 2:
           var rest$1=fmtty$0[1];_W_(buf,_ai_);var fmtty$0=rest$1;continue;
          case 3:
           var rest$2=fmtty$0[1];_W_(buf,_aj_);var fmtty$0=rest$2;continue;
          case 4:
           var rest$3=fmtty$0[1];_W_(buf,_ak_);var fmtty$0=rest$3;continue;
          case 5:
           var rest$4=fmtty$0[1];_W_(buf,_al_);var fmtty$0=rest$4;continue;
          case 6:
           var rest$5=fmtty$0[1];_W_(buf,_am_);var fmtty$0=rest$5;continue;
          case 7:
           var rest$6=fmtty$0[1];_W_(buf,_an_);var fmtty$0=rest$6;continue;
          case 8:
           var rest$7=fmtty$0[2],sub_fmtty=fmtty$0[1];
           _W_(buf,_ao_);
           _af_(buf,sub_fmtty);
           _W_(buf,_ap_);
           var fmtty$0=rest$7;
           continue;
          case 9:
           var rest$8=fmtty$0[3],sub_fmtty$0=fmtty$0[1];
           _W_(buf,_aq_);
           _af_(buf,sub_fmtty$0);
           _W_(buf,_ar_);
           var fmtty$0=rest$8;
           continue;
          case 10:
           var rest$9=fmtty$0[1];_W_(buf,_as_);var fmtty$0=rest$9;continue;
          case 11:
           var rest$10=fmtty$0[1];_W_(buf,_at_);var fmtty$0=rest$10;continue;
          case 12:
           var rest$11=fmtty$0[1];_W_(buf,_au_);var fmtty$0=rest$11;continue;
          case 13:
           var rest$12=fmtty$0[1];_W_(buf,_av_);var fmtty$0=rest$12;continue;
          default:
           var rest$13=fmtty$0[1];_W_(buf,_aw_);var fmtty$0=rest$13;continue}}
    function _ax_(param)
     {if(typeof param==="number")
       return 0;
      else
       switch(param[0])
        {case 0:var rest=param[1];return [0,_ax_(rest)];
         case 1:var rest$0=param[1];return [1,_ax_(rest$0)];
         case 2:var rest$1=param[1];return [2,_ax_(rest$1)];
         case 3:var rest$2=param[1];return [3,_ax_(rest$2)];
         case 4:var rest$3=param[1];return [4,_ax_(rest$3)];
         case 5:var rest$4=param[1];return [5,_ax_(rest$4)];
         case 6:var rest$5=param[1];return [6,_ax_(rest$5)];
         case 7:var rest$6=param[1];return [7,_ax_(rest$6)];
         case 8:var rest$7=param[2],ty=param[1];return [8,ty,_ax_(rest$7)];
         case 9:
          var rest$8=param[3],ty2=param[2],ty1=param[1];
          return [9,ty2,ty1,_ax_(rest$8)];
         case 10:var rest$9=param[1];return [10,_ax_(rest$9)];
         case 11:var rest$10=param[1];return [11,_ax_(rest$10)];
         case 12:var rest$11=param[1];return [12,_ax_(rest$11)];
         case 13:var rest$12=param[1];return [13,_ax_(rest$12)];
         default:var rest$13=param[1];return [14,_ax_(rest$13)]}}
    function _ay_(param)
     {if(typeof param==="number")
       {var
         _hn_=function(param){return 0},
         _ho_=function(param){return 0},
         _hp_=function(param){return 0};
        return [0,function(param){return 0},_hp_,_ho_,_hn_]}
      else
       switch(param[0])
        {case 0:
          var
           rest=param[1],
           match=_ay_(rest),
           de=match[4],
           ed=match[3],
           af=match[2],
           fa=match[1],
           _hq_=function(param){caml_call1(af,0);return 0};
          return [0,function(param){caml_call1(fa,0);return 0},_hq_,ed,de];
         case 1:
          var
           rest$0=param[1],
           match$0=_ay_(rest$0),
           de$0=match$0[4],
           ed$0=match$0[3],
           af$0=match$0[2],
           fa$0=match$0[1],
           _hr_=function(param){caml_call1(af$0,0);return 0};
          return [0,
                  function(param){caml_call1(fa$0,0);return 0},
                  _hr_,
                  ed$0,
                  de$0];
         case 2:
          var
           rest$1=param[1],
           match$1=_ay_(rest$1),
           de$1=match$1[4],
           ed$1=match$1[3],
           af$1=match$1[2],
           fa$1=match$1[1],
           _hs_=function(param){caml_call1(af$1,0);return 0};
          return [0,
                  function(param){caml_call1(fa$1,0);return 0},
                  _hs_,
                  ed$1,
                  de$1];
         case 3:
          var
           rest$2=param[1],
           match$2=_ay_(rest$2),
           de$2=match$2[4],
           ed$2=match$2[3],
           af$2=match$2[2],
           fa$2=match$2[1],
           _ht_=function(param){caml_call1(af$2,0);return 0};
          return [0,
                  function(param){caml_call1(fa$2,0);return 0},
                  _ht_,
                  ed$2,
                  de$2];
         case 4:
          var
           rest$3=param[1],
           match$3=_ay_(rest$3),
           de$3=match$3[4],
           ed$3=match$3[3],
           af$3=match$3[2],
           fa$3=match$3[1],
           _hu_=function(param){caml_call1(af$3,0);return 0};
          return [0,
                  function(param){caml_call1(fa$3,0);return 0},
                  _hu_,
                  ed$3,
                  de$3];
         case 5:
          var
           rest$4=param[1],
           match$4=_ay_(rest$4),
           de$4=match$4[4],
           ed$4=match$4[3],
           af$4=match$4[2],
           fa$4=match$4[1],
           _hv_=function(param){caml_call1(af$4,0);return 0};
          return [0,
                  function(param){caml_call1(fa$4,0);return 0},
                  _hv_,
                  ed$4,
                  de$4];
         case 6:
          var
           rest$5=param[1],
           match$5=_ay_(rest$5),
           de$5=match$5[4],
           ed$5=match$5[3],
           af$5=match$5[2],
           fa$5=match$5[1],
           _hw_=function(param){caml_call1(af$5,0);return 0};
          return [0,
                  function(param){caml_call1(fa$5,0);return 0},
                  _hw_,
                  ed$5,
                  de$5];
         case 7:
          var
           rest$6=param[1],
           match$6=_ay_(rest$6),
           de$6=match$6[4],
           ed$6=match$6[3],
           af$6=match$6[2],
           fa$6=match$6[1],
           _hx_=function(param){caml_call1(af$6,0);return 0};
          return [0,
                  function(param){caml_call1(fa$6,0);return 0},
                  _hx_,
                  ed$6,
                  de$6];
         case 8:
          var
           rest$7=param[2],
           match$7=_ay_(rest$7),
           de$7=match$7[4],
           ed$7=match$7[3],
           af$7=match$7[2],
           fa$7=match$7[1],
           _hy_=function(param){caml_call1(af$7,0);return 0};
          return [0,
                  function(param){caml_call1(fa$7,0);return 0},
                  _hy_,
                  ed$7,
                  de$7];
         case 9:
          var
           rest$8=param[3],
           ty2=param[2],
           ty1=param[1],
           match$8=_ay_(rest$8),
           de$8=match$8[4],
           ed$8=match$8[3],
           af$8=match$8[2],
           fa$8=match$8[1],
           ty=_az_(_ax_(ty1),ty2),
           match$9=_ay_(ty),
           jd=match$9[4],
           dj=match$9[3],
           ga=match$9[2],
           ag=match$9[1],
           _hz_=function(param){caml_call1(jd,0);caml_call1(de$8,0);return 0},
           _hA_=function(param){caml_call1(ed$8,0);caml_call1(dj,0);return 0},
           _hB_=function(param){caml_call1(ga,0);caml_call1(af$8,0);return 0};
          return [0,
                  function(param)
                   {caml_call1(fa$8,0);caml_call1(ag,0);return 0},
                  _hB_,
                  _hA_,
                  _hz_];
         case 10:
          var
           rest$9=param[1],
           match$10=_ay_(rest$9),
           de$9=match$10[4],
           ed$9=match$10[3],
           af$9=match$10[2],
           fa$9=match$10[1],
           _hC_=function(param){caml_call1(af$9,0);return 0};
          return [0,
                  function(param){caml_call1(fa$9,0);return 0},
                  _hC_,
                  ed$9,
                  de$9];
         case 11:
          var
           rest$10=param[1],
           match$11=_ay_(rest$10),
           de$10=match$11[4],
           ed$10=match$11[3],
           af$10=match$11[2],
           fa$10=match$11[1],
           _hD_=function(param){caml_call1(af$10,0);return 0};
          return [0,
                  function(param){caml_call1(fa$10,0);return 0},
                  _hD_,
                  ed$10,
                  de$10];
         case 12:
          var
           rest$11=param[1],
           match$12=_ay_(rest$11),
           de$11=match$12[4],
           ed$11=match$12[3],
           af$11=match$12[2],
           fa$11=match$12[1],
           _hE_=function(param){caml_call1(af$11,0);return 0};
          return [0,
                  function(param){caml_call1(fa$11,0);return 0},
                  _hE_,
                  ed$11,
                  de$11];
         case 13:
          var
           rest$12=param[1],
           match$13=_ay_(rest$12),
           de$12=match$13[4],
           ed$12=match$13[3],
           af$12=match$13[2],
           fa$12=match$13[1],
           _hF_=function(param){caml_call1(de$12,0);return 0},
           _hG_=function(param){caml_call1(ed$12,0);return 0},
           _hH_=function(param){caml_call1(af$12,0);return 0};
          return [0,
                  function(param){caml_call1(fa$12,0);return 0},
                  _hH_,
                  _hG_,
                  _hF_];
         default:
          var
           rest$13=param[1],
           match$14=_ay_(rest$13),
           de$13=match$14[4],
           ed$13=match$14[3],
           af$13=match$14[2],
           fa$13=match$14[1],
           _hI_=function(param){caml_call1(de$13,0);return 0},
           _hJ_=function(param){caml_call1(ed$13,0);return 0},
           _hK_=function(param){caml_call1(af$13,0);return 0};
          return [0,
                  function(param){caml_call1(fa$13,0);return 0},
                  _hK_,
                  _hJ_,
                  _hI_]}}
    function _az_(ty1,match)
     {if(typeof ty1==="number")
       if(typeof match==="number")
        return 0;
       else
        switch(match[0])
         {case 10:var switch$0=0;break;
          case 11:var switch$0=1;break;
          case 12:var switch$0=2;break;
          case 13:var switch$0=3;break;
          case 14:var switch$0=4;break;
          case 8:var switch$0=5;break;
          case 9:var switch$0=6;break;
          default:throw [0,Assert_failure,_aA_]}
      else
       switch(ty1[0])
        {case 0:
          var _g6_=ty1[1];
          if(typeof match==="number")
           var switch$1=1;
          else
           switch(match[0])
            {case 0:var rest2=match[1];return [0,_az_(_g6_,rest2)];
             case 8:var switch$0=5,switch$1=0;break;
             case 9:var switch$0=6,switch$1=0;break;
             case 10:var switch$0=0,switch$1=0;break;
             case 11:var switch$0=1,switch$1=0;break;
             case 12:var switch$0=2,switch$1=0;break;
             case 13:var switch$0=3,switch$1=0;break;
             case 14:var switch$0=4,switch$1=0;break;
             default:var switch$1=1}
          if(switch$1)var switch$0=7;
          break;
         case 1:
          var _g7_=ty1[1];
          if(typeof match==="number")
           var switch$2=1;
          else
           switch(match[0])
            {case 1:var rest2$0=match[1];return [1,_az_(_g7_,rest2$0)];
             case 8:var switch$0=5,switch$2=0;break;
             case 9:var switch$0=6,switch$2=0;break;
             case 10:var switch$0=0,switch$2=0;break;
             case 11:var switch$0=1,switch$2=0;break;
             case 12:var switch$0=2,switch$2=0;break;
             case 13:var switch$0=3,switch$2=0;break;
             case 14:var switch$0=4,switch$2=0;break;
             default:var switch$2=1}
          if(switch$2)var switch$0=7;
          break;
         case 2:
          var _g8_=ty1[1];
          if(typeof match==="number")
           var switch$3=1;
          else
           switch(match[0])
            {case 2:var rest2$1=match[1];return [2,_az_(_g8_,rest2$1)];
             case 8:var switch$0=5,switch$3=0;break;
             case 9:var switch$0=6,switch$3=0;break;
             case 10:var switch$0=0,switch$3=0;break;
             case 11:var switch$0=1,switch$3=0;break;
             case 12:var switch$0=2,switch$3=0;break;
             case 13:var switch$0=3,switch$3=0;break;
             case 14:var switch$0=4,switch$3=0;break;
             default:var switch$3=1}
          if(switch$3)var switch$0=7;
          break;
         case 3:
          var _g9_=ty1[1];
          if(typeof match==="number")
           var switch$4=1;
          else
           switch(match[0])
            {case 3:var rest2$2=match[1];return [3,_az_(_g9_,rest2$2)];
             case 8:var switch$0=5,switch$4=0;break;
             case 9:var switch$0=6,switch$4=0;break;
             case 10:var switch$0=0,switch$4=0;break;
             case 11:var switch$0=1,switch$4=0;break;
             case 12:var switch$0=2,switch$4=0;break;
             case 13:var switch$0=3,switch$4=0;break;
             case 14:var switch$0=4,switch$4=0;break;
             default:var switch$4=1}
          if(switch$4)var switch$0=7;
          break;
         case 4:
          var _g__=ty1[1];
          if(typeof match==="number")
           var switch$5=1;
          else
           switch(match[0])
            {case 4:var rest2$3=match[1];return [4,_az_(_g__,rest2$3)];
             case 8:var switch$0=5,switch$5=0;break;
             case 9:var switch$0=6,switch$5=0;break;
             case 10:var switch$0=0,switch$5=0;break;
             case 11:var switch$0=1,switch$5=0;break;
             case 12:var switch$0=2,switch$5=0;break;
             case 13:var switch$0=3,switch$5=0;break;
             case 14:var switch$0=4,switch$5=0;break;
             default:var switch$5=1}
          if(switch$5)var switch$0=7;
          break;
         case 5:
          var _g$_=ty1[1];
          if(typeof match==="number")
           var switch$6=1;
          else
           switch(match[0])
            {case 5:var rest2$4=match[1];return [5,_az_(_g$_,rest2$4)];
             case 8:var switch$0=5,switch$6=0;break;
             case 9:var switch$0=6,switch$6=0;break;
             case 10:var switch$0=0,switch$6=0;break;
             case 11:var switch$0=1,switch$6=0;break;
             case 12:var switch$0=2,switch$6=0;break;
             case 13:var switch$0=3,switch$6=0;break;
             case 14:var switch$0=4,switch$6=0;break;
             default:var switch$6=1}
          if(switch$6)var switch$0=7;
          break;
         case 6:
          var _ha_=ty1[1];
          if(typeof match==="number")
           var switch$7=1;
          else
           switch(match[0])
            {case 6:var rest2$5=match[1];return [6,_az_(_ha_,rest2$5)];
             case 8:var switch$0=5,switch$7=0;break;
             case 9:var switch$0=6,switch$7=0;break;
             case 10:var switch$0=0,switch$7=0;break;
             case 11:var switch$0=1,switch$7=0;break;
             case 12:var switch$0=2,switch$7=0;break;
             case 13:var switch$0=3,switch$7=0;break;
             case 14:var switch$0=4,switch$7=0;break;
             default:var switch$7=1}
          if(switch$7)var switch$0=7;
          break;
         case 7:
          var _hb_=ty1[1];
          if(typeof match==="number")
           var switch$8=1;
          else
           switch(match[0])
            {case 7:var rest2$6=match[1];return [7,_az_(_hb_,rest2$6)];
             case 8:var switch$0=5,switch$8=0;break;
             case 9:var switch$0=6,switch$8=0;break;
             case 10:var switch$0=0,switch$8=0;break;
             case 11:var switch$0=1,switch$8=0;break;
             case 12:var switch$0=2,switch$8=0;break;
             case 13:var switch$0=3,switch$8=0;break;
             case 14:var switch$0=4,switch$8=0;break;
             default:var switch$8=1}
          if(switch$8)var switch$0=7;
          break;
         case 8:
          var _hc_=ty1[2],_hd_=ty1[1];
          if(typeof match==="number")
           var switch$9=1;
          else
           switch(match[0])
            {case 8:
              var rest2$7=match[2],ty2=match[1],_he_=_az_(_hc_,rest2$7);
              return [8,_az_(_hd_,ty2),_he_];
             case 10:var switch$0=0,switch$9=0;break;
             case 11:var switch$0=1,switch$9=0;break;
             case 12:var switch$0=2,switch$9=0;break;
             case 13:var switch$0=3,switch$9=0;break;
             case 14:var switch$0=4,switch$9=0;break;
             default:var switch$9=1}
          if(switch$9)throw [0,Assert_failure,_aJ_];
          break;
         case 9:
          var _hf_=ty1[3],_hg_=ty1[2],_hh_=ty1[1];
          if(typeof match==="number")
           var switch$10=1;
          else
           switch(match[0])
            {case 8:var switch$0=5,switch$10=0;break;
             case 9:
              var
               rest2$8=match[3],
               ty22=match[2],
               ty21=match[1],
               ty=_az_(_ax_(_hg_),ty21),
               match$0=_ay_(ty),
               f4=match$0[4],
               f2=match$0[2];
              caml_call1(f2,0);
              caml_call1(f4,0);
              return [9,_hh_,ty22,_az_(_hf_,rest2$8)];
             case 10:var switch$0=0,switch$10=0;break;
             case 11:var switch$0=1,switch$10=0;break;
             case 12:var switch$0=2,switch$10=0;break;
             case 13:var switch$0=3,switch$10=0;break;
             case 14:var switch$0=4,switch$10=0;break;
             default:var switch$10=1}
          if(switch$10)throw [0,Assert_failure,_aK_];
          break;
         case 10:
          var _hi_=ty1[1];
          if(typeof match!=="number"&&10===match[0])
           {var rest2$9=match[1];return [10,_az_(_hi_,rest2$9)]}
          throw [0,Assert_failure,_aL_];
         case 11:
          var _hj_=ty1[1];
          if(typeof match==="number")
           var switch$11=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$11=0;break;
             case 11:var rest2$10=match[1];return [11,_az_(_hj_,rest2$10)];
             default:var switch$11=1}
          if(switch$11)throw [0,Assert_failure,_aM_];
          break;
         case 12:
          var _hk_=ty1[1];
          if(typeof match==="number")
           var switch$12=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$12=0;break;
             case 11:var switch$0=1,switch$12=0;break;
             case 12:var rest2$11=match[1];return [12,_az_(_hk_,rest2$11)];
             default:var switch$12=1}
          if(switch$12)throw [0,Assert_failure,_aN_];
          break;
         case 13:
          var _hl_=ty1[1];
          if(typeof match==="number")
           var switch$13=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$13=0;break;
             case 11:var switch$0=1,switch$13=0;break;
             case 12:var switch$0=2,switch$13=0;break;
             case 13:var rest2$12=match[1];return [13,_az_(_hl_,rest2$12)];
             default:var switch$13=1}
          if(switch$13)throw [0,Assert_failure,_aO_];
          break;
         default:
          var _hm_=ty1[1];
          if(typeof match==="number")
           var switch$14=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$14=0;break;
             case 11:var switch$0=1,switch$14=0;break;
             case 12:var switch$0=2,switch$14=0;break;
             case 13:var switch$0=3,switch$14=0;break;
             case 14:var rest2$13=match[1];return [14,_az_(_hm_,rest2$13)];
             default:var switch$14=1}
          if(switch$14)throw [0,Assert_failure,_aP_]}
      switch(switch$0)
       {case 0:throw [0,Assert_failure,_aD_];
        case 1:throw [0,Assert_failure,_aE_];
        case 2:throw [0,Assert_failure,_aF_];
        case 3:throw [0,Assert_failure,_aG_];
        case 4:throw [0,Assert_failure,_aH_];
        case 5:throw [0,Assert_failure,_aB_];
        case 6:throw [0,Assert_failure,_aC_];
        default:throw [0,Assert_failure,_aI_]}}
    var _aR_=caml_set_oo_id([248,_aQ_,0]);
    function _aS_(pad,match)
     {if(typeof pad==="number")
       return [0,0,match];
      else
       {if(0===pad[0]){var w=pad[2],padty=pad[1];return [0,[0,padty,w],match]}
        if(typeof match!=="number"&&2===match[0])
         {var rest=match[1],padty$0=pad[1];return [0,[1,padty$0],rest]}
        throw _aR_}}
    function _aT_(pad,prec,fmtty)
     {var match=_aS_(pad,fmtty);
      if(typeof prec==="number")
       {if(0===prec){var rest=match[2],pad$0=match[1];return [0,pad$0,0,rest]}
        var _g5_=match[2];
        if(typeof _g5_!=="number"&&2===_g5_[0])
         {var rest$0=_g5_[1],pad$1=match[1];return [0,pad$1,1,rest$0]}
        throw _aR_}
      var rest$1=match[2],pad$2=match[1],p=prec[1];
      return [0,pad$2,[0,p],rest$1]}
    function _aU_(fmt,fmtty)
     {if(typeof fmt==="number")
       return [0,0,fmtty];
      else
       switch(fmt[0])
        {case 0:
          if(typeof fmtty!=="number"&&0===fmtty[0])
           {var
             fmtty_rest=fmtty[1],
             fmt_rest=fmt[1],
             match=_aU_(fmt_rest,fmtty_rest),
             fmtty$0=match[2],
             fmt$0=match[1];
            return [0,[0,fmt$0],fmtty$0]}
          break;
         case 1:
          if(typeof fmtty!=="number"&&0===fmtty[0])
           {var
             fmtty_rest$0=fmtty[1],
             fmt_rest$0=fmt[1],
             match$0=_aU_(fmt_rest$0,fmtty_rest$0),
             fmtty$1=match$0[2],
             fmt$1=match$0[1];
            return [0,[1,fmt$1],fmtty$1]}
          break;
         case 2:
          var
           fmt_rest$1=fmt[2],
           pad=fmt[1],
           _gD_=_aS_(pad,fmtty),
           _gE_=_gD_[2],
           _gF_=_gD_[1];
          if(typeof _gE_!=="number"&&1===_gE_[0])
           {var
             fmtty_rest$1=_gE_[1],
             match$1=_aU_(fmt_rest$1,fmtty_rest$1),
             fmtty$2=match$1[2],
             fmt$2=match$1[1];
            return [0,[2,_gF_,fmt$2],fmtty$2]}
          throw _aR_;
         case 3:
          var
           fmt_rest$2=fmt[2],
           pad$0=fmt[1],
           _gG_=_aS_(pad$0,fmtty),
           _gH_=_gG_[2],
           _gI_=_gG_[1];
          if(typeof _gH_!=="number"&&1===_gH_[0])
           {var
             fmtty_rest$2=_gH_[1],
             match$2=_aU_(fmt_rest$2,fmtty_rest$2),
             fmtty$3=match$2[2],
             fmt$3=match$2[1];
            return [0,[3,_gI_,fmt$3],fmtty$3]}
          throw _aR_;
         case 4:
          var
           fmt_rest$3=fmt[4],
           prec=fmt[3],
           pad$1=fmt[2],
           iconv=fmt[1],
           _gJ_=_aT_(pad$1,prec,fmtty),
           _gK_=_gJ_[3],
           _gL_=_gJ_[2],
           _gM_=_gJ_[1];
          if(typeof _gK_!=="number"&&2===_gK_[0])
           {var
             fmtty_rest$3=_gK_[1],
             match$3=_aU_(fmt_rest$3,fmtty_rest$3),
             fmtty$4=match$3[2],
             fmt$4=match$3[1];
            return [0,[4,iconv,_gM_,_gL_,fmt$4],fmtty$4]}
          throw _aR_;
         case 5:
          var
           fmt_rest$4=fmt[4],
           prec$0=fmt[3],
           pad$2=fmt[2],
           iconv$0=fmt[1],
           _gN_=_aT_(pad$2,prec$0,fmtty),
           _gO_=_gN_[3],
           _gP_=_gN_[2],
           _gQ_=_gN_[1];
          if(typeof _gO_!=="number"&&3===_gO_[0])
           {var
             fmtty_rest$4=_gO_[1],
             match$4=_aU_(fmt_rest$4,fmtty_rest$4),
             fmtty$5=match$4[2],
             fmt$5=match$4[1];
            return [0,[5,iconv$0,_gQ_,_gP_,fmt$5],fmtty$5]}
          throw _aR_;
         case 6:
          var
           fmt_rest$5=fmt[4],
           prec$1=fmt[3],
           pad$3=fmt[2],
           iconv$1=fmt[1],
           _gR_=_aT_(pad$3,prec$1,fmtty),
           _gS_=_gR_[3],
           _gT_=_gR_[2],
           _gU_=_gR_[1];
          if(typeof _gS_!=="number"&&4===_gS_[0])
           {var
             fmtty_rest$5=_gS_[1],
             match$5=_aU_(fmt_rest$5,fmtty_rest$5),
             fmtty$6=match$5[2],
             fmt$6=match$5[1];
            return [0,[6,iconv$1,_gU_,_gT_,fmt$6],fmtty$6]}
          throw _aR_;
         case 7:
          var
           fmt_rest$6=fmt[4],
           prec$2=fmt[3],
           pad$4=fmt[2],
           iconv$2=fmt[1],
           _gV_=_aT_(pad$4,prec$2,fmtty),
           _gW_=_gV_[3],
           _gX_=_gV_[2],
           _gY_=_gV_[1];
          if(typeof _gW_!=="number"&&5===_gW_[0])
           {var
             fmtty_rest$6=_gW_[1],
             match$6=_aU_(fmt_rest$6,fmtty_rest$6),
             fmtty$7=match$6[2],
             fmt$7=match$6[1];
            return [0,[7,iconv$2,_gY_,_gX_,fmt$7],fmtty$7]}
          throw _aR_;
         case 8:
          var
           fmt_rest$7=fmt[4],
           prec$3=fmt[3],
           pad$5=fmt[2],
           fconv=fmt[1],
           _gZ_=_aT_(pad$5,prec$3,fmtty),
           _g0_=_gZ_[3],
           _g1_=_gZ_[2],
           _g2_=_gZ_[1];
          if(typeof _g0_!=="number"&&6===_g0_[0])
           {var
             fmtty_rest$7=_g0_[1],
             match$7=_aU_(fmt_rest$7,fmtty_rest$7),
             fmtty$8=match$7[2],
             fmt$8=match$7[1];
            return [0,[8,fconv,_g2_,_g1_,fmt$8],fmtty$8]}
          throw _aR_;
         case 9:
          if(typeof fmtty!=="number"&&7===fmtty[0])
           {var
             fmtty_rest$8=fmtty[1],
             fmt_rest$8=fmt[1],
             match$8=_aU_(fmt_rest$8,fmtty_rest$8),
             fmtty$9=match$8[2],
             fmt$9=match$8[1];
            return [0,[9,fmt$9],fmtty$9]}
          break;
         case 10:
          var
           fmt_rest$9=fmt[1],
           match$9=_aU_(fmt_rest$9,fmtty),
           fmtty$10=match$9[2],
           fmt$10=match$9[1];
          return [0,[10,fmt$10],fmtty$10];
         case 11:
          var
           fmt_rest$10=fmt[2],
           str=fmt[1],
           match$10=_aU_(fmt_rest$10,fmtty),
           fmtty$11=match$10[2],
           fmt$11=match$10[1];
          return [0,[11,str,fmt$11],fmtty$11];
         case 12:
          var
           fmt_rest$11=fmt[2],
           chr=fmt[1],
           match$11=_aU_(fmt_rest$11,fmtty),
           fmtty$12=match$11[2],
           fmt$12=match$11[1];
          return [0,[12,chr,fmt$12],fmtty$12];
         case 13:
          if(typeof fmtty!=="number"&&8===fmtty[0])
           {var
             fmtty_rest$9=fmtty[2],
             sub_fmtty=fmtty[1],
             fmt_rest$12=fmt[3],
             sub_fmtty$0=fmt[2],
             pad_opt=fmt[1];
            if(caml_notequal([0,sub_fmtty$0],[0,sub_fmtty]))throw _aR_;
            var
             match$12=_aU_(fmt_rest$12,fmtty_rest$9),
             fmtty$13=match$12[2],
             fmt$13=match$12[1];
            return [0,[13,pad_opt,sub_fmtty,fmt$13],fmtty$13]}
          break;
         case 14:
          if(typeof fmtty!=="number"&&9===fmtty[0])
           {var
             fmtty_rest$10=fmtty[3],
             sub_fmtty1=fmtty[1],
             fmt_rest$13=fmt[3],
             sub_fmtty$1=fmt[2],
             pad_opt$0=fmt[1],
             _g3_=[0,_a_(sub_fmtty1)];
            if(caml_notequal([0,_a_(sub_fmtty$1)],_g3_))throw _aR_;
            var
             match$13=_aU_(fmt_rest$13,_a_(fmtty_rest$10)),
             fmtty$14=match$13[2],
             fmt$14=match$13[1];
            return [0,[14,pad_opt$0,sub_fmtty1,fmt$14],fmtty$14]}
          break;
         case 15:
          if(typeof fmtty!=="number"&&10===fmtty[0])
           {var
             fmtty_rest$11=fmtty[1],
             fmt_rest$14=fmt[1],
             match$14=_aU_(fmt_rest$14,fmtty_rest$11),
             fmtty$15=match$14[2],
             fmt$15=match$14[1];
            return [0,[15,fmt$15],fmtty$15]}
          break;
         case 16:
          if(typeof fmtty!=="number"&&11===fmtty[0])
           {var
             fmtty_rest$12=fmtty[1],
             fmt_rest$15=fmt[1],
             match$15=_aU_(fmt_rest$15,fmtty_rest$12),
             fmtty$16=match$15[2],
             fmt$16=match$15[1];
            return [0,[16,fmt$16],fmtty$16]}
          break;
         case 17:
          var
           fmt_rest$16=fmt[2],
           formatting_lit=fmt[1],
           match$16=_aU_(fmt_rest$16,fmtty),
           fmtty$17=match$16[2],
           fmt$17=match$16[1];
          return [0,[17,formatting_lit,fmt$17],fmtty$17];
         case 18:
          var fmt_rest$17=fmt[2],formatting_gen=fmt[1];
          if(0===formatting_gen[0])
           {var
             match$20=formatting_gen[1],
             str$0=match$20[2],
             fmt1=match$20[1],
             match$21=_aU_(fmt1,fmtty),
             fmtty2=match$21[2],
             fmt2=match$21[1],
             match$22=_aU_(fmt_rest$17,fmtty2),
             fmtty3=match$22[2],
             fmt3=match$22[1];
            return [0,[18,[0,[0,fmt2,str$0]],fmt3],fmtty3]}
          var
           match$23=formatting_gen[1],
           str$1=match$23[2],
           fmt1$0=match$23[1],
           match$24=_aU_(fmt1$0,fmtty),
           fmtty2$0=match$24[2],
           fmt2$0=match$24[1],
           match$25=_aU_(fmt_rest$17,fmtty2$0),
           fmtty3$0=match$25[2],
           fmt3$0=match$25[1];
          return [0,[18,[1,[0,fmt2$0,str$1]],fmt3$0],fmtty3$0];
         case 19:
          if(typeof fmtty!=="number"&&13===fmtty[0])
           {var
             fmtty_rest$13=fmtty[1],
             fmt_rest$18=fmt[1],
             match$17=_aU_(fmt_rest$18,fmtty_rest$13),
             fmtty$18=match$17[2],
             fmt$18=match$17[1];
            return [0,[19,fmt$18],fmtty$18]}
          break;
         case 20:
          if(typeof fmtty!=="number"&&1===fmtty[0])
           {var
             fmtty_rest$14=fmtty[1],
             fmt_rest$19=fmt[3],
             char_set=fmt[2],
             width_opt=fmt[1],
             match$18=_aU_(fmt_rest$19,fmtty_rest$14),
             fmtty$19=match$18[2],
             fmt$19=match$18[1];
            return [0,[20,width_opt,char_set,fmt$19],fmtty$19]}
          break;
         case 21:
          if(typeof fmtty!=="number"&&2===fmtty[0])
           {var
             fmtty_rest$15=fmtty[1],
             fmt_rest$20=fmt[2],
             counter=fmt[1],
             match$19=_aU_(fmt_rest$20,fmtty_rest$15),
             fmtty$20=match$19[2],
             fmt$20=match$19[1];
            return [0,[21,counter,fmt$20],fmtty$20]}
          break;
         case 23:
          var rest=fmt[2],ign=fmt[1];
          if(typeof ign==="number")
           switch(ign)
            {case 0:return _aV_(ign,rest,fmtty);
             case 1:return _aV_(ign,rest,fmtty);
             case 2:return _aV_(ign,rest,fmtty);
             case 3:
              if(typeof fmtty!=="number"&&14===fmtty[0])
               {var
                 fmtty_rest$16=fmtty[1],
                 match$26=_aU_(rest,fmtty_rest$16),
                 fmtty$21=match$26[2],
                 fmt$21=match$26[1];
                return [0,[23,3,fmt$21],fmtty$21]}
              throw _aR_;
             default:return _aV_(ign,rest,fmtty)}
          else
           switch(ign[0])
            {case 0:return _aV_(ign,rest,fmtty);
             case 1:return _aV_(ign,rest,fmtty);
             case 2:return _aV_(ign,rest,fmtty);
             case 3:return _aV_(ign,rest,fmtty);
             case 4:return _aV_(ign,rest,fmtty);
             case 5:return _aV_(ign,rest,fmtty);
             case 6:return _aV_(ign,rest,fmtty);
             case 7:
              var sub_fmtty$2=ign[2],pad_opt$1=ign[1];
              return _aV_([7,pad_opt$1,sub_fmtty$2],rest,fmtty);
             case 8:
              var
               sub_fmtty$3=ign[2],
               pad_opt$2=ign[1],
               _g4_=_aW_(sub_fmtty$3,rest,fmtty),
               match$27=_g4_[2],
               fmtty$22=match$27[2],
               fmt$22=match$27[1],
               sub_fmtty$4=_g4_[1];
              return [0,[23,[8,pad_opt$2,sub_fmtty$4],fmt$22],fmtty$22];
             case 9:return _aV_(ign,rest,fmtty);
             default:return _aV_(ign,rest,fmtty)}
         }
      throw _aR_}
    function _aV_(ign,fmt,fmtty)
     {var match=_aU_(fmt,fmtty),fmtty$0=match[2],fmt$0=match[1];
      return [0,[23,ign,fmt$0],fmtty$0]}
    function _aW_(sub_fmtty,fmt,match)
     {if(typeof sub_fmtty==="number")
       return [0,0,_aU_(fmt,match)];
      else
       switch(sub_fmtty[0])
        {case 0:
          if(typeof match!=="number"&&0===match[0])
           {var
             fmtty_rest=match[1],
             sub_fmtty_rest=sub_fmtty[1],
             match$0=_aW_(sub_fmtty_rest,fmt,fmtty_rest),
             fmt$0=match$0[2],
             sub_fmtty_rest$0=match$0[1];
            return [0,[0,sub_fmtty_rest$0],fmt$0]}
          break;
         case 1:
          if(typeof match!=="number"&&1===match[0])
           {var
             fmtty_rest$0=match[1],
             sub_fmtty_rest$1=sub_fmtty[1],
             match$1=_aW_(sub_fmtty_rest$1,fmt,fmtty_rest$0),
             fmt$1=match$1[2],
             sub_fmtty_rest$2=match$1[1];
            return [0,[1,sub_fmtty_rest$2],fmt$1]}
          break;
         case 2:
          if(typeof match!=="number"&&2===match[0])
           {var
             fmtty_rest$1=match[1],
             sub_fmtty_rest$3=sub_fmtty[1],
             match$2=_aW_(sub_fmtty_rest$3,fmt,fmtty_rest$1),
             fmt$2=match$2[2],
             sub_fmtty_rest$4=match$2[1];
            return [0,[2,sub_fmtty_rest$4],fmt$2]}
          break;
         case 3:
          if(typeof match!=="number"&&3===match[0])
           {var
             fmtty_rest$2=match[1],
             sub_fmtty_rest$5=sub_fmtty[1],
             match$3=_aW_(sub_fmtty_rest$5,fmt,fmtty_rest$2),
             fmt$3=match$3[2],
             sub_fmtty_rest$6=match$3[1];
            return [0,[3,sub_fmtty_rest$6],fmt$3]}
          break;
         case 4:
          if(typeof match!=="number"&&4===match[0])
           {var
             fmtty_rest$3=match[1],
             sub_fmtty_rest$7=sub_fmtty[1],
             match$4=_aW_(sub_fmtty_rest$7,fmt,fmtty_rest$3),
             fmt$4=match$4[2],
             sub_fmtty_rest$8=match$4[1];
            return [0,[4,sub_fmtty_rest$8],fmt$4]}
          break;
         case 5:
          if(typeof match!=="number"&&5===match[0])
           {var
             fmtty_rest$4=match[1],
             sub_fmtty_rest$9=sub_fmtty[1],
             match$5=_aW_(sub_fmtty_rest$9,fmt,fmtty_rest$4),
             fmt$5=match$5[2],
             sub_fmtty_rest$10=match$5[1];
            return [0,[5,sub_fmtty_rest$10],fmt$5]}
          break;
         case 6:
          if(typeof match!=="number"&&6===match[0])
           {var
             fmtty_rest$5=match[1],
             sub_fmtty_rest$11=sub_fmtty[1],
             match$6=_aW_(sub_fmtty_rest$11,fmt,fmtty_rest$5),
             fmt$6=match$6[2],
             sub_fmtty_rest$12=match$6[1];
            return [0,[6,sub_fmtty_rest$12],fmt$6]}
          break;
         case 7:
          if(typeof match!=="number"&&7===match[0])
           {var
             fmtty_rest$6=match[1],
             sub_fmtty_rest$13=sub_fmtty[1],
             match$7=_aW_(sub_fmtty_rest$13,fmt,fmtty_rest$6),
             fmt$7=match$7[2],
             sub_fmtty_rest$14=match$7[1];
            return [0,[7,sub_fmtty_rest$14],fmt$7]}
          break;
         case 8:
          if(typeof match!=="number"&&8===match[0])
           {var
             fmtty_rest$7=match[2],
             sub2_fmtty=match[1],
             sub_fmtty_rest$15=sub_fmtty[2],
             sub2_fmtty$0=sub_fmtty[1];
            if(caml_notequal([0,sub2_fmtty$0],[0,sub2_fmtty]))throw _aR_;
            var
             match$8=_aW_(sub_fmtty_rest$15,fmt,fmtty_rest$7),
             fmt$8=match$8[2],
             sub_fmtty_rest$16=match$8[1];
            return [0,[8,sub2_fmtty,sub_fmtty_rest$16],fmt$8]}
          break;
         case 9:
          if(typeof match!=="number"&&9===match[0])
           {var
             fmtty_rest$8=match[3],
             sub2_fmtty$1=match[2],
             sub1_fmtty=match[1],
             sub_fmtty_rest$17=sub_fmtty[3],
             sub2_fmtty$2=sub_fmtty[2],
             sub1_fmtty$0=sub_fmtty[1],
             _gB_=[0,_a_(sub1_fmtty)];
            if(caml_notequal([0,_a_(sub1_fmtty$0)],_gB_))throw _aR_;
            var _gC_=[0,_a_(sub2_fmtty$1)];
            if(caml_notequal([0,_a_(sub2_fmtty$2)],_gC_))throw _aR_;
            var
             sub_fmtty$0=_az_(_ax_(sub1_fmtty),sub2_fmtty$1),
             match$9=_ay_(sub_fmtty$0),
             f4=match$9[4],
             f2=match$9[2];
            caml_call1(f2,0);
            caml_call1(f4,0);
            var
             match$10=_aW_(_a_(sub_fmtty_rest$17),fmt,fmtty_rest$8),
             fmt$9=match$10[2],
             sub_fmtty_rest$18=match$10[1];
            return [0,
                    [9,sub1_fmtty,sub2_fmtty$1,_ax_(sub_fmtty_rest$18)],
                    fmt$9]}
          break;
         case 10:
          if(typeof match!=="number"&&10===match[0])
           {var
             fmtty_rest$9=match[1],
             sub_fmtty_rest$19=sub_fmtty[1],
             match$11=_aW_(sub_fmtty_rest$19,fmt,fmtty_rest$9),
             fmt$10=match$11[2],
             sub_fmtty_rest$20=match$11[1];
            return [0,[10,sub_fmtty_rest$20],fmt$10]}
          break;
         case 11:
          if(typeof match!=="number"&&11===match[0])
           {var
             fmtty_rest$10=match[1],
             sub_fmtty_rest$21=sub_fmtty[1],
             match$12=_aW_(sub_fmtty_rest$21,fmt,fmtty_rest$10),
             fmt$11=match$12[2],
             sub_fmtty_rest$22=match$12[1];
            return [0,[11,sub_fmtty_rest$22],fmt$11]}
          break;
         case 13:
          if(typeof match!=="number"&&13===match[0])
           {var
             fmtty_rest$11=match[1],
             sub_fmtty_rest$23=sub_fmtty[1],
             match$13=_aW_(sub_fmtty_rest$23,fmt,fmtty_rest$11),
             fmt$12=match$13[2],
             sub_fmtty_rest$24=match$13[1];
            return [0,[13,sub_fmtty_rest$24],fmt$12]}
          break;
         case 14:
          if(typeof match!=="number"&&14===match[0])
           {var
             fmtty_rest$12=match[1],
             sub_fmtty_rest$25=sub_fmtty[1],
             match$14=_aW_(sub_fmtty_rest$25,fmt,fmtty_rest$12),
             fmt$13=match$14[2],
             sub_fmtty_rest$26=match$14[1];
            return [0,[14,sub_fmtty_rest$26],fmt$13]}
          break
         }
      throw _aR_}
    function _aX_(padty,width,str)
     {var
       len=caml_ml_string_length(str),
       padty$0=0<=width?padty:0,
       width$0=abs(width);
      if(width$0<=len)return str;
      var _gA_=2===padty$0?48:32,res=make(width$0,_gA_);
      switch(padty$0)
       {case 0:_C_(str,0,res,0,len);break;
        case 1:_C_(str,0,res,width$0-len|0,len);break;
        default:
         if(0<len)
          {if(43===caml_string_get(str,0))
            var switch$1=1;
           else
            if(45===caml_string_get(str,0))
             var switch$1=1;
            else
             if(32===caml_string_get(str,0))
              var switch$1=1;
             else
              var switch$0=0,switch$1=0;
           if(switch$1)
            {caml_string_set(res,0,caml_string_get(str,0));
             _C_(str,1,res,(width$0-len|0)+1|0,len-1|0);
             var switch$0=1}}
         else
          var switch$0=0;
         if(!switch$0)
          {if(1<len)
            if(48===caml_string_get(str,0))
             {if(120===caml_string_get(str,1))
               var switch$3=1;
              else
               if(88===caml_string_get(str,1))
                var switch$3=1;
               else
                var switch$2=0,switch$3=0;
              if(switch$3)
               {caml_string_set(res,1,caml_string_get(str,1));
                _C_(str,2,res,(width$0-len|0)+2|0,len-2|0);
                var switch$2=1}}
            else
             var switch$2=0;
           else
            var switch$2=0;
           if(!switch$2)_C_(str,0,res,width$0-len|0,len)}}
      return res}
    function _aY_(prec,str)
     {var
       prec$0=abs(prec),
       len=caml_ml_string_length(str),
       c=caml_string_get(str,0);
      if(58<=c)
       var switch$0=71<=c?5<(c-97|0)>>>0?1:0:65<=c?0:1;
      else
       {if(32===c)
         var switch$1=1;
        else
         if(43<=c)
          {var switcher=c-43|0;
           switch(switcher)
            {case 5:
              if(len<(prec$0+2|0))
               if(1<len)
                {var
                  switch$2=
                   120===caml_string_get(str,1)
                    ?0
                    :88===caml_string_get(str,1)?0:1;
                 if(!switch$2)
                  {var res$1=make(prec$0+2|0,48);
                   caml_string_set(res$1,1,caml_string_get(str,1));
                   _C_(str,2,res$1,(prec$0-len|0)+4|0,len-2|0);
                   return res$1}}
              var switch$0=0,switch$1=0;
              break;
             case 0:
             case 2:var switch$1=1;break;
             case 1:
             case 3:
             case 4:var switch$0=1,switch$1=0;break;
             default:var switch$0=0,switch$1=0}}
         else
          var switch$0=1,switch$1=0;
        if(switch$1)
         {if(len<(prec$0+1|0))
           {var res$0=make(prec$0+1|0,48);
            caml_string_set(res$0,0,c);
            _C_(str,1,res$0,(prec$0-len|0)+2|0,len-1|0);
            return res$0}
          var switch$0=1}}
      if(!switch$0)
       if(len<prec$0)
        {var res=make(prec$0,48);_C_(str,0,res,prec$0-len|0,len);return res}
      return str}
    function _aZ_(str)
     {var i$1=0;
      for(;;)
       {if(caml_ml_string_length(str)<=i$1)
         var _gx_=0;
        else
         {var
           c$1=caml_string_unsafe_get(str,i$1),
           switch$0=
            14<=c$1?34===c$1?1:92===c$1?1:0:11<=c$1?13<=c$1?1:0:8<=c$1?1:0;
          if(switch$0)
           var _gx_=1;
          else
           {if(caml_is_printable(c$1)){var i$2=i$1+1|0,i$1=i$2;continue}
            var _gx_=1}}
        if(_gx_)
         {var n=[0,0],_gq_=caml_ml_string_length(str)-1|0,_gp_=0;
          if(!(_gq_<0))
           {var i$0=_gp_;
            for(;;)
             {var
               c$0=caml_string_unsafe_get(str,i$0),
               switch$1=
                14<=c$0?34===c$0?1:92===c$0?1:0:11<=c$0?13<=c$0?1:0:8<=c$0?1:0,
               _gv_=switch$1?2:caml_is_printable(c$0)?1:4;
              n[1]=n[1]+_gv_|0;
              var _gw_=i$0+1|0;
              if(_gq_!==i$0){var i$0=_gw_;continue}
              break}}
          if(n[1]===caml_ml_string_length(str))
           {var len=caml_ml_string_length(str),r=caml_create_string(len);
            caml_blit_string(str,0,r,0,len);
            var _gy_=r}
          else
           {var s=caml_create_string(n[1]);
            n[1]=0;
            var _gs_=caml_ml_string_length(str)-1|0,_gr_=0;
            if(!(_gs_<0))
             {var i=_gr_;
              for(;;)
               {var c=caml_string_unsafe_get(str,i),_gt_=c-34|0;
                if(58<_gt_>>>0)
                 if(-20<=_gt_)
                  var switch$2=1;
                 else
                  {var switcher=_gt_+34|0;
                   switch(switcher)
                    {case 8:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],98);
                      var switch$3=1;
                      break;
                     case 9:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],116);
                      var switch$3=1;
                      break;
                     case 10:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],110);
                      var switch$3=1;
                      break;
                     case 13:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],114);
                      var switch$3=1;
                      break;
                     default:var switch$2=1,switch$3=0}
                   if(switch$3)var switch$2=0}
                else
                 var
                  switcher$0=_gt_-1|0,
                  switch$2=
                   56<switcher$0>>>0
                    ?(caml_string_unsafe_set(s,n[1],92),
                      n[1]++,
                      caml_string_unsafe_set(s,n[1],c),
                      0)
                    :1;
                if(switch$2)
                 if(caml_is_printable(c))
                  caml_string_unsafe_set(s,n[1],c);
                 else
                  {caml_string_unsafe_set(s,n[1],92);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+(c/100|0)|0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+((c/10|0)%10|0)|0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+(c%10|0)|0)}
                n[1]++;
                var _gu_=i+1|0;
                if(_gs_!==i){var i=_gu_;continue}
                break}}
            var _gy_=s}
          var _gz_=_gy_}
        else
         var _gz_=str;
        return _H_(_gz_,_a0_)}}
    function _bc_(iconv,c)
     {switch(iconv)
       {case 0:var seps=_bd_;break;
        case 1:var seps=_be_;break;
        case 2:var seps=_bf_;break;
        case 3:var seps=_bg_;break;
        case 4:var seps=_bh_;break;
        case 5:var seps=_bi_;break;
        case 6:var seps=_bj_;break;
        case 7:var seps=_bk_;break;
        case 8:var seps=_bl_;break;
        case 9:var seps=_bm_;break;
        case 10:var seps=_bn_;break;
        case 11:var seps=_bo_;break;
        default:var seps=_bp_}
      return _H_(_F_(1,c),seps)}
    function _br_(iconv,n)
     {switch(iconv)
       {case 0:var _go_=_a1_;break;
        case 1:var _go_=_a2_;break;
        case 2:var _go_=_a3_;break;
        case 3:var _go_=_a4_;break;
        case 4:var _go_=_a5_;break;
        case 5:var _go_=_a6_;break;
        case 6:var _go_=_a7_;break;
        case 7:var _go_=_a8_;break;
        case 8:var _go_=_a9_;break;
        case 9:var _go_=_a__;break;
        case 10:var _go_=_a$_;break;
        case 11:var _go_=_ba_;break;
        default:var _go_=_bb_}
      return caml_format_int(_go_,n)}
    function _bs_(iconv,n){return caml_format_int(_bc_(iconv,108),n)}
    function _bt_(iconv,n){return caml_format_int(_bc_(iconv,110),n)}
    function _bu_(iconv,n){return caml_int64_format(_bc_(iconv,76),n)}
    function _bv_(fconv,prec$0,x)
     {var prec$1=abs(prec$0);
      if(15===fconv)
       var _gl_=_bq_;
      else
       {var prec=abs(prec$1);
        switch(fconv)
         {case 15:var symb=70;break;
          case 0:
          case 1:
          case 2:var symb=102;break;
          case 3:
          case 4:
          case 5:var symb=101;break;
          case 6:
          case 7:
          case 8:var symb=69;break;
          case 9:
          case 10:
          case 11:var symb=103;break;
          default:var symb=71}
        var buf=_T_(16);
        _V_(buf,37);
        switch(fconv)
         {case 1:
          case 4:
          case 7:
          case 10:
          case 13:_V_(buf,43);break;
          case 2:
          case 5:
          case 8:
          case 11:
          case 14:_V_(buf,32);break
          }
        _V_(buf,46);
        _W_(buf,caml_new_string(""+prec));
        _V_(buf,symb);
        var _gl_=_X_(buf)}
      var str=caml_format_float(_gl_,x);
      if(15===fconv)
       {var len=caml_ml_string_length(str),match$0=caml_classify_float(x);
        if(3===match$0)return x<0?_bw_:_bx_;
        if(4<=match$0)return _by_;
        var i=0;
        for(;;)
         {if(i===len)
           var _gn_=0;
          else
           {var
             match=caml_string_get(str,i),
             _gm_=match-46|0,
             switch$0=23<_gm_>>>0?55===_gm_?1:0:21<(_gm_-1|0)>>>0?1:0;
            if(!switch$0){var i$0=i+1|0,i=i$0;continue}
            var _gn_=1}
          return _gn_?str:_e_(str,_bz_)}}
      return str}
    function _bB_(k,o,acc,fmt)
     {var k$0=k,acc$0=acc,fmt$0=fmt;
      for(;;)
       if(typeof fmt$0==="number")
        return caml_call2(k$0,o,acc$0);
       else
        switch(fmt$0[0])
         {case 0:
           var rest=fmt$0[1];
           return function(c)
            {var new_acc=[5,acc$0,c];return _bB_(k$0,o,new_acc,rest)};
          case 1:
           var rest$0=fmt$0[1];
           return function(c)
            {if(39===c)
              var _gk_=_r_;
             else
              if(92===c)
               var _gk_=_s_;
              else
               {if(14<=c)
                 var switch$0=0;
                else
                 switch(c)
                  {case 8:var _gk_=_t_,switch$0=1;break;
                   case 9:var _gk_=_u_,switch$0=1;break;
                   case 10:var _gk_=_v_,switch$0=1;break;
                   case 13:var _gk_=_w_,switch$0=1;break;
                   default:var switch$0=0}
                if(!switch$0)
                 if(caml_is_printable(c))
                  {var s=caml_create_string(1);
                   caml_string_unsafe_set(s,0,c);
                   var _gk_=s}
                 else
                  {var s$0=caml_create_string(4);
                   caml_string_unsafe_set(s$0,0,92);
                   caml_string_unsafe_set(s$0,1,48+(c/100|0)|0);
                   caml_string_unsafe_set(s$0,2,48+((c/10|0)%10|0)|0);
                   caml_string_unsafe_set(s$0,3,48+(c%10|0)|0);
                   var _gk_=s$0}}
             var new_acc=[4,acc$0,_H_(_gk_,_bA_)];
             return _bB_(k$0,o,new_acc,rest$0)};
          case 2:
           var rest$1=fmt$0[2],pad=fmt$0[1];
           return _bE_(k$0,o,acc$0,rest$1,pad,function(str){return str});
          case 3:
           var rest$2=fmt$0[2],pad$0=fmt$0[1];
           return _bE_(k$0,o,acc$0,rest$2,pad$0,_aZ_);
          case 4:
           var rest$3=fmt$0[4],prec=fmt$0[3],pad$1=fmt$0[2],iconv=fmt$0[1];
           return _bF_(k$0,o,acc$0,rest$3,pad$1,prec,_br_,iconv);
          case 5:
           var
            rest$4=fmt$0[4],
            prec$0=fmt$0[3],
            pad$2=fmt$0[2],
            iconv$0=fmt$0[1];
           return _bF_(k$0,o,acc$0,rest$4,pad$2,prec$0,_bs_,iconv$0);
          case 6:
           var
            rest$5=fmt$0[4],
            prec$1=fmt$0[3],
            pad$3=fmt$0[2],
            iconv$1=fmt$0[1];
           return _bF_(k$0,o,acc$0,rest$5,pad$3,prec$1,_bt_,iconv$1);
          case 7:
           var
            rest$6=fmt$0[4],
            prec$2=fmt$0[3],
            pad$4=fmt$0[2],
            iconv$2=fmt$0[1];
           return _bF_(k$0,o,acc$0,rest$6,pad$4,prec$2,_bu_,iconv$2);
          case 8:
           var rest$7=fmt$0[4],prec$3=fmt$0[3],pad$5=fmt$0[2],fconv=fmt$0[1];
           if(typeof pad$5==="number")
            {if(typeof prec$3==="number")
              return 0===prec$3
                      ?function(x)
                        {var str=_bv_(fconv,_S_,x);
                         return _bB_(k$0,o,[4,acc$0,str],rest$7)}
                      :function(p,x)
                        {var str=_bv_(fconv,p,x);
                         return _bB_(k$0,o,[4,acc$0,str],rest$7)};
             var p=prec$3[1];
             return function(x)
              {var str=_bv_(fconv,p,x);
               return _bB_(k$0,o,[4,acc$0,str],rest$7)}}
           else
            {if(0===pad$5[0])
              {var _gf_=pad$5[2],_gg_=pad$5[1];
               if(typeof prec$3==="number")
                return 0===prec$3
                        ?function(x)
                          {var str=_bv_(fconv,_S_,x),str$0=_aX_(_gg_,_gf_,str);
                           return _bB_(k$0,o,[4,acc$0,str$0],rest$7)}
                        :function(p,x)
                          {var str=_aX_(_gg_,_gf_,_bv_(fconv,p,x));
                           return _bB_(k$0,o,[4,acc$0,str],rest$7)};
               var p$0=prec$3[1];
               return function(x)
                {var str=_aX_(_gg_,_gf_,_bv_(fconv,p$0,x));
                 return _bB_(k$0,o,[4,acc$0,str],rest$7)}}
             var _gh_=pad$5[1];
             if(typeof prec$3==="number")
              return 0===prec$3
                      ?function(w,x)
                        {var str=_bv_(fconv,_S_,x),str$0=_aX_(_gh_,w,str);
                         return _bB_(k$0,o,[4,acc$0,str$0],rest$7)}
                      :function(w,p,x)
                        {var str=_aX_(_gh_,w,_bv_(fconv,p,x));
                         return _bB_(k$0,o,[4,acc$0,str],rest$7)};
             var p$1=prec$3[1];
             return function(w,x)
              {var str=_aX_(_gh_,w,_bv_(fconv,p$1,x));
               return _bB_(k$0,o,[4,acc$0,str],rest$7)}}
          case 9:
           var rest$8=fmt$0[1];
           return function(b)
            {var _gj_=b?_f_:_g_;return _bB_(k$0,o,[4,acc$0,_gj_],rest$8)};
          case 10:
           var rest$9=fmt$0[1],acc$1=[7,acc$0],acc$0=acc$1,fmt$0=rest$9;
           continue;
          case 11:
           var
            rest$10=fmt$0[2],
            str=fmt$0[1],
            acc$2=[2,acc$0,str],
            acc$0=acc$2,
            fmt$0=rest$10;
           continue;
          case 12:
           var
            rest$11=fmt$0[2],
            chr=fmt$0[1],
            acc$3=[3,acc$0,chr],
            acc$0=acc$3,
            fmt$0=rest$11;
           continue;
          case 13:
           var rest$12=fmt$0[3],sub_fmtty=fmt$0[2],buf=_T_(16);
           _af_(buf,sub_fmtty);
           var ty=_X_(buf);
           return function(str){return _bB_(k$0,o,[4,acc$0,ty],rest$12)};
          case 14:
           var rest$13=fmt$0[3],fmtty=fmt$0[2];
           return function(param)
            {var
              fmt$0=param[1],
              fmtty$0=_a_(_ax_(fmtty)),
              _gi_=_aU_(fmt$0,fmtty$0);
             if(typeof _gi_[2]==="number")
              {var fmt=_gi_[1];return _bB_(k$0,o,acc$0,_c_(fmt,rest$13))}
             throw _aR_};
          case 15:
           var rest$14=fmt$0[1];
           return function(f,x)
            {return _bB_
                     (k$0,
                      o,
                      [6,acc$0,function(o){return caml_call2(f,o,x)}],
                      rest$14)};
          case 16:
           var rest$15=fmt$0[1];
           return function(f){return _bB_(k$0,o,[6,acc$0,f],rest$15)};
          case 17:
           var
            rest$16=fmt$0[2],
            fmting_lit=fmt$0[1],
            acc$4=[0,acc$0,fmting_lit],
            acc$0=acc$4,
            fmt$0=rest$16;
           continue;
          case 18:
           var _ge_=fmt$0[1];
           if(0===_ge_[0])
            {var
              rest$17=fmt$0[2],
              match=_ge_[1],
              fmt$1=match[1],
              k$3=
               function(acc,k,rest)
                {function k$0(koc,kacc)
                  {return _bB_(k,koc,[1,acc,[0,kacc]],rest)}
                 return k$0},
              k$1=k$3(acc$0,k$0,rest$17),
              k$0=k$1,
              acc$0=0,
              fmt$0=fmt$1;
             continue}
           var
            rest$18=fmt$0[2],
            match$0=_ge_[1],
            fmt$2=match$0[1],
            k$4=
             function(acc,k,rest)
              {function k$0(koc,kacc)
                {return _bB_(k,koc,[1,acc,[1,kacc]],rest)}
               return k$0},
            k$2=k$4(acc$0,k$0,rest$18),
            k$0=k$2,
            acc$0=0,
            fmt$0=fmt$2;
           continue;
          case 19:throw [0,Assert_failure,_bH_];
          case 20:
           var rest$19=fmt$0[3],new_acc=[8,acc$0,_bI_];
           return function(param){return _bB_(k$0,o,new_acc,rest$19)};
          case 21:
           var rest$20=fmt$0[2];
           return function(n)
            {var new_acc=[4,acc$0,caml_format_int(_bJ_,n)];
             return _bB_(k$0,o,new_acc,rest$20)};
          case 22:
           var rest$21=fmt$0[1];
           return function(c)
            {var new_acc=[5,acc$0,c];return _bB_(k$0,o,new_acc,rest$21)};
          case 23:
           var rest$22=fmt$0[2],ign=fmt$0[1];
           if(typeof ign==="number")
            switch(ign)
             {case 0:return _bD_(k$0,o,acc$0,rest$22);
              case 1:return _bD_(k$0,o,acc$0,rest$22);
              case 2:return _bD_(k$0,o,acc$0,rest$22);
              case 3:throw [0,Assert_failure,_bK_];
              default:return _bD_(k$0,o,acc$0,rest$22)}
           else
            switch(ign[0])
             {case 0:return _bD_(k$0,o,acc$0,rest$22);
              case 1:return _bD_(k$0,o,acc$0,rest$22);
              case 2:return _bD_(k$0,o,acc$0,rest$22);
              case 3:return _bD_(k$0,o,acc$0,rest$22);
              case 4:return _bD_(k$0,o,acc$0,rest$22);
              case 5:return _bD_(k$0,o,acc$0,rest$22);
              case 6:return _bD_(k$0,o,acc$0,rest$22);
              case 7:return _bD_(k$0,o,acc$0,rest$22);
              case 8:
               var fmtty$0=ign[2];return _bC_(k$0,o,acc$0,fmtty$0,rest$22);
              case 9:return _bD_(k$0,o,acc$0,rest$22);
              default:return _bD_(k$0,o,acc$0,rest$22)}
          default:
           var rest$23=fmt$0[3],f=fmt$0[2],arity=fmt$0[1];
           return _bG_(k$0,o,acc$0,rest$23,arity,caml_call1(f,0))}}
    function _bC_(k,o,acc,fmtty,fmt)
     {if(typeof fmtty==="number")
       return _bD_(k,o,acc,fmt);
      else
       switch(fmtty[0])
        {case 0:
          var rest=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest,fmt)};
         case 1:
          var rest$0=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$0,fmt)};
         case 2:
          var rest$1=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$1,fmt)};
         case 3:
          var rest$2=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$2,fmt)};
         case 4:
          var rest$3=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$3,fmt)};
         case 5:
          var rest$4=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$4,fmt)};
         case 6:
          var rest$5=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$5,fmt)};
         case 7:
          var rest$6=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$6,fmt)};
         case 8:
          var rest$7=fmtty[2];
          return function(param){return _bC_(k,o,acc,rest$7,fmt)};
         case 9:
          var
           rest$8=fmtty[3],
           ty2=fmtty[2],
           ty1=fmtty[1],
           ty=_az_(_ax_(ty1),ty2);
          return function(param){return _bC_(k,o,acc,_b_(ty,rest$8),fmt)};
         case 10:
          var rest$9=fmtty[1];
          return function(param,_gd_){return _bC_(k,o,acc,rest$9,fmt)};
         case 11:
          var rest$10=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$10,fmt)};
         case 12:
          var rest$11=fmtty[1];
          return function(param){return _bC_(k,o,acc,rest$11,fmt)};
         case 13:throw [0,Assert_failure,_bL_];
         default:throw [0,Assert_failure,_bM_]}}
    function _bD_(k,o,acc,fmt){return _bB_(k,o,[8,acc,_bN_],fmt)}
    function _bE_(k,o,acc,fmt,pad,trans)
     {if(typeof pad==="number")
       return function(x)
        {var new_acc=[4,acc,caml_call1(trans,x)];
         return _bB_(k,o,new_acc,fmt)};
      else
       {if(0===pad[0])
         {var width=pad[2],padty=pad[1];
          return function(x)
           {var new_acc=[4,acc,_aX_(padty,width,caml_call1(trans,x))];
            return _bB_(k,o,new_acc,fmt)}}
        var padty$0=pad[1];
        return function(w,x)
         {var new_acc=[4,acc,_aX_(padty$0,w,caml_call1(trans,x))];
          return _bB_(k,o,new_acc,fmt)}}}
    function _bF_(k,o,acc,fmt,pad,match,trans,iconv)
     {if(typeof pad==="number")
       {if(typeof match==="number")
         return 0===match
                 ?function(x)
                   {var str=caml_call2(trans,iconv,x);
                    return _bB_(k,o,[4,acc,str],fmt)}
                 :function(p,x)
                   {var str=_aY_(p,caml_call2(trans,iconv,x));
                    return _bB_(k,o,[4,acc,str],fmt)};
        var p=match[1];
        return function(x)
         {var str=_aY_(p,caml_call2(trans,iconv,x));
          return _bB_(k,o,[4,acc,str],fmt)}}
      else
       {if(0===pad[0])
         {var _ga_=pad[2],_gb_=pad[1];
          if(typeof match==="number")
           return 0===match
                   ?function(x)
                     {var str=_aX_(_gb_,_ga_,caml_call2(trans,iconv,x));
                      return _bB_(k,o,[4,acc,str],fmt)}
                   :function(p,x)
                     {var str=_aX_(_gb_,_ga_,_aY_(p,caml_call2(trans,iconv,x)));
                      return _bB_(k,o,[4,acc,str],fmt)};
          var p$0=match[1];
          return function(x)
           {var str=_aX_(_gb_,_ga_,_aY_(p$0,caml_call2(trans,iconv,x)));
            return _bB_(k,o,[4,acc,str],fmt)}}
        var _gc_=pad[1];
        if(typeof match==="number")
         return 0===match
                 ?function(w,x)
                   {var str=_aX_(_gc_,w,caml_call2(trans,iconv,x));
                    return _bB_(k,o,[4,acc,str],fmt)}
                 :function(w,p,x)
                   {var str=_aX_(_gc_,w,_aY_(p,caml_call2(trans,iconv,x)));
                    return _bB_(k,o,[4,acc,str],fmt)};
        var p$1=match[1];
        return function(w,x)
         {var str=_aX_(_gc_,w,_aY_(p$1,caml_call2(trans,iconv,x)));
          return _bB_(k,o,[4,acc,str],fmt)}}}
    function _bG_(k,o,acc,rest,arity,f)
     {if(arity)
       {var arity$0=arity[1];
        return function(x){return _bG_(k,o,acc,rest,arity$0,caml_call1(f,x))}}
      return _bB_(k,o,[4,acc,f],rest)}
    function _bO_(o,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0==="number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var fmting_lit=acc$0[2],p=acc$0[1],s=_Y_(fmting_lit);
           _bO_(o,p);
           return output_string(o,s);
          case 1:
           var _f__=acc$0[2],_f$_=acc$0[1];
           if(0===_f__[0])
            {var acc$1=_f__[1];
             _bO_(o,_f$_);
             output_string(o,_bP_);
             var acc$0=acc$1;
             continue}
           var acc$2=_f__[1];
           _bO_(o,_f$_);
           output_string(o,_bQ_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2],p$2=acc$0[1];_bO_(o,p$2);return caml_call1(f,o);
          case 7:var p$3=acc$0[1];_bO_(o,p$3);return caml_ml_flush(o);
          case 8:
           var msg=acc$0[2],p$4=acc$0[1];_bO_(o,p$4);return invalid_arg(msg);
          case 2:
          case 4:
           var s$0=acc$0[2],p$0=acc$0[1];
           _bO_(o,p$0);
           return output_string(o,s$0);
          default:
           var c=acc$0[2],p$1=acc$0[1];
           _bO_(o,p$1);
           return caml_ml_output_char(o,c)}}
    function _bR_(b,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0==="number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var fmting_lit=acc$0[2],p=acc$0[1],s=_Y_(fmting_lit);
           _bR_(b,p);
           return _R_(b,s);
          case 1:
           var _f8_=acc$0[2],_f9_=acc$0[1];
           if(0===_f8_[0])
            {var acc$1=_f8_[1];
             _bR_(b,_f9_);
             _R_(b,_bS_);
             var acc$0=acc$1;
             continue}
           var acc$2=_f8_[1];
           _bR_(b,_f9_);
           _R_(b,_bT_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2],p$2=acc$0[1];
           _bR_(b,p$2);
           return _R_(b,caml_call1(f,0));
          case 7:var p$3=acc$0[1],acc$0=p$3;continue;
          case 8:
           var msg=acc$0[2],p$4=acc$0[1];_bR_(b,p$4);return invalid_arg(msg);
          case 2:
          case 4:var s$0=acc$0[2],p$0=acc$0[1];_bR_(b,p$0);return _R_(b,s$0);
          default:
           var c=acc$0[2],p$1=acc$0[1];
           _bR_(b,p$1);
           var pos=b[2];
           if(b[3]<=pos)_P_(b,1);
           caml_string_unsafe_set(b[1],pos,c);
           b[2]=pos+1|0;
           return 0}}
    function _bU_(oc,fmt$0)
     {var fmt=fmt$0[1],_f7_=0;
      return _bB_(function(o,acc){_bO_(o,acc);return 0},oc,_f7_,fmt)}
    function _bV_(fmt$0)
     {var fmt=fmt$0[1];
      function k(param,acc)
       {var s=caml_create_string(64),buf=[0,s,0,64,s];
        _bR_(buf,acc);
        return _z_(buf[1],0,buf[2])}
      return _bB_(k,0,0,fmt)}
    var printers=[0,0];
    function field(x,i$1)
     {var f=x[i$1+1];
      if(caml_obj_is_block(f))
       {if(caml_obj_tag(f)===252)return caml_call1(_bV_(_bW_),f);
        if(caml_obj_tag(f)===253)
         {var s=caml_format_float(_i_,f),l=caml_ml_string_length(s),i=0;
          for(;;)
           {if(l<=i)return _e_(s,_h_);
            var
             match=caml_string_get(s,i),
             switch$0=48<=match?58<=match?0:1:45===match?1:0;
            if(switch$0){var i$0=i+1|0,i=i$0;continue}
            return s}}
        return _bX_}
      return caml_call1(_bV_(_bY_),f)}
    function other_fields(x,i)
     {if(x.length-1<=i)return _bZ_;
      var _f5_=other_fields(x,i+1|0),_f6_=field(x,i);
      return caml_call2(_bV_(_b0_),_f6_,_f5_)}
    function fields(x)
     {var n=x.length-1;
      if(2<n>>>0)
       {var _f2_=other_fields(x,2),_f3_=field(x,1);
        return caml_call2(_bV_(_b1_),_f3_,_f2_)}
      switch(n)
       {case 0:return _b2_;
        case 1:return _b3_;
        default:var _f4_=field(x,1);return caml_call1(_bV_(_b4_),_f4_)}}
    function to_string(x)
     {function conv(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var tl=param$0[2],hd=param$0[1];
            try {var _f0_=caml_call1(hd,x),_fZ_=_f0_}catch(_f1_){var _fZ_=0}
            if(_fZ_){var s=_fZ_[1];return s}
            var param$0=tl;
            continue}
          if(x===Out_of_memory)return _b5_;
          if(x===Stack_overflow)return _b6_;
          if(x[1]===Match_failure)
           {var match=x[2],char$0=match[3],line=match[2],file=match[1];
            return caml_call5(_bV_(locfmt),file,line,char$0,char$0+5|0,_b7_)}
          if(x[1]===Assert_failure)
           {var
             match$0=x[2],
             char$1=match$0[3],
             line$0=match$0[2],
             file$0=match$0[1];
            return caml_call5
                    (_bV_(locfmt),file$0,line$0,char$1,char$1+6|0,_b8_)}
          if(x[1]===Undefined_recursive_module)
           {var
             match$1=x[2],
             char$2=match$1[3],
             line$1=match$1[2],
             file$1=match$1[1];
            return caml_call5
                    (_bV_(locfmt),file$1,line$1,char$2,char$2+6|0,_b9_)}
          if(0===caml_obj_tag(x))
           {var constructor=x[1][1];return _e_(constructor,fields(x))}
          return x[1]}}
      return conv(printers[1])}
    function convert_raw_backtrace(rbckt)
     {try
       {var
         _fW_=
          [0,
           _j_
            (function(_fY_){return caml_convert_raw_backtrace_slot(_fY_)},
             rbckt)];
        return _fW_}
      catch(_fX_)
       {_fX_=caml_wrap_exception(_fX_);
        if(_fX_[1]===Failure)return 0;
        throw _fX_}}
    function print_backtrace(outchan)
     {var
       raw_backtrace=caml_get_exception_raw_backtrace(0),
       backtrace=convert_raw_backtrace(raw_backtrace);
      if(backtrace)
       {var a=backtrace[1],_fU_=a.length-1-1|0,_fT_=0;
        if(!(_fU_<0))
         {var i=_fT_;
          for(;;)
           {var
             slot=caml_check_bound(a,i)[i+1],
             info$0=
              function(i)
               {function info(is_raise)
                 {return is_raise?0===i?_b__:_b$_:0===i?_ca_:_cb_}
                return info},
             info=info$0(i);
            if(0===slot[0])
             var
              endchar=slot[5],
              startchar=slot[4],
              lineno=slot[3],
              filename=slot[2],
              is_raise=slot[1],
              _fR_=info(is_raise),
              match=
               [0,
                caml_call5(_bV_(_cc_),_fR_,filename,lineno,startchar,endchar)];
            else
             if(0===slot[1])
              var _fS_=info(0),match=[0,caml_call1(_bV_(_cd_),_fS_)];
             else
              var match=0;
            if(match){var str=match[1];caml_call1(_bU_(outchan,_ce_),str)}
            var _fV_=i+1|0;
            if(_fU_!==i){var i=_fV_;continue}
            break}}
        return 0}
      return _bU_(outchan,_cf_)}
    function register_printer(fn){printers[1]=[0,fn,printers[1]];return 0}
    var _ch_=caml_set_oo_id([248,_cg_,0]);
    function _ci_(seq)
     {var
       _fP_=seq[4],
       _fQ_=_fP_?(seq[4]=0,seq[1][2]=seq[2],seq[2][1]=seq[1],0):_fP_;
      return _fQ_}
    function _cj_(param)
     {var seq=[];caml_update_dummy(seq,[0,seq,seq]);return seq}
    function _ck_(seq){return seq[2]===seq?1:0}
    var Canceled=caml_set_oo_id([248,_cl_,0]),current_data=[0,0];
    function repr_rec(t)
     {var _fO_=t[1];
      if(3===_fO_[0])
       {var t$0=_fO_[1],t$1=repr_rec(t$0);
        if(t$1!==t$0)t[1]=[3,t$1];
        return t$1}
      return t}
    function repr(t){return repr_rec(t)}
    var
     async_exception_hook=
      [0,
       function(exn)
        {prerr_string(_cm_);
         prerr_string(to_string(exn));
         caml_ml_output_char(stderr,10);
         print_backtrace(stderr);
         caml_ml_flush(stderr);
         do_at_exit(0);
         return caml_sys_exit(2)}];
    function call_unsafe(f,x)
     {try
       {var _fN_=caml_call1(f,x);return _fN_}
      catch(exn)
       {exn=caml_wrap_exception(exn);
        return caml_call1(async_exception_hook[1],exn)}}
    function run_waiters_rec(state,ws,rem)
     {var ws$0=ws,rem$0=rem;
      for(;;)
       if(typeof ws$0==="number")
        return run_waiters_rec_next(state,rem$0);
       else
        switch(ws$0[0])
         {case 0:
           var _fM_=ws$0[1][1];
           if(_fM_)
            {var f=_fM_[1];
             caml_call1(f,state);
             return run_waiters_rec_next(state,rem$0)}
           return run_waiters_rec_next(state,rem$0);
          case 1:
           var f$0=ws$0[1];
           caml_call1(f$0,state);
           return run_waiters_rec_next(state,rem$0);
          default:
           var
            ws2=ws$0[2],
            ws1=ws$0[1],
            rem$1=[0,ws2,rem$0],
            ws$0=ws1,
            rem$0=rem$1;
           continue}}
    function run_waiters_rec_next(state,rem)
     {if(rem)
       {var rem$0=rem[2],ws=rem[1];return run_waiters_rec(state,ws,rem$0)}
      return 0}
    function run_cancel_handlers_rec(chs,rem)
     {var chs$0=chs,rem$0=rem;
      for(;;)
       if(typeof chs$0==="number")
        return run_cancel_handlers_rec_next(rem$0);
       else
        switch(chs$0[0])
         {case 0:
           var f=chs$0[2],data=chs$0[1];
           current_data[1]=data;
           call_unsafe(f,0);
           return run_cancel_handlers_rec_next(rem$0);
          case 1:
           var n=chs$0[1];_ci_(n);return run_cancel_handlers_rec_next(rem$0);
          default:
           var
            chs2=chs$0[2],
            chs1=chs$0[1],
            rem$1=[0,chs2,rem$0],
            chs$0=chs1,
            rem$0=rem$1;
           continue}}
    function run_cancel_handlers_rec_next(rem)
     {if(rem)
       {var rem$0=rem[2],chs=rem[1];return run_cancel_handlers_rec(chs,rem$0)}
      return 0}
    function unsafe_run_waiters(sleeper,state)
     {var
       switch$0=
        1===state[0]
         ?state[1]===Canceled?(run_cancel_handlers_rec(sleeper[4],0),1):0
         :0;
      return run_waiters_rec(state,sleeper[2],0)}
    var wakening=[0,0],to_wakeup=[0,0,0];
    function safe_run_waiters(sleeper,state)
     {var
       snapshot=current_data[1],
       already_wakening=wakening[1]?1:(wakening[1]=1,0);
      unsafe_run_waiters(sleeper,state);
      if(already_wakening){current_data[1]=snapshot;return 0}
      for(;;)
       {if(0===to_wakeup[1]){wakening[1]=0;current_data[1]=snapshot;return 0}
        if(0===to_wakeup[1])throw _N_;
        to_wakeup[1]=to_wakeup[1]-1|0;
        var tail=to_wakeup[2],head=tail[2];
        if(head===tail)to_wakeup[2]=0;else tail[2]=head[2];
        var _fL_=head[1];
        unsafe_run_waiters(_fL_[1],_fL_[2]);
        continue}}
    function wakeup_result(t,state)
     {var t$0=repr_rec(t),_fK_=t$0[1];
      switch(_fK_[0])
       {case 1:if(_fK_[1]===Canceled)return 0;break;
        case 2:
         var sleeper=_fK_[1];
         t$0[1]=state;
         return safe_run_waiters(sleeper,state)
        }
      return invalid_arg(_cn_)}
    function wakeup(t,v){return wakeup_result(t,[0,v])}
    function append(l1,l2)
     {return typeof l1==="number"?l2:typeof l2==="number"?l1:[2,l1,l2]}
    function cleanup(ws)
     {if(typeof ws!=="number")
       switch(ws[0])
        {case 0:if(!ws[1][1])return 0;break;
         case 2:
          var l2=ws[2],l1=ws[1],_fJ_=cleanup(l2);
          return append(cleanup(l1),_fJ_)
         }
      return ws}
    function connect(t1,t2)
     {var t1$0=repr(t1),t2$0=repr(t2),_fE_=t1$0[1];
      if(2===_fE_[0])
       {var sleeper1=_fE_[1];
        if(t1$0===t2$0)return 0;
        var _fF_=t2$0[1];
        if(2===_fF_[0])
         {var sleeper2=_fF_[1];
          t2$0[1]=[3,t1$0];
          sleeper1[1]=sleeper2[1];
          var
           waiters=append(sleeper1[2],sleeper2[2]),
           removed=sleeper1[3]+sleeper2[3]|0;
          if(42<removed)
           {sleeper1[3]=0;sleeper1[2]=cleanup(waiters)}
          else
           {sleeper1[3]=removed;sleeper1[2]=waiters}
          var
           _fG_=sleeper2[4],
           _fH_=sleeper1[4],
           _fI_=
            typeof _fH_==="number"
             ?_fG_
             :typeof _fG_==="number"?_fH_:[2,_fH_,_fG_];
          sleeper1[4]=_fI_;
          return 0}
        t1$0[1]=_fF_;
        return unsafe_run_waiters(sleeper1,_fF_)}
      throw [0,Assert_failure,_cp_]}
    function fast_connect(t,state)
     {var t$0=repr(t),_fD_=t$0[1];
      if(2===_fD_[0])
       {var sleeper=_fD_[1];
        t$0[1]=state;
        return unsafe_run_waiters(sleeper,state)}
      throw [0,Assert_failure,_cq_]}
    function return$0(v){return [0,[0,v]]}
    var return_unit=[0,state_return_unit];
    function fail(e){return [0,[1,e]]}
    function temp(t){return [0,[2,[0,[0,[0,t]],0,0,0]]]}
    function task(param){var t=[0,[2,[0,1,0,0,0]]];return [0,t,t]}
    function add_immutable_waiter(sleeper,waiter$0)
     {var
       waiter$1=[1,waiter$0],
       _fC_=sleeper[2],
       waiter=typeof _fC_==="number"?waiter$1:[2,waiter$1,_fC_];
      sleeper[2]=waiter;
      return 0}
    function on_cancel(t,f)
     {var _fA_=repr(t)[1];
      switch(_fA_[0])
       {case 1:if(_fA_[1]===Canceled)return call_unsafe(f,0);break;
        case 2:
         var
          sleeper=_fA_[1],
          handler=[0,current_data[1],f],
          _fB_=sleeper[4],
          handler$0=typeof _fB_==="number"?handler:[2,handler,_fB_];
         sleeper[4]=handler$0;
         return 0
        }
      return 0}
    function bind(t,f)
     {var t$0=repr(t),_fx_=t$0[1];
      switch(_fx_[0])
       {case 0:var v=_fx_[1];return caml_call1(f,v);
        case 1:return [0,_fx_];
        case 2:
         var sleeper=_fx_[1],res=temp(t$0),data=current_data[1];
         add_immutable_waiter
          (sleeper,
           function(state)
            {switch(state[0])
              {case 0:
                var v=state[1];
                current_data[1]=data;
                try
                 {var _fz_=caml_call1(f,v),_fy_=_fz_}
                catch(exn){exn=caml_wrap_exception(exn);var _fy_=fail(exn)}
                return connect(res,_fy_);
               case 1:return fast_connect(res,state);
               default:throw [0,Assert_failure,_cr_]}});
         return res;
        default:throw [0,Assert_failure,_cs_]}}
    function catch$0(x,f)
     {try
       {var _fu_=caml_call1(x,0),_fs_=_fu_}
      catch(exn){exn=caml_wrap_exception(exn);var _fs_=fail(exn)}
      var t=repr(_fs_),_ft_=t[1];
      switch(_ft_[0])
       {case 0:return t;
        case 1:var exn=_ft_[1];return caml_call1(f,exn);
        case 2:
         var sleeper=_ft_[1],res=temp(t),data=current_data[1];
         add_immutable_waiter
          (sleeper,
           function(state)
            {switch(state[0])
              {case 0:return fast_connect(res,state);
               case 1:
                var exn=state[1];
                current_data[1]=data;
                try
                 {var _fw_=caml_call1(f,exn),_fv_=_fw_}
                catch(exn){exn=caml_wrap_exception(exn);var _fv_=fail(exn)}
                return connect(res,_fv_);
               default:throw [0,Assert_failure,_ct_]}});
         return res;
        default:throw [0,Assert_failure,_cu_]}}
    var
     pause_hook=[0,function(_fr_){return 0}],
     s1=_cj_(0),
     _cv_=[0,0],
     window=joo_global_object,
     jsoo_560e4fa1=null,
     origin=undefined;
    function _cw_(param)
     {if(_ck_(s1)){_cv_[1]=0;return 0}
      var seq=_cj_(0);
      seq[1][2]=s1[2];
      s1[2][1]=seq[1];
      seq[1]=s1[1];
      s1[1][2]=seq;
      s1[1]=s1;
      s1[2]=s1;
      _cv_[1]=0;
      var curr=seq[2];
      for(;;)
       {var _fq_=curr!==seq?1:0;
        if(_fq_)
         {if(curr[4])wakeup(curr[3],0);
          var curr$0=curr[2],curr=curr$0;
          continue}
        return _fq_}}
    function _cx_(x,f,g)
     {return x==jsoo_560e4fa1?caml_call1(f,0):caml_call1(g,x)}
    function _cy_(x,f,g){return x===origin?caml_call1(f,0):caml_call1(g,x)}
    var
     false$0=false,
     jsoo_bd4e937f=window.RegExp,
     jsoo_7bc72a9e=window.Array,
     Error=caml_set_oo_id([248,_cz_,0]),
     exn=[0,Error,{}],
     jsoo_c11647d6=true,
     slot=caml_obj_tag(exn)===248?exn:exn[1];
    caml_register_named_value(caml_new_string("jsError"),slot);
    (function(exn){throw exn});
    register_printer
     (function(param)
       {if(param[1]===Error)
         {var e=param[2];return [0,caml_js_to_string(e.toString())]}
        return 0});
    register_printer
     (function(jsoo_self)
       {return jsoo_self instanceof jsoo_7bc72a9e
                ?0
                :[0,caml_js_to_string(jsoo_self.toString())]});
    function _cA_(jsoo_self,jsoo_ad7fbbdd)
     {jsoo_self.appendChild(jsoo_ad7fbbdd);return 0}
    function _cB_(jsoo_self,jsoo_1df5757a)
     {jsoo_self.removeChild(jsoo_1df5757a);return 0}
    function handler(f)
     {return function(jsoo_self)
       {if(1-(jsoo_self==jsoo_560e4fa1?1:0))
         {var res=caml_call1(f,jsoo_self);
          if(!(res|0))jsoo_self.preventDefault();
          return res}
        var jsoo_obj=event,match=caml_call1(f,jsoo_obj);
        if(!(match|0))jsoo_obj.returnValue=match;
        return match}}
    var onIE=caml_js_on_ie(0)|0,document=window.document;
    function opt_iter(x,f){if(x){var v=x[1];return caml_call1(f,v)}return 0}
    function createElement(jsoo_self,name)
     {return jsoo_self.createElement(name.toString())}
    function unsafeCreateElement(doc,name){return createElement(doc,name)}
    var createElementSyntax=[0,785140586];
    function unsafeCreateElementEx(type,name,doc,elt)
     {for(;;)
       {if(0===type)if(0===name)return createElement(doc,elt);
        var _fk_=createElementSyntax[1];
        if(785140586===_fk_)
         {try
           {var
             el=document.createElement('<input name="x">'),
             _fn_=el.tagName.toLowerCase()==="input"?1:0,
             _fo_=_fn_?el.name==="x"?1:0:_fn_,
             _fl_=_fo_}
          catch(_fp_){var _fl_=0}
          var _fm_=_fl_?982028505:-1003883683;
          createElementSyntax[1]=_fm_;
          continue}
        if(982028505<=_fk_)
         {var a=new jsoo_7bc72a9e();
          a.push("<",elt.toString());
          opt_iter
           (type,
            function(t){a.push(' type="',caml_js_html_escape(t),'"');return 0});
          opt_iter
           (name,
            function(n){a.push(' name="',caml_js_html_escape(n),'"');return 0});
          a.push(">");
          return doc.createElement(a.join(""))}
        var res=createElement(doc,elt);
        opt_iter(type,function(jsoo_arg){return res.type=jsoo_arg});
        opt_iter(name,function(jsoo_arg){return res.name=jsoo_arg});
        return res}}
    function createOption(doc){return unsafeCreateElement(doc,_cC_)}
    function createDiv(doc){return unsafeCreateElement(doc,_cE_)}
    function createBr(doc){return unsafeCreateElement(doc,_cG_)}
    caml_set_oo_id([248,_cJ_,0]);
    var html_element=window.HTMLElement;
    html_element===origin;
    var _cK_=2147483e3,jsoo_self=caml_js_get_console(0);
    function sleep(d)
     {var match=task(0),w=match[2],t=match[1],d$0=d*1e3;
      function callback(_fj_){return wakeup(w,_fj_)}
      var id=[0,0];
      function loop(d,param)
       {var
         match=2147483e3<d?[0,_cK_,d-2147483e3]:[0,d,0],
         remain=match[2],
         step=match[1],
         cb=remain==0?callback:function(_fi_){return loop(remain,_fi_)};
        id[1]=[0,window.setTimeout(caml_js_wrap_callback(cb),step)];
        return 0}
      loop(d$0,0);
      on_cancel
       (t,
        function(param)
         {var _fh_=id[1];
          if(_fh_){var x=_fh_[1];id[1]=0;return window.clearTimeout(x)}
          return 0});
      return t}
    function f(param)
     {return 1===param?(window.setTimeout(caml_js_wrap_callback(_cw_),0),0):0}
    pause_hook[1]=f;
    function _cL_(s){return jsoo_self.log(s.toString())}
    async_exception_hook[1]=
    function(exn)
     {_cL_(_cM_);_cL_(to_string(exn));return print_backtrace(stderr)};
    function regexp(s){return new jsoo_bd4e937f(caml_bytes_of_string(s),"g")}
    new jsoo_bd4e937f("[$]","g");
    var jsoo_97b9daf3=regexp(_cN_),Local_exn=caml_set_oo_id([248,_cO_,0]);
    function interrupt(param){throw Local_exn}
    regexp
     (caml_js_to_byte_string
       (caml_bytes_of_string(s).replace(jsoo_97b9daf3,"\\$&")));
    var jsoo_d19f6f5e=new jsoo_bd4e937f("\\+","g");
    function urldecode_js_string_string(s$0)
     {jsoo_d19f6f5e.lastIndex=0;
      var s=s$0.replace(jsoo_d19f6f5e," ");
      return caml_js_to_byte_string(window.unescape(s))}
    caml_set_oo_id([248,_cP_,0]);
    new jsoo_bd4e937f(caml_bytes_of_string(_cT_));
    new jsoo_bd4e937f(caml_bytes_of_string(_cU_));
    var x=window.location;
    if(x!==origin)
     var l$0=window.location;
    else
     var
      hash="",
      reload=caml_js_wrap_meth_callback(function(param){return 0}),
      replace=caml_js_wrap_meth_callback(function(param,_fg_){return 0}),
      assign=caml_js_wrap_meth_callback(function(param,_ff_){return 0}),
      l$0=
       {"href":hash,
        "protocol":hash,
        "host":hash,
        "hostname":hash,
        "port":hash,
        "pathname":hash,
        "search":hash,
        "hash":hash,
        "origin":origin,
        "reload":reload,
        "replace":replace,
        "assign":assign};
    urldecode_js_string_string(l$0.hostname);
    urldecode_js_string_string(l$0.protocol);
    var _cV_=0;
    (function(param)
       {try
         {var _fd_=[0,caml_int_of_string(caml_js_to_byte_string(l$0.port))];
          return _fd_}
        catch(_fe_)
         {_fe_=caml_wrap_exception(_fe_);
          if(_fe_[1]===Failure)return 0;
          throw _fe_}}
      (_cV_));
    var
     s$0=urldecode_js_string_string(l$0.pathname),
     l=caml_ml_string_length(s$0);
    function aux(i)
     {try
       {var _fb_=_J_(s$0,i,47),j=_fb_}
      catch(_fc_)
       {_fc_=caml_wrap_exception(_fc_);if(_fc_!==Not_found)throw _fc_;var j=l}
      var word=_G_(s$0,i,j-i|0);
      return l<=j?[0,word,0]:[0,word,aux(j+1|0)]}
    var a=aux(0);
    if(a)
     if(caml_string_notequal(a[1],_cQ_))
      var switch$0=0;
     else
      var
       _cR_=a[2],
       switch$0=_cR_?caml_string_notequal(_cR_[1],_cS_)?0:_cR_[2]?0:1:1;
    else
     var switch$0=0;
    var
     _cW_=l$0.search.charAt(0)==="?"?l$0.search.slice(1):l$0.search,
     arr=_cW_.split(_F_(1,38).toString()),
     len=arr.length;
    function aux$0(acc,idx)
     {var idx$0=idx;
      for(;;)
       {if(0<=idx$0)
         try
          {var
            _e6_=idx$0-1|0,
            _e7_=
             function(s)
              {function _e$_(param)
                {var y=param[2],x=param[1],_fa_=urldecode_js_string_string(y);
                 return [0,urldecode_js_string_string(x),_fa_]}
               var jsoo_18184c07=s.indexOf(_F_(1,61).toString());
               if(0<=jsoo_18184c07)
                var
                 jsoo_res=s.slice(jsoo_18184c07+1|0),
                 _e__=[0,s.slice(0,jsoo_18184c07),jsoo_res];
               else
                var _e__=origin;
               return _cy_(_e__,interrupt,_e$_)},
            _e8_=aux$0([0,_cy_(arr[idx$0],interrupt,_e7_),acc],_e6_);
           return _e8_}
         catch(_e9_)
          {_e9_=caml_wrap_exception(_e9_);
           if(_e9_===Local_exn){var idx$1=idx$0-1|0,idx$0=idx$1;continue}
           throw _e9_}
        return acc}}
    aux$0(0,len-1|0);
    urldecode_js_string_string(l$0.href);
    function _cX_(param)
     {var
       xmlHttpRequest=window.XMLHttpRequest,
       activeXObject=window.activeXObject;
      try
       {var _e1_=new xmlHttpRequest();return _e1_}
      catch(_e2_)
       {try
         {var _e0_=new activeXObject("Msxml2.XMLHTTP");return _e0_}
        catch(_e3_)
         {try
           {var _eZ_=new activeXObject("Msxml3.XMLHTTP");return _eZ_}
          catch(_e4_)
           {try
             {var _eY_=new activeXObject("Microsoft.XMLHTTP");return _eY_}
            catch(_e5_){throw [0,Assert_failure,_cY_]}}}}}
    var _c0_=caml_set_oo_id([248,_cZ_,0]),doc=window.document;
    function append_text(e,s){return _cA_(e,doc.createTextNode(s.toString()))}
    function replace_child(p,n)
     {var c=p.firstChild;if(c!=jsoo_560e4fa1)_cB_(p,c);return _cA_(p,n)}
    var
     box_style=
      "border: 1px black solid; background-color: white ; display: inline ; padding-right: .5em; padding-left: .5em;",
     loading_style=
      "background-color: red; color: white; display:inline; position: absolute; top:0; right:0;",
     Death=caml_set_oo_id([248,_c4_,0]);
    function img_assoc(v)
     {switch(v)
       {case 0:return "sprites/empty.png";
        case 1:return "sprites/grass.png";
        case 2:return "sprites/diamond.png";
        case 3:return "sprites/boulder.png";
        case 4:return "sprites/door.png";
        case 5:return "sprites/end.png";
        case 6:return "sprites/guy.png";
        case 7:return "sprites/wall.png";
        default:return "sprites/bam.png"}}
    function set_cell(state,x,y,v)
     {caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1]=v;
      var jsoo_obj=caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1];
      return jsoo_obj.src=img_assoc(v)}
    function fall(state)
     {var changed=[0,0],_eG_=state[1].length-1-2|0;
      if(!(_eG_<1))
       {var y=_eG_;
        for(;;)
         {var _eJ_=caml_check_bound(state[1],y)[y+1].length-1-2|0,_eI_=1;
          if(!(_eJ_<1))
           {var x=_eI_;
            for(;;)
             {var
               _eL_=y+1|0,
               _eM_=
                6===
                 caml_check_bound(caml_check_bound(state[1],_eL_)[_eL_+1],x)
                  [x+1]
                 ?1
                 :0,
               sustaining=
                _eM_
                 ?3===
                   caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1]
                   ?1
                   :0
                 :_eM_;
              if
               (0===
                caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
               var
                _eN_=y-1|0,
                switch$0=
                 3===
                  caml_check_bound(caml_check_bound(state[1],_eN_)[_eN_+1],x)
                   [x+1]
                  ?(set_cell(state,x,y-1|0,0),
                    set_cell(state,x,y,3),
                    changed[1]=
                    1,
                    1)
                  :0;
              else
               var switch$0=0;
              if
               (0===
                caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
               {var _eO_=y-1|0;
                if
                 (0===
                  caml_check_bound(caml_check_bound(state[1],_eO_)[_eO_+1],x)
                   [x+1])
                 {var _eP_=x-1|0;
                  if
                   (3===
                    caml_check_bound(caml_check_bound(state[1],y)[y+1],_eP_)
                     [_eP_+1])
                   var
                    _eQ_=x-1|0,
                    _eR_=y-1|0,
                    switch$1=
                     3===
                      caml_check_bound
                        (caml_check_bound(state[1],_eR_)[_eR_+1],_eQ_)
                       [_eQ_+1]
                      ?(set_cell(state,x-1|0,y-1|0,0),
                        set_cell(state,x,y,3),
                        changed[1]=
                        1,
                        1)
                      :0;
                  else
                   var switch$1=0}
                else
                 var switch$1=0}
              else
               var switch$1=0;
              if
               (0===
                caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
               {var _eS_=y-1|0;
                if
                 (0===
                  caml_check_bound(caml_check_bound(state[1],_eS_)[_eS_+1],x)
                   [x+1])
                 {var _eT_=x+1|0;
                  if
                   (3===
                    caml_check_bound(caml_check_bound(state[1],y)[y+1],_eT_)
                     [_eT_+1])
                   var
                    _eU_=x+1|0,
                    _eV_=y-1|0,
                    switch$2=
                     3===
                      caml_check_bound
                        (caml_check_bound(state[1],_eV_)[_eV_+1],_eU_)
                       [_eU_+1]
                      ?(set_cell(state,x+1|0,y-1|0,0),
                        set_cell(state,x,y,3),
                        changed[1]=
                        1,
                        1)
                      :0;
                  else
                   var switch$2=0}
                else
                 var switch$2=0}
              else
               var switch$2=0;
              if(!sustaining)
               {var _eX_=y+1|0;
                if
                 (6===
                  caml_check_bound(caml_check_bound(state[1],_eX_)[_eX_+1],x)
                   [x+1])
                 if
                  (3===
                   caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
                  {set_cell(state,x,y+1|0,8);throw Death}}
              var _eW_=x+1|0;
              if(_eJ_!==x){var x=_eW_;continue}
              break}}
          var _eK_=y-1|0;
          if(1!==y){var y=_eK_;continue}
          break}}
      if(changed[1])
       {var _eH_=function(param){return fall(state)};
        return bind(sleep(0.05),_eH_)}
      return return$0(0)}
    function build_interaction(state,show_rem,clock)
     {var clock_stop=clock[3];
      function _dN_(param)
       {var _dT_=state[1].length-1-1|0,_dS_=0;
        if(!(_dT_<0))
         {var y$0=_dS_;
          for(;;)
           {var
             _dW_=caml_check_bound(state[1],y$0)[y$0+1].length-1-1|0,
             _dV_=0;
            if(!(_dW_<0))
             {var x$1=_dV_;
              for(;;)
               {caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$1)
                 [x$1+1].onmouseover=
                jsoo_560e4fa1;
                caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$1)
                 [x$1+1].onmouseout=
                jsoo_560e4fa1;
                caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$1)
                 [x$1+1].onclick=
                jsoo_560e4fa1;
                var _dY_=x$1+1|0;
                if(_dW_!==x$1){var x$1=_dY_;continue}
                break}}
            var _dX_=y$0+1|0;
            if(_dT_!==y$0){var y$0=_dX_;continue}
            break}}
        function inhibit(f,x)
         {if(!state[8])
           {state[8]=1;
            var _eF_=function(param){state[8]=0;return return$0(0)};
            bind(caml_call1(f,0),_eF_)}
          return false$0}
        function set_pending_out(f,out,param)
         {function _eE_(param){state[9][1]=[0,out];return return$0(0)}
          return bind(caml_call1(f,0),_eE_)}
        function with_pending_out(f,param)
         {var _eD_=state[9][1];
          if(_eD_)
           {var out=_eD_[1];
            caml_call1(out,0);
            state[9][1]=0;
            return caml_call1(f,0)}
          return caml_call1(f,0)}
        function update(param,next,img,over_cont,out_cont,click_cont)
         {var
           param$0=param,
           over_cont$0=over_cont,
           out_cont$0=out_cont,
           click_cont$0=click_cont;
          for(;;)
           {var
             y=param$0[2],
             x=param$0[1],
             param$1=
              caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1];
            if(5===param$1)
             var switch$0=0;
            else
             if(3<=param$1)var _ef_=0,switch$0=1;else var switch$0=0;
            if(!switch$0)var _ef_=1;
            if(_ef_)
             {var
               cur_img=
                caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1].src,
               over_cont$2=
                function(over_cont,y,x)
                 {function over_cont$0(param)
                   {caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1].src=
                    img;
                    return caml_call1(over_cont,0)}
                  return over_cont$0},
               over_cont$1=over_cont$2(over_cont$0,y,x),
               out_cont$2=
                function(out_cont,y,x,cur_img)
                 {function out_cont$0(param)
                   {caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1].src=
                    cur_img;
                    return caml_call1(out_cont,0)}
                  return out_cont$0},
               out_cont$1=out_cont$2(out_cont$0,y,x,cur_img),
               click_cont$2=
                function(click_cont,y,x)
                 {function click_cont$0(param)
                   {function _eA_(param)
                     {if
                       (2===
                        caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
                       state[5]=state[5]-1|0;
                      set_cell(state,x,y,6);
                      function _eB_(param)
                       {function _eC_(param)
                         {set_cell(state,x,y,0);return return$0(0)}
                        return bind(fall(state),_eC_)}
                      return bind(sleep(0.05),_eB_)}
                    return bind(caml_call1(click_cont,0),_eA_)}
                  return click_cont$0},
               click_cont$1=click_cont$2(click_cont$0,y,x),
               click$0=
                function(click_cont,y,x)
                 {function click(param)
                   {var match=state[3],gy=match[2],gx=match[1];
                    set_cell(state,gx,gy,0);
                    function _ex_(param)
                     {return build_interaction(state,show_rem,clock)}
                    function _ey_(e)
                     {return e===Death?(state[6]=1,return$0(0)):fail(e)}
                    return bind
                            (catch$0
                              (function(param)
                                {function _ez_(param)
                                  {if
                                    (2===
                                     caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
                                    state[5]=state[5]-1|0;
                                   set_cell(state,x,y,6);
                                   state[3]=[0,x,y];
                                   return fall(state)}
                                 return bind(caml_call1(click_cont,0),_ez_)},
                               _ey_),
                             _ex_)}
                  return click},
               click=click$0(click_cont$0,y,x),
               jsoo_obj=
                caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1],
               _eg_=
                function(over_cont)
                  {return function(_ew_)
                    {return with_pending_out(over_cont,_ew_)}}
                 (over_cont$1),
               _eh_=
                function(out_cont,_eu_)
                  {return function(_ev_)
                    {return set_pending_out(_eu_,out_cont,_ev_)}}
                 (out_cont$1,_eg_),
               match=
                handler
                 (function(_es_)
                    {return function(_et_){return inhibit(_es_,_et_)}}
                   (_eh_));
              jsoo_obj.onmouseover=match;
              var
               jsoo_obj$0=
                caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1],
               _ei_=function(param){return return$0(0)},
               _ej_=
                function(_eq_)
                  {return function(_er_){return with_pending_out(_eq_,_er_)}}
                 (_ei_),
               match$0=
                handler
                 (function(_eo_)
                    {return function(_ep_){return inhibit(_eo_,_ep_)}}
                   (_ej_));
              jsoo_obj$0.onmouseout=match$0;
              var
               jsoo_obj$1=
                caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1],
               _ek_=
                function(click)
                  {return function(_en_){return with_pending_out(click,_en_)}}
                 (click),
               match$1=
                handler
                 (function(_el_)
                    {return function(_em_){return inhibit(_el_,_em_)}}
                   (_ek_));
              jsoo_obj$1.onclick=match$1;
              if
               (5===
                caml_check_bound(caml_check_bound(state[1],y)[y+1],x)[x+1])
               return 0;
              var
               param$2=caml_call1(next,[0,x,y]),
               param$0=param$2,
               over_cont$0=over_cont$1,
               out_cont$0=out_cont$1,
               click_cont$0=click_cont$1;
              continue}
            return 0}}
        function update_push(pos,next,img,img_guy)
         {var
           y=pos[2],
           x=pos[1],
           pos$0=caml_call1(next,pos),
           y$0=pos$0[2],
           x$0=pos$0[1],
           match=caml_call1(next,pos$0),
           y$1=match[2],
           x$1=match[1];
          try
           {var
             _d5_=
              3===
               caml_check_bound(caml_check_bound(state[1],y$0)[y$0+1],x$0)
                [x$0+1]
               ?1
               :0,
             _d6_=
              _d5_
               ?0===
                 caml_check_bound(caml_check_bound(state[1],y$1)[y$1+1],x$1)
                  [x$1+1]
                 ?1
                 :0
               :_d5_,
             _dZ_=_d6_}
          catch(_ee_)
           {_ee_=caml_wrap_exception(_ee_);
            if(_ee_[1]!==Invalid_argument)throw _ee_;
            var _dZ_=0}
          if(_dZ_)
           {var
             over=
              function(param)
               {caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1].src=
                img_guy;
                caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$0)
                 [x$0+1].src=
                img;
                return return$0(0)},
             out=
              function(param)
               {var match="sprites/guy.png";
                caml_check_bound(caml_check_bound(state[2],y)[y+1],x)[x+1].src=
                match;
                return caml_check_bound
                         (caml_check_bound(state[2],y$0)[y$0+1],x$0)
                        [x$0+1].src=
                       "sprites/boulder.png"},
             click=
              function(param)
               {set_cell(state,x,y,0);
                set_cell(state,x$0,y$0,6);
                state[3]=pos$0;
                set_cell(state,x$1,y$1,3);
                function _ec_(param)
                 {return build_interaction(state,show_rem,clock)}
                function _ed_(e)
                 {return e===Death?(state[6]=1,return$0(0)):fail(e)}
                return bind
                        (catch$0(function(param){return fall(state)},_ed_),_ec_)},
             jsoo_obj=
              caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$0)
               [x$0+1],
             _d0_=function(_eb_){return with_pending_out(over,_eb_)},
             _d1_=function(_ea_){return set_pending_out(_d0_,out,_ea_)},
             match$0=handler(function(_d$_){return inhibit(_d1_,_d$_)});
            jsoo_obj.onmouseover=match$0;
            var
             jsoo_obj$0=
              caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$0)
               [x$0+1],
             _d2_=function(param){return return$0(0)},
             _d3_=function(_d__){return with_pending_out(_d2_,_d__)},
             match$1=handler(function(_d9_){return inhibit(_d3_,_d9_)});
            jsoo_obj$0.onmouseout=match$1;
            var
             jsoo_obj$1=
              caml_check_bound(caml_check_bound(state[2],y$0)[y$0+1],x$0)
               [x$0+1],
             _d4_=function(_d8_){return with_pending_out(click,_d8_)};
            return jsoo_obj$1.onclick=
                   handler(function(_d7_){return inhibit(_d4_,_d7_)})}
          return 0}
        if(caml_equal(state[3],state[4]))
         {caml_call1(clock_stop,0);window.alert("YOU WIN !")}
        else
         if(state[6])
          {caml_call1(clock_stop,0);window.alert("YOU LOSE !")}
         else
          {if(0===state[5])
            {var
              match=state[4],
              y=match[2],
              x$0=match[1],
              match$0="sprites/end.png";
             caml_check_bound(caml_check_bound(state[2],y)[y+1],x$0)[x$0+1].src=
             match$0;
             caml_check_bound(caml_check_bound(state[1],y)[y+1],x$0)[x$0+1]=5}
           var
            r=function(param){var y=param[2],x=param[1];return [0,x+1|0,y]},
            l=function(param){var y=param[2],x=param[1];return [0,x-1|0,y]},
            u=function(param){var y=param[2],x=param[1];return [0,x,y-1|0]},
            d=function(param){var y=param[2],x=param[1];return [0,x,y+1|0]},
            nil_cont=function(param){return 0},
            nil_cont_async=function(param){return return$0(0)};
           update
            (r(state[3]),
             r,
             "sprites/R.png",
             nil_cont_async,
             nil_cont,
             nil_cont_async);
           update
            (l(state[3]),
             l,
             "sprites/L.png",
             nil_cont_async,
             nil_cont,
             nil_cont_async);
           update
            (u(state[3]),
             u,
             "sprites/U.png",
             nil_cont_async,
             nil_cont,
             nil_cont_async);
           update
            (d(state[3]),
             d,
             "sprites/D.png",
             nil_cont_async,
             nil_cont,
             nil_cont_async);
           update_push(state[3],r,"sprites/bR.png","sprites/push_r.png");
           update_push(state[3],l,"sprites/bL.png","sprites/push_l.png");
           caml_call1(show_rem,state[5])}
        var _dU_=state[7];
        if(_dU_[1])
         if(_ck_(_dU_[2]))
          _dU_[1]=0;
         else
          {var _dR_=_dU_[2],v=0;
           if(_ck_(_dR_))throw _ch_;
           var node=_dR_[2];
           _ci_(node);
           var state$0=[0,v],t=repr_rec(node[3]),_dQ_=t[1];
           switch(_dQ_[0])
            {case 1:var switch$0=_dQ_[1]===Canceled?1:0;break;
             case 2:
              var sleeper=_dQ_[1];
              t[1]=state$0;
              if(wakening[1])
               {var x=[0,sleeper,state$0];
                if(0===to_wakeup[1])
                 {var cell=[];
                  caml_update_dummy(cell,[0,x,cell]);
                  to_wakeup[1]=1;
                  to_wakeup[2]=cell;
                  var switch$0=1}
                else
                 {var tail=to_wakeup[2],head=tail[2],cell$0=[0,x,head];
                  to_wakeup[1]=to_wakeup[1]+1|0;
                  tail[2]=cell$0;
                  to_wakeup[2]=cell$0;
                  var switch$0=1}}
              else
               {safe_run_waiters(sleeper,state$0);var switch$0=1}
              break;
             default:var switch$0=0}
           if(!switch$0)invalid_arg(_co_)}
        return return$0(0)}
      var _dO_=state[7];
      if(_dO_[1])
       {var
         _dM_=_dO_[2],
         sleeper=[0,1,0,0,0],
         data=[0,[2,sleeper]],
         node=[0,_dM_[1],_dM_,data,1];
        _dM_[1][2]=node;
        _dM_[1]=node;
        sleeper[4]=[1,node];
        var _dP_=data}
      else
       {_dO_[1]=1;var _dP_=return_unit}
      return bind(_dP_,_dN_)}
    function opt_style(jsoo_obj,style)
     {if(style){var s=style[1];return jsoo_obj.style.cssText=s}return 0}
    function http_get(url)
     {var opt=[0,0];
      function _dH_(r)
       {var cod=r[2],msg=r[4];
        if(0!==cod)if(200!==cod){var t=[0,[2,[0,0,0,0,0]]];return t}
        return return$0(msg)}
      var
       content_type$0=0,
       sth=0,
       _dG_=[0,0],
       headers=opt?sth:0,
       match=task(0),
       w=match[2],
       res=match[1],
       jsoo_obj=_cX_(0);
      jsoo_obj.open("GET",url.toString(),jsoo_c11647d6);
      var match$1="";
      jsoo_obj.responseType=match$1;
      if(content_type$0)
       {var content_type=content_type$0[1];
        jsoo_obj.setRequestHeader("Content-type",content_type.toString())}
      _q_
       (function(param)
         {var v=param[2],n=param[1];
          return jsoo_obj.setRequestHeader(n.toString(),v.toString())},
        headers);
      function headers$0(s)
       {function _dK_(v){return [0,caml_js_to_string(v)]}
        function _dL_(param){return 0}
        return _cx_
                (jsoo_obj.getResponseHeader(caml_bytes_of_string(s)),
                 _dL_,
                 _dK_)}
      var st=[0,382334108];
      function do_check_headers(param)
       {if(382334108===st[1])
         if(1)
          st[1]=583419792;
         else
          {var e=[0,_c0_,[0,jsoo_obj.status,headers$0]];
           wakeup_result(w,[1,e]);
           st[1]=479410653;
           jsoo_obj.abort()}
        return 479410653!==st[1]?1:0}
      var
       match$0=
        caml_js_wrap_callback
         (function(param)
           {var match=jsoo_obj.readyState;
            switch(match)
             {case 2:if(!onIE){do_check_headers(0);return 0}break;
              case 3:if(onIE){do_check_headers(0);return 0}break;
              case 4:
               if(do_check_headers(0))
                {var
                  code=jsoo_obj.status,
                  _dI_=
                   function(param)
                    {var x=jsoo_obj.responseXML;
                     function _dJ_(x){return [0,x]}
                     var match=_cx_(x,function(param){return 0},_dJ_);
                     if(match)
                      {var doc=match[1];
                       return doc.documentElement===jsoo_560e4fa1?0:[0,doc]}
                     return 0},
                  response=
                   [0,
                    url,
                    code,
                    headers$0,
                    caml_js_to_string(jsoo_obj.responseText),
                    _dI_];
                 return wakeup(w,response)}
               return 0
              }
            return 0});
      jsoo_obj.onreadystatechange=match$0;
      var x=jsoo_obj.upload;
      x!==origin;
      jsoo_obj.send(jsoo_560e4fa1);
      on_cancel(res,function(param){return jsoo_obj.abort()});
      return bind(res,_dH_)}
    function getfile(f)
     {try
       {var _dE_=return$0(caml_fs_file_content(f));return _dE_}
      catch(_dF_)
       {_dF_=caml_wrap_exception(_dF_);
        if(_dF_===Not_found)return http_get(f);
        throw _dF_}}
    var
     Eos=caml_set_oo_id([248,_c5_,0]),
     match=
      handler
       (function(param)
         {var body=doc.getElementById("boulderdash");
          if(body==jsoo_560e4fa1)throw [0,Assert_failure,_c6_];
          var
           board_div=createDiv(doc),
           t0=[0,caml_sys_time(0)],
           div=createDiv(doc);
          div.style.cssText=box_style;
          append_text(div,_c2_);
          var stopped=[0,1];
          function update_cb(param)
           {var dt=caml_sys_time(0)-t0[1];
            if(!stopped[1])
             {var
               secs=dt|0,
               txt=
                doc.createTextNode
                 (caml_call3
                    (_bV_(_c3_),secs/3600|0,(secs/60|0)%60|0,secs%60|0).toString
                   ());
              replace_child(div,txt)}
            function _dD_(param){return update_cb(0)}
            return bind(sleep(1),_dD_)}
          update_cb(0);
          function _de_(param){stopped[1]=1;return 0}
          var
           clock=
            [0,
             div,
             function(param){t0[1]=caml_sys_time(0);stopped[1]=0;return 0},
             _de_],
           clock_start=clock[2],
           clock_div=clock[1];
          function load_data(name,process)
           {var div=createDiv(doc);
            div.style.cssText=loading_style;
            append_text(div,_c1_);
            _cA_(body,div);
            function _dB_(data)
             {function _dC_(res){_cB_(body,div);return return$0(res)}
              return bind(caml_call1(process,data),_dC_)}
            return bind(getfile(name),_dB_)}
          var rem_div=createDiv(doc);
          rem_div.style.cssText=box_style;
          append_text(rem_div,_c7_);
          function show_rem(v)
           {return replace_child
                    (rem_div,
                     doc.createTextNode(caml_new_string(""+v).toString()))}
          function _df_(levels)
           {var
             match=
              "font-family: sans-serif; text-align: center; background-color: #e8e8e8;";
            body.style.cssText=match;
            var h1=unsafeCreateElement(doc,_cF_);
            append_text(h1,_c__);
            _cA_(body,h1);
            var div=createDiv(doc);
            append_text(div,_c$_);
            _cA_(div,clock_div);
            append_text(div,_da_);
            _cA_(div,rem_div);
            append_text(div,_db_);
            var
             select=unsafeCreateElementEx(0,0,doc,_cD_),
             option=createOption(doc);
            append_text(option,_dc_);
            _cA_(select,option);
            _q_
             (function(param)
               {var n=param[2],option=createOption(doc);
                append_text(option,n);
                return _cA_(select,option)},
              levels);
            var
             match$0=
              handler
               (function(param$0)
                 {var n$1=select.selectedIndex-1|0;
                  if(0<=n$1)
                   {var len=0,param=levels;
                    for(;;)
                     {if(param)
                       {var l=param[2],len$0=len+1|0,len=len$0,param=l;continue}
                      if(n$1<len)
                       {if(0<=n$1)
                         {var l$0=levels,n=n$1;
                          for(;;)
                           {if(l$0)
                             {var l$1=l$0[2],a=l$0[1];
                              if(0!==n){var n$0=n-1|0,l$0=l$1,n=n$0;continue}
                              var _dj_=a}
                            else
                             var _dj_=failwith(_m_);
                            break}}
                        else
                         var _dj_=invalid_arg(_n_);
                        var _dk_=_dj_[1];
                        load_data
                         (_dk_,
                          function(data)
                           {var
                             res=[0,0],
                             row=[0,0],
                             _dt_=caml_ml_string_length(data)-1|0,
                             _ds_=0;
                            if(!(_dt_<0))
                             {var i=_ds_;
                              for(;;)
                               {var match$0=caml_string_get(data,i);
                                if(47<=match$0)
                                 if(83<=match$0)
                                  if(89<=match$0)
                                   var switch$0=0;
                                  else
                                   {var switcher=match$0-83|0;
                                    switch(switcher)
                                     {case 0:row[1]=[0,6,row[1]];var switch$1=1;break;
                                      case 4:row[1]=[0,6,row[1]];var switch$1=1;break;
                                      case 5:row[1]=[0,3,row[1]];var switch$1=1;break;
                                      default:var switch$0=0,switch$1=0}
                                    if(switch$1)var switch$0=1}
                                 else
                                  var switch$0=69===match$0?(row[1]=[0,4,row[1]],1):0;
                                else
                                 if(10===match$0)
                                  {var _dx_=res[1];
                                   res[1]=[0,_o_(row[1]),_dx_];
                                   row[1]=0;
                                   var switch$0=1}
                                 else
                                  if(32<=match$0)
                                   {var switcher$0=match$0-32|0;
                                    switch(switcher$0)
                                     {case 0:row[1]=[0,0,row[1]];var switch$2=1;break;
                                      case 3:row[1]=[0,7,row[1]];var switch$2=1;break;
                                      case 11:row[1]=[0,2,row[1]];var switch$2=1;break;
                                      case 14:row[1]=[0,1,row[1]];var switch$2=1;break;
                                      default:var switch$0=0,switch$2=0}
                                    if(switch$2)var switch$0=1}
                                  else
                                   var switch$0=0;
                                if(!switch$0)failwith(_c9_);
                                var _dw_=i+1|0;
                                if(_dt_!==i){var i=_dw_;continue}
                                break}}
                            var map=_k_(_p_(_k_,_o_(res[1])));
                            function _du_(c)
                             {var img=unsafeCreateElement(doc,_cH_),match=img_assoc(c);
                              img.src=match;
                              return img}
                            var
                             t=_j_(function(_dA_){return _j_(_du_,_dA_)},map),
                             gx=[0,0],
                             gy=[0,0],
                             ex=[0,0],
                             ey=[0,0],
                             rem=[0,0],
                             style=
                              "border-collapse:collapse;line-height: 0; opacity: 0; margin-left:auto; margin-right:auto",
                             td_style="padding: 0; width: 20px; height: 20px;",
                             td_style$0=[0,td_style],
                             style$0=[0,style],
                             table=unsafeCreateElement(doc,_cI_);
                            opt_style(table,style$0);
                            var _dn_=t.length-1-1|0,tr_style=0,_dm_=0;
                            if(!(_dn_<0))
                             {var y=_dm_;
                              for(;;)
                               {var tr=table.insertRow(-1);
                                opt_style(tr,tr_style);
                                var _dp_=caml_check_bound(t,y)[y+1].length-1-1|0,_do_=0;
                                if(!(_dp_<0))
                                 {var x=_do_;
                                  for(;;)
                                   {var td=tr.insertCell(-1);
                                    opt_style(td,td_style$0);
                                    var
                                     cell=caml_check_bound(caml_check_bound(t,y)[y+1],x)[x+1],
                                     match=caml_check_bound(caml_check_bound(map,y)[y+1],x)[x+1];
                                    switch(match)
                                     {case 2:rem[1]++;break;
                                      case 4:ex[1]=x;ey[1]=y;break;
                                      case 6:gx[1]=x;gy[1]=y;break
                                      }
                                    _cA_(td,cell);
                                    _cA_(tr,td);
                                    var _dr_=x+1|0;
                                    if(_dp_!==x){var x=_dr_;continue}
                                    break}}
                                _cA_(table,tr);
                                var _dq_=y+1|0;
                                if(_dn_!==y){var y=_dq_;continue}
                                break}}
                            replace_child(board_div,table);
                            function _dv_(param)
                             {var t0=caml_sys_time(0);
                              function fade(param)
                               {var t=caml_sys_time(0);
                                if(1<=t-t0)
                                 {var match="1";table.style.opacity=match;return return$0(0)}
                                function _dz_(param)
                                 {var
                                   jsoo_obj=table.style,
                                   match=caml_call1(_bV_(_c8_),t-t0).toString();
                                  jsoo_obj.opacity=match;
                                  return fade(0)}
                                return bind(sleep(0.05),_dz_)}
                              function _dy_(param)
                               {caml_call1(clock_start,0);return return$0(0)}
                              return bind(fade(0),_dy_)}
                            var _dl_=[0,0,_cj_(0)];
                            return bind
                                    (build_interaction
                                      ([0,
                                        map,
                                        t,
                                        [0,gx[1],gy[1]],
                                        [0,ex[1],ey[1]],
                                        rem[1],
                                        0,
                                        _dl_,
                                        0,
                                        [0,0]],
                                       show_rem,
                                       clock),
                                     _dv_)});
                        var switch$0=1}
                      else
                       var switch$0=0;
                      break}}
                  else
                   var switch$0=0;
                  return false$0});
            select.onchange=match$0;
            _cA_(div,select);
            _cA_(div,createBr(doc));
            _cA_(div,createBr(doc));
            _cA_(div,board_div);
            _cA_(body,div);
            return return$0(0)}
          bind
           (load_data
             (_dd_,
              function(txt)
               {function find_string(st)
                 {var sz=caml_ml_string_length(txt),s=st;
                  for(;;)
                   {if(sz<=s)throw Eos;
                    if(34===caml_string_get(txt,s))
                     {var e=s+2|0,s$0=s+1|0,e$0=e;
                      for(;;)
                       {if(sz<=s$0)throw Eos;
                        if(34===caml_string_get(txt,e$0))
                         return [0,_G_(txt,s$0,e$0-s$0|0),e$0+1|0];
                        var e$1=e$0+1|0,e$0=e$1;
                        continue}}
                    var s$1=s+1|0,s=s$1;
                    continue}}
                function scan_pairs(st,acc)
                 {var st$0=st,acc$0=acc;
                  for(;;)
                   {try
                     {var
                       match$0=find_string(st$0),
                       st$2=match$0[2],
                       fst=match$0[1],
                       match$1=find_string(st$2),
                       st$3=match$1[2],
                       snd=match$1[1],
                       _dh_=[0,[0,[0,fst,snd],st$3]],
                       _dg_=_dh_}
                    catch(_di_)
                     {_di_=caml_wrap_exception(_di_);
                      if(_di_!==Eos)throw _di_;
                      var _dg_=0}
                    if(_dg_)
                     {var
                       match=_dg_[1],
                       st$1=match[2],
                       elt=match[1],
                       acc$1=[0,elt,acc$0],
                       st$0=st$1,
                       acc$0=acc$1;
                      continue}
                    return acc$0}}
                return return$0(_o_(scan_pairs(0,0)))}),
            _df_);
          return false$0});
    window.onload=match;
    do_at_exit(0);
    return}
  (function(){return this}()));

//# sourceMappingURL=boulderdash.map