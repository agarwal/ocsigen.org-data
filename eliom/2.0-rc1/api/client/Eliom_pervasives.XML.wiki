=Module <<a_api_type subproject="client" | module Eliom_pervasives.XML >> =
<<div class="code"|<<span class="keyword"|module>> XML: <<span class='code'|sig>><<a_api subproject="client" text=".." | module Eliom_pervasives.XML >><<span class='code'|end>>>>~X~M~L building and deconstructing~.\\

----
<<div class="code" id="TYPEaname"|<<span class="keyword"|type>> aname = <<span class="code type"|string>> >>

<<div class="code" id="TYPEattrib"|<<span class="keyword"|type>> attrib>>

<<div class="code" id="TYPEcaml_event"|<<span class="keyword"|type>> caml~_event = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|CE_registered_closure>> <<span class="keyword"|of>> <<span class="code type"|(unit -> unit) <<a_api subproject="client" text="Eliom_pervasives.client_expr" | type Eliom_pervasives.client_expr >>>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|CE_client_closure>> <<span class="keyword"|of>> <<span class="code type"|(unit -> unit)>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|CE_call_service>> <<span class="keyword"|of>> <<span class="code type"|[ `A | `Form_get | `Form_post ] * (bool * string list) option>>|>>

<<div class="code" id="TYPEevent"|<<span class="keyword"|type>> event = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Raw>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Caml>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="client" text="caml_event" | type Eliom_pervasives.XML.caml_event >>>>|>>

<<div class="code" id="TYPEename"|<<span class="keyword"|type>> ename = <<span class="code type"|string>> >>

<<div class="code" id="TYPEelt"|<<span class="keyword"|type>> elt>>

<<div class="code" id="TYPEecontent"|<<span class="keyword"|type>> econtent = private 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Empty>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Comment>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|EncodedPCDATA>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|PCDATA>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Entity>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Leaf>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="client" text="ename" | type Eliom_pervasives.XML.ename >> * <<a_api subproject="client" text="attrib" | type Eliom_pervasives.XML.attrib >> list>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Node>> <<span class="keyword"|of>> <<span class="code type"|\\{{{   }}}<<a_api subproject="client" text="ename" | type Eliom_pervasives.XML.ename >> * <<a_api subproject="client" text="attrib" | type Eliom_pervasives.XML.attrib >> list\\{{{   }}}   * <<a_api subproject="client" text="elt" | type Eliom_pervasives.XML.elt >> list>>|>>

