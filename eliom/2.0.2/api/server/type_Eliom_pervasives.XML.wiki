<<code language="ocaml" | sig
  type uri
  val string_of_uri : uri -> string
  val uri_of_string : string -> uri
  type aname = string
  type event
  type attrib
  val float_attrib : aname -> float -> attrib
  val int_attrib : aname -> int -> attrib
  val string_attrib : aname -> string -> attrib
  val space_sep_attrib : aname -> string list -> attrib
  val comma_sep_attrib : aname -> string list -> attrib
  val event_attrib : aname -> event -> attrib
  val uri_attrib : aname -> uri -> attrib
  val uris_attrib : aname -> uri list -> attrib
  type elt
  type ename = string
  val empty : unit -> elt
  val comment : string -> elt
  val pcdata : string -> elt
  val encodedpcdata : string -> elt
  val entity : string -> elt
  val leaf : ?a:attrib list -> ename -> elt
  val node : ?a:attrib list -> ename -> elt list -> elt
  val cdata : string -> elt
  val cdata_script : string -> elt
  val cdata_style : string -> elt
  type separator = Space | Comma
  val aname : attrib -> aname
  type acontent = private
      AFloat of float
    | AInt of int
    | AStr of string
    | AStrL of separator * string list
  val acontent : attrib -> acontent
  type econtent = private
      Empty
    | Comment of string
    | EncodedPCDATA of string
    | PCDATA of string
    | Entity of string
    | Leaf of ename * attrib list
    | Node of ename * attrib list * elt list
  val content : elt -> econtent
  val make_unique : ?copy:elt -> elt -> elt
  val is_unique : elt -> bool
  val uri_of_fun : (unit -> string) -> uri
  type ref_tree
  val get_unique_id : elt -> string option
  val make_ref_tree : elt -> Eliom_pervasives.XML.ref_tree
  val make_ref_tree_list : elt list -> Eliom_pervasives.XML.ref_tree list
  type caml_event
  val event_of_string : string -> event
  val string_of_event : event -> string
  val event_of_js : int64 -> Eliom_pervasives.poly -> event
  val event_of_service :
    ([ `A | `Form_get | `Form_post ] * (bool * string list) option) option
    Eliom_lazy.request -> event
  type racontent =
      RA of acontent
    | RACamlEvent of Eliom_pervasives.XML.caml_event
    | RALazyStr of string Eliom_lazy.request
    | RALazyStrL of separator * string Eliom_lazy.request list
  val racontent : attrib -> Eliom_pervasives.XML.racontent
  val lazy_node :
    ?a:attrib list -> ename -> elt list Eliom_lazy.request -> elt
end >>