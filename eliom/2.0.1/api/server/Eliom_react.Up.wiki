=Module <<a_api_type subproject="server" | module Eliom_react.Up >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Up>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_react.Up >><<span class="ocsforge_color_keyword"|end>>>><<span class="odocwiki_inlinecode"|of~_react ~?scope ~?throttling ~?name e>> create an
      asynchronous edge originating from <<span class="odocwiki_inlinecode"|e>>~. ~The parameters are~: <<span class="odocwiki_inlinecode"|throttling>>
      for the limit to event propagation rate~, <<span class="odocwiki_inlinecode"|name>> for named edges~. <<span class="odocwiki_inlinecode"|scope>>
      tell which kind of channel this rely on ~(~See <<span class="odocwiki_inlinecode"|~Eliom~_comet~.create>>~)~.\\

----
<<pre class="ocsforge_color odocwiki_code" id="TYPEt"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|t>>>><<pre id="VALto_react" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|to~_react>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|'a <<a_api subproject="server" text="t" | type Eliom_react.Up.t >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_uid"|React>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|E>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~The type of events that~, while being "on the server"~, are triggered by
      clients~. ~On the server such an event is ~/primitive~/ ~(hence the <<span class="odocwiki_inlinecode"|create>>
      function~) whereas it is ~/effect~-full~/ on the client~.\\
>>
<<pre id="VALcreate" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|create>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?scope: >><<a_api subproject="server" text="Eliom_common.scope" | type Eliom_common.scope >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'a, [ `WithoutSuffix ],\\   [ `One of 'a <<a_api subproject="server" text="Eliom_parameters.caml" | type Eliom_parameters.caml >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >><<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_parameters.params_type" | type Eliom_parameters.params_type >> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api subproject="server" text="t" | type Eliom_react.Up.t >>>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|to~_react e>> injects the up events <<span class="odocwiki_inlinecode"|e>> into react events so that it can
      be manipulated as a standard event~.\\
>>
