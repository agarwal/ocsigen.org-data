=Module <<a_api_type subproject="server" | module Ow_completion >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Ow_completion>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Ow_completion >><<span class="ocsforge_color_keyword"|end>>>>~A completion widget to complete on string value~.

----
<<pre class="ocsforge_color odocwiki_code" id="TYPErefresh_fun'"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|refresh~_fun~'>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|int <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|li>> <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> list <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>> >><<pre class="ocsforge_color odocwiki_code" id="TYPEon_confirm_fun'"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|on~_confirm~_fun~'>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>> >>
~A completion widget to complete on string value~.

~A <<span class="odocwiki_inlinecode"|completion>> widget is <<span class="odocwiki_inlinecode"|dropdown>> widget~. ~The list of the
      possible values are displayed using a <<span class="odocwiki_inlinecode"|dropdown>>~.

~You can retrieve the value of the <<span class="odocwiki_inlinecode"|completion>> widget or even
        change it ~(you need to <<span class="odocwiki_inlinecode"|refresh>> explicitly the widget~)~.

~Clear the list of the possible values~. ~The content will be
        automatically refresh during the next action~.

~Explicitly confirm with the current value of the input~.

~Explicitly refresh the content of the widget ~(using the given
       function <<span class="odocwiki_inlinecode"|refresh>> on the construction of the widget~)~.

~Provides behaviours of a completion widget~.


      ~The main purpose of this widget is to complete on string value~.
      <<span class="odocwiki_inlinecode"|completion>> uses <<span class="odocwiki_inlinecode"|dropdown>> to display matched values~. ~Each item of the
      <<span class="odocwiki_inlinecode"|dropdown>> **~M~U~S~T ~H~A~V~E** an attribute **data~-value**~. ~The value of this
      attribute will be used during comparaison with the input value~.


      <<span class="odocwiki_inlinecode"|refresh limit pattern>> must return the list of the different values~.
      ~The <<span class="odocwiki_inlinecode"|pattern>> correspond to the current input value~, and <<span class="odocwiki_inlinecode"|limit>> is the
      number of items which will be displayed by the widgets~.


      ~If you don~'t want to do the comparaison with the value by yourself~, you
      can use <<span class="odocwiki_inlinecode"|auto~_match>> which will filter the list of elements returned by
      <<span class="odocwiki_inlinecode"|refresh>> function~. ~Element which doesn~'t match the input value~, will be
      ignored and won~'t be displayed with the <<span class="odocwiki_inlinecode"|dropdown>>~.


      <<span class="odocwiki_inlinecode"|accents>> indicates if the widget has to take care of accents in the
      **data~-value** attribute and input value~.  <<span class="odocwiki_inlinecode"|sensitive>> indicates the case
      has to be insensitive or not~.


      ~If you want to begin the completion from the start of input value~, you
      can set <<span class="odocwiki_inlinecode"|from~_start>> to <<span class="odocwiki_inlinecode"|true>>~. ~Otherwise~, it will try to match the value
      anywhere in the  string~.


      <<span class="odocwiki_inlinecode"|force~_refresh>> will automatically force the call to the <<span class="odocwiki_inlinecode"|refresh>>
      function on each actions of the widget~. ~If this option is enabled~, the
      rendering could blink~.


      <<span class="odocwiki_inlinecode"|clear~_input~_on~_confirm>> will clear the input when method <<span class="odocwiki_inlinecode"|confirm>> is
      called~.


      ~Because <<span class="odocwiki_inlinecode"|completion>> is a <<span class="odocwiki_inlinecode"|dropdown>>~, and a <<span class="odocwiki_inlinecode"|dropdown>> is composed by
      <<span class="odocwiki_inlinecode"|traversable>> widget~, you can navigate through matched values using
      arrow keys~. ~You can also iterate through them using tab key~, if the
      option <<span class="odocwiki_inlinecode"|move~_with~_tab>> is set to <<span class="odocwiki_inlinecode"|true>>


      ~If <<span class="odocwiki_inlinecode"|adaptive>> is enabled~, so the input value will be automatically set
      to the **data~-value** of current active matched element ~(when navigating
      using arrow keys~)~.


      ~The function <<span class="odocwiki_inlinecode"|on~_confirm>> is called each time the input value is
      confirmed ~(using <<span class="odocwiki_inlinecode"|confirm>> method or using enter key~)~.


      ~The widget need an **input** element as first parameter~. ~The second
      parameter is the container on which the matched values will be
      automatically inserted~, it must be a **ul** element~.
<<pre id="VALis_completed_by" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|is~_completed~_by>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_delimiter"| -> >> bool>>>><<pre id="VALli" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|li>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?a: >>[< <<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|li_attrib>> > `Class `User_data ]\\     <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|D>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|attrib>> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| value: >><<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|text>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| value_to_match: >><<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|text>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|flow5_without_interactive>> <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|D>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Raw>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>>\\  list <<span class="ocsforge_color_delimiter"| -> >> [> <<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|li>> ] <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|D>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>>>>>><<pre id="VALcompletion" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|completion>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| refresh: >><<a_api subproject="server" text="refresh_fun'" | type Ow_completion.refresh_fun' >> <<span class="ocsforge_color_uid"|Eliom_pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|client_value>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?limit: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?accents: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?sensitive: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?adaptive: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?auto_match: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?clear_input_on_confirm: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?move_with_tab: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?on_confirm: >><<a_api subproject="server" text="on_confirm_fun'" | type Ow_completion.on_confirm_fun' >>\\              <<span class="ocsforge_color_uid"|Eliom_pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|client_value>> <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|ul>> <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> * <<span class="ocsforge_color_uid"|Html5_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|ul>> <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html5>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>>>>>>