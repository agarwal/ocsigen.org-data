<<code language="ocaml" | sig
  type t = {
    mutable o_s : string;
    mutable o_max_len : int;
    mutable o_len : int;
    o_init_len : int;
    o_make_room : Deriving_bi_outbuf.t -> int -> unit;
  }
  val really_extend : Deriving_bi_outbuf.t -> int -> unit
  val flush_to_channel :
    Pervasives.out_channel -> Deriving_bi_outbuf.t -> int -> unit
  val create :
    ?make_room:(Deriving_bi_outbuf.t -> int -> unit) ->
    int -> Deriving_bi_outbuf.t
  val contents : Deriving_bi_outbuf.t -> string
  val create_channel_writer :
    ?len:int -> Pervasives.out_channel -> Deriving_bi_outbuf.t
  val flush_channel_writer : Deriving_bi_outbuf.t -> unit
  val extend : Deriving_bi_outbuf.t -> int -> unit
  val alloc : Deriving_bi_outbuf.t -> int -> int
  val add_string : Deriving_bi_outbuf.t -> string -> unit
  val add_substring : Deriving_bi_outbuf.t -> string -> int -> int -> unit
  val add_char : Deriving_bi_outbuf.t -> char -> unit
  val add_char2 : Deriving_bi_outbuf.t -> char -> char -> unit
  val add_char4 :
    Deriving_bi_outbuf.t -> char -> char -> char -> char -> unit
  val unsafe_add_char : Deriving_bi_outbuf.t -> char -> unit
  val clear : Deriving_bi_outbuf.t -> unit
  val reset : Deriving_bi_outbuf.t -> unit
end >>