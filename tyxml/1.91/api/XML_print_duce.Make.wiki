=Functor <<a_api_type | module XML_print_duce.Make >> =
<<div class="code"|<<span class="keyword"|module>> Make: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~I>><<span class='code'| ~: >><<span class='code'|sig>><<div class="sig_block"|<<div id="VALemptytags" class="code"|<<span class="keyword"|val>> emptytags : <<span class="code type"|string list>>>>>><<span class='code'|end>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XML_sigs_duce.Printer" | module XML_sigs_duce.Printer >>>><<span class="code type"|{{{  }}}>>>>>><<div class="module_param_list" | <<span class="param_title" |Parameters :>><<div|
|@@class="paramstable"@ @class="centertop fifteen code"@@{{{I}}}|@@class="centertop"@@:|<<span class="code type"|sig val emptytags : string list end>>|
>>>>

----
<<div id="VALprint_list" class="code"|<<span class="keyword"|val>> print~_list : <<span class="code type"|\\{{{   }}}output:(string -> unit) ->\\{{{   }}}  ?encode:(string -> string) -> Ocamlduce.Load.anyxml list -> unit>>>>