=Module type <<a_api_type subproject="server" | module type Eliom_output_base.HTML5FORMSSIG >> =
<<div class="code"|<<span class="keyword"|module type>> HTML5FORMSSIG = <<span class='code'|sig>><<a_api subproject="server" text=".." | module type Eliom_output_base.HTML5FORMSSIG >><<span class='code'|end>>>>
----
\\

==@@id="2_Linksandforms"@@~Links and forms==
\\
<<div id="VALmake_string_uri" class="code"|<<span class="keyword"|val>> make~_string~_uri : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  service:('a, unit, [< <<a_api subproject="server" text="Eliom_services.get_service_kind" | type Eliom_services.get_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'b, unit, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'c)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> -> 'a -> string>>>><<div class="info"|~Creates the string corresponding to the relative ~U~R~L of a service applied to
    its ~G~E~T parameters~.\\


    ~If <<span class='code'|absolute>> is set to <<span class='code'|true>>~, or if there is a protocol change~,
    the ~U~R~L will be absolute~.\\


    ~If <<span class='code'|absolute~_path>> is set to <<span class='code'|true>>~, and <<span class='code'|absolute>> is <<span class='code'|false>>~,
    the ~U~R~L will be absolute~, but without <<span class='code'|protocol~:~/~/server~:port>>~.\\


    ~Default hostname is determined from the <<span class='code'|~Host>> http header of the request
    ~(or the attribute of ~<host~> tag in
    configuration file if the option <<span class='code'|~<usedefaulthostname~/~>>> is set~)~.
    ~Default port is the current port ~(or another port of the server if
    you are switching from or to https~)~.
    ~But you can choose the hostname or port you want by setting
    the optional <<span class='code'|~?hostname>> and <<span class='code'|~?port>> parameters here~.\\
>>
<<div id="VALmake_uri" class="code"|<<span class="keyword"|val>> make~_uri : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  service:('a, unit, [< <<a_api subproject="server" text="Eliom_services.get_service_kind" | type Eliom_services.get_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'b, unit, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'c)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> -> 'a -> HTML5_types.uri>>>><<div class="info"|~Creates the ~U~R~L for a service~.
    ~Like the <<span class='code'|a>> function~, it may take extra parameters~.\\
>>
<<div id="VALmake_uri_components" class="code"|<<span class="keyword"|val>> make~_uri~_components : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  service:('a, unit, [< <<a_api subproject="server" text="Eliom_services.get_service_kind" | type Eliom_services.get_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'b, unit, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'c)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  'a -> string * (string * string) list * string option>>>><<div class="info"|~Creates the ~U~R~L for a service~.
    ~Returns the path ~(as a string~, encoded~)~,
    the association list of get parameters ~(not encoded~)~,
    and the fragment ~(not encoded~, if any~)~.
    ~Like the <<span class='code'|a>> function~, it may take extra parameters~.\\
>>
<<div id="VALmake_post_uri_components" class="code"|<<span class="keyword"|val>> make~_post~_uri~_components : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  service:('a, 'b, [< <<a_api subproject="server" text="Eliom_services.post_service_kind" | type Eliom_services.post_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'c, 'd, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'e)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  ?keep_get_na_params:bool ->\\{{{   }}}  'a ->\\{{{   }}}  'b ->\\{{{   }}}  string * (string * string) list * string option * (string * string) list>>>><<div class="info"|~Like <<span class='code'|make~_uri~_components>>~, but also creates a table of post parameters~.\\
>>
<<div id="VALa" class="code"|<<span class="keyword"|val>> a : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?a:HTML5_types.a_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  service:('a, unit, [< <<a_api subproject="server" text="Eliom_services.get_service_kind" | type Eliom_services.get_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'b, 'c, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'd)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  ?no_appl:bool ->\\{{{   }}}  'e Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  'a -> [> 'e HTML5_types.a ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|<<span class='code'|a service cont ~(~)>> creates a link to <<span class='code'|service>>~.
   ~The text of
   the link is <<span class='code'|cont>>~. ~For example <<span class='code'|cont>> may be something like
   <<span class='code'|~[pcdata "click here"~]>>~.\\


   ~The last  parameter is for ~G~E~T parameters~.
   ~For example <<span class='code'|a service cont ~(~4~2~,"hello"~)>>\\


   ~The <<span class='code'|~~a>> optional parameter is used for extra attributes~.\\


   ~The <<span class='code'|~~fragment>> optional parameter is used for the "fragment" part
   of the ~U~R~L~, that is~, the part after character "~#"~.\\


    ~When possible~, all links generated by ~Eliom are relative~, for example
    to make easier the use with reverse proxies~.
    ~But in case of protocol change ~(if you want to switch to https using
    <<span class='code'|~~https~:true>> for example~, or if the service imposes https~)~,
    absolute links will be generated~.
    ~In that case~,
    default hostname is determined from the <<span class='code'|~Host>> http header of the request
    ~(or the attribute of ~<host~> tag in
    configuration file if the option <<span class='code'|~<usedefaulthostname~/~>>> is set~)~.
    ~Default port is the current port ~(or another port of the server if
    you are switching from or to https~)~.
    ~But you can choose the hostname or port you want by setting
    the optional <<span class='code'|~?hostname>> and <<span class='code'|~?port>> parameters here~.
    ~These options have no effect for relative links~.\\


    ~You can add non~-localized parameters using the optional parameter
    <<span class='code'|nl~_params>>~. ~See <<a_api subproject="server" | type Eliom_parameters.nl_params_set >>~.\\


    ~If <<span class='code'|~~keep~_nl~_params>> is <<span class='code'|`~Persistent>> ~(resp~. <<span class='code'|`~All>>~)~,
    persistent ~(resp all~) non localized ~G~E~T parameters
    will be kept in the ~U~R~L ~(default is the default for the service~)~.\\


    ~If a client side application is running~, and unless
    <<span class='code'|~~no~_appl~:true>> is specified~, it will use <<span class='code'|~<a onclick~=~.~.~.~>>>
    instead of <<span class='code'|~<a href~=~.~.~.~>>> in case of link inside a same ~Eliom application~.
    ~Thus~, the client side application will not be stopped when the link
    is clicked~.\\
>>
<<div id="VALcss_link" class="code"|<<span class="keyword"|val>> css~_link : <<span class="code type"|\\{{{   }}}?a:HTML5_types.link_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  uri:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.link ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<link~>>> tag for a ~Cascading ~Style~Sheet ~(~C~S~S~)~.\\
>>
<<div id="VALjs_script" class="code"|<<span class="keyword"|val>> js~_script : <<span class="code type"|\\{{{   }}}?a:HTML5_types.script_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  uri:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.script ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<script~>>> tag to add a javascript file\\
>>
<<div id="VALget_form" class="code"|<<span class="keyword"|val>> get~_form : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?a:HTML5_types.form_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  service:('a, unit, [< <<a_api subproject="server" text="Eliom_services.get_service_kind" | type Eliom_services.get_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'b, 'c, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'd)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  ?no_appl:bool ->\\{{{   }}}  ('b -> HTML5_types.form_content Eliom_pervasives.HTML5.M.elt list) ->\\{{{   }}}  [> HTML5_types.form ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|<<span class='code'|get~_form service formgen>> creates a ~G~E~T form to <<span class='code'|service>>~.
   ~The content of
   the form is generated by the function <<span class='code'|formgen>>~, that takes the names
   of the service parameters as parameters~.\\
>>
<<div id="VALlwt_get_form" class="code"|<<span class="keyword"|val>> lwt~_get~_form : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?a:HTML5_types.form_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  service:('a, unit, [< <<a_api subproject="server" text="Eliom_services.get_service_kind" | type Eliom_services.get_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'b, 'c, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'd)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  ?no_appl:bool ->\\{{{   }}}  ('b -> HTML5_types.form_content Eliom_pervasives.HTML5.M.elt list Lwt.t) ->\\{{{   }}}  [> HTML5_types.form ] Eliom_pervasives.HTML5.M.elt Lwt.t>>>><<div class="info"|~The same but taking a cooperative function~.\\
>>
<<div id="VALpost_form" class="code"|<<span class="keyword"|val>> post~_form : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?a:HTML5_types.form_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  service:('a, 'b, [< <<a_api subproject="server" text="Eliom_services.post_service_kind" | type Eliom_services.post_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'c, 'd, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'e)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?keep_get_na_params:bool ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  ?no_appl:bool ->\\{{{   }}}  ('d -> HTML5_types.form_content Eliom_pervasives.HTML5.M.elt list) ->\\{{{   }}}  'a -> [> HTML5_types.form ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|<<span class='code'|post~_form service formgen>> creates a ~P~O~S~T form to <<span class='code'|service>>~.
    ~The last parameter is for ~G~E~T parameters ~(as in the function <<span class='code'|a>>~)~.\\


    ~If <<span class='code'|~~keep~_nl~_params>> is <<span class='code'|`~Persistent>> ~(resp~. <<span class='code'|`~All>>~)~,
    persistent ~(resp all~) non localized ~G~E~T parameters
    will be kept in the ~U~R~L ~(default is the default for the service~)~.\\
>>
<<div id="VALlwt_post_form" class="code"|<<span class="keyword"|val>> lwt~_post~_form : <<span class="code type"|\\{{{   }}}?absolute:bool ->\\{{{   }}}  ?absolute_path:bool ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?a:HTML5_types.form_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  service:('a, 'b, [< <<a_api subproject="server" text="Eliom_services.post_service_kind" | type Eliom_services.post_service_kind >> ],\\{{{   }}}           [< <<a_api subproject="server" text="Eliom_services.suff" | type Eliom_services.suff >> ], 'c, 'd, [< <<a_api subproject="server" text="Eliom_services.registrable" | type Eliom_services.registrable >> ],\\{{{   }}}           'e)\\{{{   }}}          <<a_api subproject="server" text="Eliom_services.service" | type Eliom_services.service >> ->\\{{{   }}}  ?hostname:string ->\\{{{   }}}  ?port:int ->\\{{{   }}}  ?fragment:string ->\\{{{   }}}  ?keep_nl_params:[ `All | `None | `Persistent ] ->\\{{{   }}}  ?keep_get_na_params:bool ->\\{{{   }}}  ?nl_params:<<a_api subproject="server" text="Eliom_parameters.nl_params_set" | type Eliom_parameters.nl_params_set >> ->\\{{{   }}}  ?no_appl:bool ->\\{{{   }}}  ('d -> HTML5_types.form_content Eliom_pervasives.HTML5.M.elt list Lwt.t) ->\\{{{   }}}  'a -> [> HTML5_types.form ] Eliom_pervasives.HTML5.M.elt Lwt.t>>>><<div class="info"|~The same but taking a cooperative function~.\\
>>
\\

==@@id="2_Formwidgets"@@~Form widgets==
\\
<<div class="code" id="TYPEbasic_input_type"|<<span class="keyword"|type>> basic~_input~_type = <<span class="code type"|[ `Hidden | `Password | `Submit | `Text ]>> >>

<<div id="VALint_input" class="code"|<<span class="keyword"|val>> int~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< <<a_api subproject="server" text="basic_input_type" | type Eliom_output_base.HTML5FORMSSIG.basic_input_type >> ] ->\\{{{   }}}  ?name:[< int <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:int -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for an integer\\
>>
<<div id="VALint32_input" class="code"|<<span class="keyword"|val>> int~3~2~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< <<a_api subproject="server" text="basic_input_type" | type Eliom_output_base.HTML5FORMSSIG.basic_input_type >> ] ->\\{{{   }}}  ?name:[< int32 <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:int32 -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for a ~3~2 bits integer\\
>>
<<div id="VALint64_input" class="code"|<<span class="keyword"|val>> int~6~4~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< <<a_api subproject="server" text="basic_input_type" | type Eliom_output_base.HTML5FORMSSIG.basic_input_type >> ] ->\\{{{   }}}  ?name:[< int64 <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:int64 -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for a ~6~4 bits integer\\
>>
<<div id="VALfloat_input" class="code"|<<span class="keyword"|val>> float~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< <<a_api subproject="server" text="basic_input_type" | type Eliom_output_base.HTML5FORMSSIG.basic_input_type >> ] ->\\{{{   }}}  ?name:[< float <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:float -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for a float\\
>>
<<div id="VALstring_input" class="code"|<<span class="keyword"|val>> string~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< <<a_api subproject="server" text="basic_input_type" | type Eliom_output_base.HTML5FORMSSIG.basic_input_type >> ] ->\\{{{   }}}  ?name:[< string <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:string -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for a string\\
>>
<<div id="VALuser_type_input" class="code"|<<span class="keyword"|val>> user~_type~_input : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< <<a_api subproject="server" text="basic_input_type" | type Eliom_output_base.HTML5FORMSSIG.basic_input_type >> ] ->\\{{{   }}}  ?name:[< 'a <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:'a -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for a user type\\
>>
<<div id="VALraw_input" class="code"|<<span class="keyword"|val>> raw~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  input_type:[< `Button | `Hidden | `Password | `Reset | `Submit | `Text ] ->\\{{{   }}}  ?name:string ->\\{{{   }}}  ?value:string -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an untyped <<span class='code'|~<input~>>> tag~. ~You may use the name you want
   ~(for example to use with <<a_api subproject="server" | val Eliom_parameters.any >>~)~.\\
>>
<<div id="VALfile_input" class="code"|<<span class="keyword"|val>> file~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< Ocsigen_extensions.file_info <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input~>>> tag for sending a file\\
>>
<<div id="VALimage_input" class="code"|<<span class="keyword"|val>> image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >> <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~."~>>> tag that sends the coordinates
   the user clicked on\\
>>
<<div id="VALint_image_input" class="code"|<<span class="keyword"|val>> int~_image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< (int * <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >>) <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
   the coordinates the user clicked on and a value of type int\\
>>
<<div id="VALint32_image_input" class="code"|<<span class="keyword"|val>> int~3~2~_image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< (int32 * <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >>) <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int32 ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
   the coordinates the user clicked on and a value of type int~3~2\\
>>
<<div id="VALint64_image_input" class="code"|<<span class="keyword"|val>> int~6~4~_image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< (int64 * <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >>) <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int64 ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
   the coordinates the user clicked on and a value of type int~6~4\\
>>
<<div id="VALfloat_image_input" class="code"|<<span class="keyword"|val>> float~_image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< (float * <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >>) <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:float ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
    the coordinates the user clicked on and a value of type float\\
>>
<<div id="VALstring_image_input" class="code"|<<span class="keyword"|val>> string~_image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< (string * <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >>) <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:string ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
   the coordinates the user clicked on and a value of type string\\
>>
<<div id="VALuser_type_image_input" class="code"|<<span class="keyword"|val>> user~_type~_image~_input : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< ('a * <<a_api subproject="server" text="Eliom_parameters.coordinates" | type Eliom_parameters.coordinates >>) <<a_api subproject="server" text="Eliom_parameters.oneradio" | type Eliom_parameters.oneradio >> ]\\{{{   }}}       <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:'a ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
   the coordinates the user clicked on and a value of user defined type\\
>>
<<div id="VALraw_image_input" class="code"|<<span class="keyword"|val>> raw~_image~_input : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:string ->\\{{{   }}}  value:string ->\\{{{   }}}  ?src:HTML5_types.uri ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates an <<span class='code'|~<input type~="image" name~="~.~.~." value~="~.~.~."~>>> tag that sends
   the coordinates the user clicked on and an untyped value\\
>>
<<div id="VALbool_checkbox" class="code"|<<span class="keyword"|val>> bool~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `One of bool ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have a boolean value~.
   ~The service must declare a <<span class='code'|bool>> parameter~.\\
>>
<<div id="VALint_checkbox" class="code"|<<span class="keyword"|val>> int~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Set of int ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have an int value~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|set>>~.\\
>>
<<div id="VALint32_checkbox" class="code"|<<span class="keyword"|val>> int~3~2~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Set of int32 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int32 -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have an int~3~2 value~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|set>>~.\\
>>
<<div id="VALint64_checkbox" class="code"|<<span class="keyword"|val>> int~6~4~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Set of int64 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int64 -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have an int~6~4 value~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|set>>~.\\
>>
<<div id="VALfloat_checkbox" class="code"|<<span class="keyword"|val>> float~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Set of float ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:float -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have a float value~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|set>>~.\\
>>
<<div id="VALstring_checkbox" class="code"|<<span class="keyword"|val>> string~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Set of string ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:string -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have a string value~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|set>>~.\\
>>
<<div id="VALuser_type_checkbox" class="code"|<<span class="keyword"|val>> user~_type~_checkbox : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Set of 'a ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:'a -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag that will have a "user type" value~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|set>>~.\\
>>
<<div id="VALraw_checkbox" class="code"|<<span class="keyword"|val>> raw~_checkbox : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:string ->\\{{{   }}}  value:string -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a checkbox <<span class='code'|~<input~>>> tag with untyped content~.
   ~Thus you can do several checkboxes with the same name
   ~(and different values~)~.
   ~The service must declare a parameter of type <<span class='code'|any>>~.\\
>>
<<div id="VALstring_radio" class="code"|<<span class="keyword"|val>> string~_radio : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Radio of string ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:string -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with string content\\
>>
<<div id="VALint_radio" class="code"|<<span class="keyword"|val>> int~_radio : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Radio of int ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with int content\\
>>
<<div id="VALint32_radio" class="code"|<<span class="keyword"|val>> int~3~2~_radio : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Radio of int32 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int32 -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with int~3~2 content\\
>>
<<div id="VALint64_radio" class="code"|<<span class="keyword"|val>> int~6~4~_radio : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Radio of int64 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int64 -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with int~6~4 content\\
>>
<<div id="VALfloat_radio" class="code"|<<span class="keyword"|val>> float~_radio : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Radio of float ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:float -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with float content\\
>>
<<div id="VALuser_type_radio" class="code"|<<span class="keyword"|val>> user~_type~_radio : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:[ `Radio of 'a ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:'a -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with user~_type content\\
>>
<<div id="VALraw_radio" class="code"|<<span class="keyword"|val>> raw~_radio : <<span class="code type"|\\{{{   }}}?a:HTML5_types.input_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  ?checked:bool ->\\{{{   }}}  name:string ->\\{{{   }}}  value:string -> unit -> [> HTML5_types.input ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a radio <<span class='code'|~<input~>>> tag with untyped string content ~(low level~)\\
>>
<<div class="code" id="TYPEbutton_type"|<<span class="keyword"|type>> button~_type = <<span class="code type"|[ `Button | `Reset | `Submit ]>> >>

<<div id="VALstring_button" class="code"|<<span class="keyword"|val>> string~_button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< string <<a_api subproject="server" text="Eliom_parameters.setone" | type Eliom_parameters.setone >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:string ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with string content\\
>>
<<div id="VALint_button" class="code"|<<span class="keyword"|val>> int~_button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< int <<a_api subproject="server" text="Eliom_parameters.setone" | type Eliom_parameters.setone >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with int content\\
>>
<<div id="VALint32_button" class="code"|<<span class="keyword"|val>> int~3~2~_button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< int32 <<a_api subproject="server" text="Eliom_parameters.setone" | type Eliom_parameters.setone >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int32 ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with int~3~2 content\\
>>
<<div id="VALint64_button" class="code"|<<span class="keyword"|val>> int~6~4~_button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< int64 <<a_api subproject="server" text="Eliom_parameters.setone" | type Eliom_parameters.setone >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:int64 ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with int~6~4 content\\
>>
<<div id="VALfloat_button" class="code"|<<span class="keyword"|val>> float~_button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< float <<a_api subproject="server" text="Eliom_parameters.setone" | type Eliom_parameters.setone >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:float ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with float content\\
>>
<<div id="VALuser_type_button" class="code"|<<span class="keyword"|val>> user~_type~_button : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< 'a <<a_api subproject="server" text="Eliom_parameters.setone" | type Eliom_parameters.setone >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  value:'a ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with user~_type content\\
>>
<<div id="VALraw_button" class="code"|<<span class="keyword"|val>> raw~_button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  button_type:[< <<a_api subproject="server" text="button_type" | type Eliom_output_base.HTML5FORMSSIG.button_type >> ] ->\\{{{   }}}  name:string ->\\{{{   }}}  value:string ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with untyped string content\\
>>
<<div id="VALbutton" class="code"|<<span class="keyword"|val>> button : <<span class="code type"|\\{{{   }}}?a:HTML5_types.button_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  button_type:[< <<a_api subproject="server" text="button_type" | type Eliom_output_base.HTML5FORMSSIG.button_type >> ] ->\\{{{   }}}  HTML5_types.button_content Eliom_pervasives.HTML5.M.elt list ->\\{{{   }}}  [> HTML5_types.button ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<button~>>> tag with no value~. ~No value is sent~.\\
>>
<<div id="VALtextarea" class="code"|<<span class="keyword"|val>> textarea : <<span class="code type"|\\{{{   }}}?a:HTML5_types.textarea_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< string <<a_api subproject="server" text="Eliom_parameters.setoneradio" | type Eliom_parameters.setoneradio >> ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  ?value:string ->\\{{{   }}}  rows:int ->\\{{{   }}}  cols:int -> unit -> [> HTML5_types.textarea ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<textarea~>>> tag\\
>>
<<div id="VALraw_textarea" class="code"|<<span class="keyword"|val>> raw~_textarea : <<span class="code type"|\\{{{   }}}?a:HTML5_types.textarea_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:string ->\\{{{   }}}  ?value:string ->\\{{{   }}}  rows:int ->\\{{{   }}}  cols:int -> unit -> [> HTML5_types.textarea ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<textarea~>>> tag for untyped form\\
>>
<<div class="code" id="TYPEsoption"|<<span class="keyword"|type>> <<span class="code type"|'a>> soption = <<span class="code type"|\\{{{   }}}HTML5_types.option_attrib Eliom_pervasives.HTML5.M.attrib list * 'a *\\{{{   }}}  HTML5_types.pcdata Eliom_pervasives.HTML5.M.elt option * bool>> >>

<<div class="code" id="TYPEselect_opt"|<<span class="keyword"|type>> <<span class="code type"|'a>> select~_opt = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Optgroup>> <<span class="keyword"|of>> <<span class="code type"|\\{{{   }}}[ `Accesskey\\{{{   }}}| `Class\\{{{   }}}| `Contenteditable\\{{{   }}}| `Contextmenu\\{{{   }}}| `Dir\\{{{   }}}| `Disabled\\{{{   }}}| `Draggable\\{{{   }}}| `Hidden\\{{{   }}}| `Id\\{{{   }}}| `OnAbort\\{{{   }}}| `OnBlur\\{{{   }}}| `OnCanPlay\\{{{   }}}| `OnCanPlayThrough\\{{{   }}}| `OnChange\\{{{   }}}| `OnClick\\{{{   }}}| `OnContextMenu\\{{{   }}}| `OnDblClick\\{{{   }}}| `OnDrag\\{{{   }}}| `OnDragEnd\\{{{   }}}| `OnDragEnter\\{{{   }}}| `OnDragLeave\\{{{   }}}| `OnDragOver\\{{{   }}}| `OnDragStart\\{{{   }}}| `OnDrop\\{{{   }}}| `OnDurationChange\\{{{   }}}| `OnEmptied\\{{{   }}}| `OnEnded\\{{{   }}}| `OnError\\{{{   }}}| `OnFocus\\{{{   }}}| `OnFormChange\\{{{   }}}| `OnFormInput\\{{{   }}}| `OnInput\\{{{   }}}| `OnInvalid\\{{{   }}}| `OnKeyDown\\{{{   }}}| `OnKeyPress\\{{{   }}}| `OnKeyUp\\{{{   }}}| `OnLoad\\{{{   }}}| `OnLoadStart\\{{{   }}}| `OnLoadedData\\{{{   }}}| `OnLoadedMetaData\\{{{   }}}| `OnMouseDown\\{{{   }}}| `OnMouseMove\\{{{   }}}| `OnMouseOut\\{{{   }}}| `OnMouseOver\\{{{   }}}| `OnMouseUp\\{{{   }}}| `OnMouseWheel\\{{{   }}}| `OnPause\\{{{   }}}| `OnPlay\\{{{   }}}| `OnPlaying\\{{{   }}}| `OnProgress\\{{{   }}}| `OnRateChange\\{{{   }}}| `OnReadyStateChange\\{{{   }}}| `OnScroll\\{{{   }}}| `OnSeeked\\{{{   }}}| `OnSeeking\\{{{   }}}| `OnSelect\\{{{   }}}| `OnShow\\{{{   }}}| `OnStalled\\{{{   }}}| `OnSubmit\\{{{   }}}| `OnSuspend\\{{{   }}}| `OnTimeUpdate\\{{{   }}}| `OnVolumeChange\\{{{   }}}| `OnWaiting\\{{{   }}}| `Spellcheck\\{{{   }}}| `Style_Attr\\{{{   }}}| `Tabindex\\{{{   }}}| `Title\\{{{   }}}| `User_data\\{{{   }}}| `XML_lang ] Eliom_pervasives.HTML5.M.attrib list * string\\{{{   }}}   * 'a <<a_api subproject="server" text="soption" | type Eliom_output_base.HTML5FORMSSIG.soption >>\\{{{   }}}   * 'a <<a_api subproject="server" text="soption" | type Eliom_output_base.HTML5FORMSSIG.soption >> list>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Option>> <<span class="keyword"|of>> <<span class="code type"|'a <<a_api subproject="server" text="soption" | type Eliom_output_base.HTML5FORMSSIG.soption >>>>|>>

\\
~The type for <<span class='code'|~<select~>>> options and groups of options~.* ~The field of type ~'a in <<span class='code'|soption>> is the value that will be sent
     by the form~.
* ~If the <<span class='code'|pcdata elt option>> is not present it is also the
     value displayed~.
* ~The string in <<span class='code'|select~_opt>> is the label

\\
<<div id="VALint_select" class="code"|<<span class="keyword"|val>> int~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `One of int ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  int <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  int <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for int values~.\\
>>
<<div id="VALint32_select" class="code"|<<span class="keyword"|val>> int~3~2~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `One of int32 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  int32 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  int32 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for int~3~2 values~.\\
>>
<<div id="VALint64_select" class="code"|<<span class="keyword"|val>> int~6~4~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `One of int64 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  int64 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  int64 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for int~6~4 values~.\\
>>
<<div id="VALfloat_select" class="code"|<<span class="keyword"|val>> float~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `One of float ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  float <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  float <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for float values~.\\
>>
<<div id="VALstring_select" class="code"|<<span class="keyword"|val>> string~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `One of string ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for string values~.\\
>>
<<div id="VALuser_type_select" class="code"|<<span class="keyword"|val>> user~_type~_select : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `One of 'a ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  'a <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  'a <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for user type values~.\\
>>
<<div id="VALraw_select" class="code"|<<span class="keyword"|val>> raw~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:string ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for any ~(untyped~) value~.\\
>>
<<div id="VALint_multiple_select" class="code"|<<span class="keyword"|val>> int~_multiple~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `Set of int ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  int <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  int <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for int values~.\\
>>
<<div id="VALint32_multiple_select" class="code"|<<span class="keyword"|val>> int~3~2~_multiple~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `Set of int32 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  int32 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  int32 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for int~3~2 values~.\\
>>
<<div id="VALint64_multiple_select" class="code"|<<span class="keyword"|val>> int~6~4~_multiple~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `Set of int64 ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  int64 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  int64 <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for int~6~4 values~.\\
>>
<<div id="VALfloat_multiple_select" class="code"|<<span class="keyword"|val>> float~_multiple~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `Set of float ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  float <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  float <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for float values~.\\
>>
<<div id="VALstring_multiple_select" class="code"|<<span class="keyword"|val>> string~_multiple~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `Set of string ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for string values~.\\
>>
<<div id="VALuser_type_multiple_select" class="code"|<<span class="keyword"|val>> user~_type~_multiple~_select : <<span class="code type"|\\{{{   }}}('a -> string) ->\\{{{   }}}  ?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:[< `Set of 'a ] <<a_api subproject="server" text="Eliom_parameters.param_name" | type Eliom_parameters.param_name >> ->\\{{{   }}}  'a <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  'a <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for user type values~.\\
>>
<<div id="VALraw_multiple_select" class="code"|<<span class="keyword"|val>> raw~_multiple~_select : <<span class="code type"|\\{{{   }}}?a:HTML5_types.select_attrib Eliom_pervasives.HTML5.M.attrib list ->\\{{{   }}}  name:string ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> ->\\{{{   }}}  string <<a_api subproject="server" text="select_opt" | type Eliom_output_base.HTML5FORMSSIG.select_opt >> list ->\\{{{   }}}  [> HTML5_types.select ] Eliom_pervasives.HTML5.M.elt>>>><<div class="info"|~Creates a <<span class='code'|~<select~>>> tag for any ~(untyped~) value~.\\
>>
