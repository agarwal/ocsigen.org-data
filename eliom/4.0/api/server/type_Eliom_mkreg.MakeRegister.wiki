<<code language="ocaml" | functor (Pages : REG_PARAM) ->
  sig
    type page = Pages.page
    type options = Pages.options
    type return = Pages.return
    type result = Pages.result
    val register :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      service:('get, 'post, [< Eliom_service.internal_service_kind ],
               [< Eliom_service.suff ], 'gn, 'pn, [ `Registrable ], 'returnT)
              Eliom_service.service ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> 'post -> Pages.page Lwt.t) -> unit
    val register_service :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?https:bool ->
      ?priority:int ->
      path:Eliom_lib.Url.path ->
      get_params:('get, [< Eliom_service.suff ] as 'a, 'gn)
                 Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> unit -> Pages.page Lwt.t) ->
      ('get, unit,
       [> `Attached of
            ([> `Internal of [> `Service ] ], [> `Get ]) Eliom_service.a_s ],
       'a, 'gn, unit, [< Eliom_service.registrable > `Registrable ],
       'returnB)
      Eliom_service.service
    val register_coservice :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      fallback:(unit, unit,
                [ `Attached of
                    ([ `Internal of [ `Service ] ], [ `Get ])
                    Eliom_service.a_s ],
                [ `WithoutSuffix ], unit, unit,
                [< Eliom_service.registrable ], 'returnT)
               Eliom_service.service ->
      get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> unit -> Pages.page Lwt.t) ->
      ('get, unit,
       [> `Attached of
            ([> `Internal of [> `Coservice ] ], [> `Get ]) Eliom_service.a_s ],
       [ `WithoutSuffix ], 'gn, unit,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_coservice' :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> unit -> Pages.page Lwt.t) ->
      ('get, unit, [> `Nonattached of [> `Get ] Eliom_service.na_s ],
       [ `WithoutSuffix ], 'gn, unit,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_post_service :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?https:bool ->
      ?priority:int ->
      fallback:('get, unit,
                [ `Attached of
                    ([ `Internal of [ `Coservice | `Service ] ], [ `Get ])
                    Eliom_service.a_s ],
                [< Eliom_service.suff ] as 'a, 'gn, unit, [< `Registrable ],
                'returnT)
               Eliom_service.service ->
      post_params:('post, [ `WithoutSuffix ], 'pn)
                  Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> 'post -> Pages.page Lwt.t) ->
      ('get, 'post,
       [> `Attached of
            ([> `Internal of [ `Coservice | `Service ] ], [> `Post ])
            Eliom_service.a_s ],
       'a, 'gn, 'pn, [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_post_coservice :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      fallback:('get, unit,
                [ `Attached of
                    ([ `Internal of [< `Coservice | `Service ] ], [ `Get ])
                    Eliom_service.a_s ],
                [< Eliom_service.suff ] as 'a, 'gn, unit, [< `Registrable ],
                'returnT)
               Eliom_service.service ->
      post_params:('post, [ `WithoutSuffix ], 'pn)
                  Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> 'post -> Pages.page Lwt.t) ->
      ('get, 'post,
       [> `Attached of
            ([> `Internal of [> `Coservice ] ], [> `Post ]) Eliom_service.a_s ],
       'a, 'gn, 'pn, [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_post_coservice' :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?keep_get_na_params:bool ->
      ?https:bool ->
      post_params:('post, [ `WithoutSuffix ], 'pn)
                  Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      (unit -> 'post -> Pages.page Lwt.t) ->
      (unit, 'post, [> `Nonattached of [> `Post ] Eliom_service.na_s ],
       [ `WithoutSuffix ], unit, 'pn,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_put_service :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?https:bool ->
      ?priority:int ->
      path:Eliom_lib.Url.path ->
      get_params:('get, [< Eliom_service.suff ] as 'a, 'gn)
                 Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> Eliom_parameter.raw_post_data -> Pages.page Lwt.t) ->
      ('get, Eliom_parameter.raw_post_data,
       [> `Attached of
            ([> `Internal of [> `Service ] ], [> `Put ]) Eliom_service.a_s ],
       'a, 'gn, Eliom_parameter.no_param_name,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_put_coservice :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      fallback:(unit, Eliom_parameter.raw_post_data,
                [ `Attached of
                    ([ `Internal of [ `Service ] ], [ `Put ])
                    Eliom_service.a_s ],
                [ `WithoutSuffix ], unit, Eliom_parameter.no_param_name,
                [< Eliom_service.registrable ], 'returnT)
               Eliom_service.service ->
      get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> Eliom_parameter.raw_post_data -> Pages.page Lwt.t) ->
      ('get, Eliom_parameter.raw_post_data,
       [> `Attached of
            ([> `Internal of [> `Coservice ] ], [> `Put ]) Eliom_service.a_s ],
       [ `WithoutSuffix ], 'gn, Eliom_parameter.no_param_name,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_put_coservice' :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> Eliom_parameter.raw_post_data -> Pages.page Lwt.t) ->
      ('get, Eliom_parameter.raw_post_data,
       [> `Nonattached of [> `Put ] Eliom_service.na_s ], [ `WithoutSuffix ],
       'gn, Eliom_parameter.no_param_name,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_delete_service :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?https:bool ->
      ?priority:int ->
      path:Eliom_lib.Url.path ->
      get_params:('get, [< Eliom_service.suff ] as 'a, 'gn)
                 Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> Eliom_parameter.raw_post_data -> Pages.page Lwt.t) ->
      ('get, Eliom_parameter.raw_post_data,
       [> `Attached of
            ([> `Internal of [> `Service ] ], [> `Delete ]) Eliom_service.a_s ],
       'a, 'gn, Eliom_parameter.no_param_name,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_delete_coservice :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      fallback:(unit, Eliom_parameter.raw_post_data,
                [ `Attached of
                    ([ `Internal of [ `Service ] ], [ `Delete ])
                    Eliom_service.a_s ],
                [ `WithoutSuffix ], unit, Eliom_parameter.no_param_name,
                [< Eliom_service.registrable ], 'returnT)
               Eliom_service.service ->
      get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> Eliom_parameter.raw_post_data -> Pages.page Lwt.t) ->
      ('get, Eliom_parameter.raw_post_data,
       [> `Attached of
            ([> `Internal of [> `Coservice ] ], [> `Delete ])
            Eliom_service.a_s ],
       [ `WithoutSuffix ], 'gn, Eliom_parameter.no_param_name,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val register_delete_coservice' :
      ?scope:[< Eliom_common.scope ] ->
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t ->
      ?secure_session:bool ->
      ?name:string ->
      ?csrf_safe:bool ->
      ?csrf_scope:[< Eliom_common.user_scope ] ->
      ?csrf_secure:bool ->
      ?max_use:int ->
      ?timeout:float ->
      ?https:bool ->
      get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
      ?error_handler:((string * exn) list -> Pages.page Lwt.t) ->
      ('get -> Eliom_parameter.raw_post_data -> Pages.page Lwt.t) ->
      ('get, Eliom_parameter.raw_post_data,
       [> `Nonattached of [> `Delete ] Eliom_service.na_s ],
       [ `WithoutSuffix ], 'gn, Eliom_parameter.no_param_name,
       [< Eliom_service.registrable > `Registrable ], 'returnB)
      Eliom_service.service
    val send :
      ?options:Pages.options ->
      ?charset:string ->
      ?code:int ->
      ?content_type:string ->
      ?headers:Http_headers.t -> Pages.page -> Pages.result Lwt.t
  end >>