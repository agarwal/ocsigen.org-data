=Module <<a_api_type subproject="client" | module Eliom_client >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Eliom_client>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module Eliom_client >><<span class="ocsforge_color_keyword"|end>>>>~Call server side services and change the current page~.

----
<<pre id="VALinit_client_app" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|init~_client~_app>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| app_name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?ssl: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_label"| full_path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Call this function if you want to be able to run your client side app
    before doing the first request~, that is~, when the client side app
    is not sent by the server~. ~This may be the case for example if you are
    developing a mobile app~. ~The parameters correspond to the base ~U~R~L of the
    server side of your application~.


    ~Alternatively~, and to make sure it is done early enough~, define
    a ~J~S variable called <<span class="odocwiki_inlinecode"|~_~_eliom~_server>> at the beginning of your
    html file~, containing the full ~U~R~L of your server~.
>>
<<pre id="VALis_client_app" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|is~_client~_app>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> bool>>>><<div class="odocwiki_info"|~Returns whether the application is sent by a server or started on
    client side~. ~If called on server side~, always returns <<span class="odocwiki_inlinecode"|false>>~.
    ~Otherwise~, it tests the presence of ~J~S variables added automatically by
    ~Eliom when the page is sent by a server~.
    ~Example~:
    
<<code language='ocaml'| if not (Eliom_client.is_client_app ())
 then Eliom_client.init_client_app ... >>

>>
<<pre id="VALchange_page" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|change~_page>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, [< <<a_api subproject="client" text="Eliom_service.service_method" | type Eliom_service.service_method >> ],\\           [< <<a_api subproject="client" text="Eliom_service.attached" | type Eliom_service.attached >> ], [< <<a_api subproject="client" text="Eliom_service.service_kind" | type Eliom_service.service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.suff" | type Eliom_service.suff >> ], 'd, 'e,\\           [< <<a_api subproject="client" text="Eliom_service.registrable" | type Eliom_service.registrable >> ],\\           [< <<a_api subproject="client" text="Eliom_registration.non_ocaml_service" | type Eliom_registration.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\          <<a_api subproject="client" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<a_api subproject="client" text="Eliom_parameter.nl_params_set" | type Eliom_parameter.nl_params_set >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?upload_progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?override_mime_type: >>string <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Call a server side service and change the current page~.
    ~If the service belongs to the same application~,
    the client side program is not stopped~, and only
    the content ~(not the container~) is reloaded~.
>>
<<pre id="VALcall_ocaml_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|call~_ocaml~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, [< <<a_api subproject="client" text="Eliom_service.service_method" | type Eliom_service.service_method >> ],\\           [< <<a_api subproject="client" text="Eliom_service.attached" | type Eliom_service.attached >> ], [< <<a_api subproject="client" text="Eliom_service.service_kind" | type Eliom_service.service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.suff" | type Eliom_service.suff >> ], 'd, 'e,\\           [< <<a_api subproject="client" text="Eliom_service.registrable" | type Eliom_service.registrable >> ],\\           'return <<a_api subproject="client" text="Eliom_service.ocaml_service" | type Eliom_service.ocaml_service >><<span class="ocsforge_color_delimiter"| ) >>\\          <<a_api subproject="client" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<a_api subproject="client" text="Eliom_parameter.nl_params_set" | type Eliom_parameter.nl_params_set >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?upload_progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?override_mime_type: >>string <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> 'return <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Call a server side service that return an ~O~Caml value~.


    ~If the service raises an exception~, the call to the
    <<span class="odocwiki_inlinecode"|call~_ocaml~_service>> raises an exception <<a_api|exception
    Exception_on_server>>  whose argument describes the server~-side
    exception~.
    ~(~N~B that we cannot send the original exception as~-it~, because
    ~O~Caml permits the marshalling of exceptions ~.~.~.~)
>>
<<pre id="VALexit_to" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|exit~_to>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, [< <<a_api subproject="client" text="Eliom_service.service_method" | type Eliom_service.service_method >> ],\\           [< <<a_api subproject="client" text="Eliom_service.attached" | type Eliom_service.attached >> ], [< <<a_api subproject="client" text="Eliom_service.service_kind" | type Eliom_service.service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.suff" | type Eliom_service.suff >> ], 'd, 'e,\\           [< <<a_api subproject="client" text="Eliom_service.registrable" | type Eliom_service.registrable >> ],\\           [< <<a_api subproject="client" text="Eliom_registration.non_ocaml_service" | type Eliom_registration.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\          <<a_api subproject="client" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<a_api subproject="client" text="Eliom_parameter.nl_params_set" | type Eliom_parameter.nl_params_set >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Stop current program and load a new page~.  ~Note that for string arguments~,
    sole line feed or sole carriage return characters are substituted by the
    string <<span class="odocwiki_inlinecode"|"~\r~\n">>~.
>>
<<pre id="VALwindow_open" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|window~_open>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| window_name: >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?window_features: >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, unit, [< <<a_api subproject="client" text="Eliom_service.get_service_kind" | type Eliom_service.get_service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.attached" | type Eliom_service.attached >> ], [< <<a_api subproject="client" text="Eliom_service.service_kind" | type Eliom_service.service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.suff" | type Eliom_service.suff >> ], 'b, unit,\\           [< <<a_api subproject="client" text="Eliom_service.registrable" | type Eliom_service.registrable >> ], 'c<<span class="ocsforge_color_delimiter"| ) >>\\          <<a_api subproject="client" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<a_api subproject="client" text="Eliom_parameter.nl_params_set" | type Eliom_parameter.nl_params_set >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Dom_html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|window>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Loads an ~Eliom service in a window ~(cf~. ~Javascript~'s <<span class="odocwiki_inlinecode"|window~.open>>~)~.
>>
<<pre id="VALchange_url" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|change~_url>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'get, unit, [< <<a_api subproject="client" text="Eliom_service.get_service_kind" | type Eliom_service.get_service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.attached" | type Eliom_service.attached >> ], [< <<a_api subproject="client" text="Eliom_service.service_kind" | type Eliom_service.service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.suff" | type Eliom_service.suff >> ], 'gn, unit,\\           [< <<a_api subproject="client" text="Eliom_service.registrable" | type Eliom_service.registrable >> ], 'return<<span class="ocsforge_color_delimiter"| ) >>\\          <<a_api subproject="client" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<a_api subproject="client" text="Eliom_parameter.nl_params_set" | type Eliom_parameter.nl_params_set >> <<span class="ocsforge_color_delimiter"| -> >> 'get <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Changes the ~U~R~L~, without doing a request~.
    ~It takes a ~G~E~T ~(co~-~)service as parameter and its parameters~.
>>
<<pre id="VALcall_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|call~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?absolute: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?absolute_path: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| service: >><<span class="ocsforge_color_delimiter"| ( >>'a, 'b, [< <<a_api subproject="client" text="Eliom_service.service_method" | type Eliom_service.service_method >> ],\\           [< <<a_api subproject="client" text="Eliom_service.attached" | type Eliom_service.attached >> ], [< <<a_api subproject="client" text="Eliom_service.service_kind" | type Eliom_service.service_kind >> ],\\           [< <<a_api subproject="client" text="Eliom_service.suff" | type Eliom_service.suff >> ], 'd, 'e,\\           [< <<a_api subproject="client" text="Eliom_service.registrable" | type Eliom_service.registrable >> ], 'return<<span class="ocsforge_color_delimiter"| ) >>\\          <<a_api subproject="client" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?hostname: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?port: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?fragment: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?nl_params: >><<a_api subproject="client" text="Eliom_parameter.nl_params_set" | type Eliom_parameter.nl_params_set >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?upload_progress: >><<span class="ocsforge_color_delimiter"| ( >>int <<span class="ocsforge_color_delimiter"| -> >> int <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?override_mime_type: >>string <<span class="ocsforge_color_delimiter"| -> >> 'a <<span class="ocsforge_color_delimiter"| -> >> 'b <<span class="ocsforge_color_delimiter"| -> >> string <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~(low level~) ~Call a server side service and return the content
    of the resulting ~H~T~T~P frame as a string~.
>>
<<pre id="VALonload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|onload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Registers some code to be executed after loading the client
    application~, or after changing the page the next time~.


    ~It complements as a toplevel expression in the client
    module with the side effect from client values while
    creating the response of a service~: ~While the latter are executed
    each time the service has been called~; the former is executed only
    once~; but each at a time where the document is in place~:


    <<code language="ocaml"|
    {shared{ open Eliom_lib }}
    {client{
      let () = alert "Once only during initialization of the client, \
                      i.e. before the document is available."
      let () =
        Eliom_client.onload
          (fun () -> alert "Once only when the document is put in place.")
    }}
    {server{
      let _ = My_app.register_service ~path ~get_params
        (fun () () ->
           ignore {unit{
             alert "Each time this service is called and the sent document \
                    is put in place."
           }};
           Lwt.return html
    }}
    >> 
>>
<<pre id="VALonunload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|onunload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_delimiter"| ( >>unit <<span class="ocsforge_color_delimiter"| -> >> string option<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|onunload f>> registers <<span class="odocwiki_inlinecode"|f>> as a handler to be called before
    changing the page the next time~. ~If <<span class="odocwiki_inlinecode"|f>> returns <<span class="odocwiki_inlinecode"|~Some s>>~, then we
    ask the user to confirm quitting~. ~We try to use <<span class="odocwiki_inlinecode"|s>> in the
    confirmation pop~-up~. <<span class="odocwiki_inlinecode"|~None>> means no confirmation needed~.


    ~The callback <<span class="odocwiki_inlinecode"|f>> is sometimes trigerred by internal service calls~,
    and sometimes by the browser <<span class="odocwiki_inlinecode"|onbeforeunload>> event~. ~In the
    <<span class="odocwiki_inlinecode"|onbeforeunload>> case~, the confirmation pop~-up is managed by the
    browser~. ~For ~Firefox~, the string <<span class="odocwiki_inlinecode"|s>> returned by <<span class="odocwiki_inlinecode"|f>> is ignored~:
    https~:~/~/bugzilla~.mozilla~.org~/show~_bug~.cgi~?id~=~6~4~1~5~0~9


    <<span class="odocwiki_inlinecode"|onunload>> can be used to register multiple callbacks~. ~If the user
    decides to stay~, we call any remaining callbacks~, but these cannot
    ask for further confirmation~.
>>
<<pre id="VALwait_load_end" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|wait~_load~_end>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|unit <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Lwt>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>>>>>><<div class="odocwiki_info"|~Wait for the initialization phase to terminate
>>
