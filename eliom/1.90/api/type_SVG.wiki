<<code language="ocaml" | sig
  module M :
    sig
      type 'a attrib
      type 'a attribs
      type +'a elt
      type +'a elts
      type ('a, 'b) nullary = ?a:'a SVG.M.attrib list -> unit -> 'b SVG.M.elt
      type ('a, 'b, 'c) unary =
          ?a:'a SVG.M.attrib list -> 'b SVG.M.elt -> 'c SVG.M.elt
      type ('a, 'b, 'c) star =
          ?a:'a SVG.M.attrib list -> 'b SVG.M.elt list -> 'c SVG.M.elt
      type ('a, 'b, 'c) plus =
          ?a:'a SVG.M.attrib list ->
          'b SVG.M.elt -> 'b SVG.M.elt list -> 'c SVG.M.elt
      type altglyphdef_content =
          [ `Item of Svgtypes.altglyphitem SVG.M.elt list
          | `Ref of Svgtypes.glyphref SVG.M.elt list ]
      val a_version : string -> [ `Version ] SVG.M.attrib
      val a_baseprofile : string -> [ `BaseProfile ] SVG.M.attrib
      val a_x : Svgtypes.coord -> [ `X ] SVG.M.attrib
      val a_y : Svgtypes.coord -> [ `Y ] SVG.M.attrib
      val a_width : Svgtypes.Unit.length -> [ `Width ] SVG.M.attrib
      val a_height : Svgtypes.Unit.length -> [ `Height ] SVG.M.attrib
      val a_preserveaspectratio :
        string -> [ `PreserveAspectRatio ] SVG.M.attrib
      val a_contentscripttype : string -> [ `ContentScriptType ] SVG.M.attrib
      val a_contentstyletype : string -> [ `ContentStyleType ] SVG.M.attrib
      val a_zoomAndPan :
        [ `Disable | `Magnify ] -> [ `ZoomAndSpan ] SVG.M.attrib
      val a_xlink_href : Svgtypes.iri -> [ `Xlink_href ] SVG.M.attrib
      val a_requiredfeatures :
        Svgtypes.spacestrings -> [ `RequiredFeatures ] SVG.M.attrib
      val a_requiredextensions :
        Svgtypes.spacestrings -> [ `RequiredExtension ] SVG.M.attrib
      val a_systemlanguage :
        Svgtypes.commastrings -> [ `SystemLanguage ] SVG.M.attrib
      val a_externalressourcesrequired :
        bool -> [ `ExternalRessourcesRequired ] SVG.M.attrib
      val a_id : string -> [ `Id ] SVG.M.attrib
      val a_xml_base : Svgtypes.iri -> [ `Xml_Base ] SVG.M.attrib
      val a_xml_lang : Svgtypes.iri -> [ `Xml_Lang ] SVG.M.attrib
      val a_xml_space :
        [ `Default | `Preserve ] -> [ `Xml_Space ] SVG.M.attrib
      val a_type : string -> [ `Type ] SVG.M.attrib
      val a_media : Svgtypes.commastrings -> [ `Media ] SVG.M.attrib
      val a_title : string -> [ `Title ] SVG.M.attrib
      val a_class : Svgtypes.spacestrings -> [ `Class ] SVG.M.attrib
      val a_style : string -> [ `Style ] SVG.M.attrib
      val a_transform : Svgtypes.transform -> [ `Transform ] SVG.M.attrib
      val a_viewbox : Svgtypes.fourfloats -> [ `Viewbox ] SVG.M.attrib
      val a_d : string -> [ `D ] SVG.M.attrib
      val a_pathlength : float -> [ `PathLength ] SVG.M.attrib
      val a_rx : Svgtypes.Unit.length -> [ `Rx ] SVG.M.attrib
      val a_ry : Svgtypes.Unit.length -> [ `Ry ] SVG.M.attrib
      val a_cx : Svgtypes.Unit.length -> [ `Cx ] SVG.M.attrib
      val a_cy : Svgtypes.Unit.length -> [ `Cy ] SVG.M.attrib
      val a_r : Svgtypes.Unit.length -> [ `R ] SVG.M.attrib
      val a_x1 : Svgtypes.coord -> [ `X1 ] SVG.M.attrib
      val a_y1 : Svgtypes.coord -> [ `Y1 ] SVG.M.attrib
      val a_x2 : Svgtypes.coord -> [ `X2 ] SVG.M.attrib
      val a_y2 : Svgtypes.coord -> [ `Y2 ] SVG.M.attrib
      val a_points : Svgtypes.coords -> [ `Points ] SVG.M.attrib
      val a_x_list : Svgtypes.lengths -> [ `X__list ] SVG.M.attrib
      val a_y_list : Svgtypes.lengths -> [ `Y__list ] SVG.M.attrib
      val a_dx : Svgtypes.lengths -> [ `Dx ] SVG.M.attrib
      val a_dy : Svgtypes.lengths -> [ `Dy ] SVG.M.attrib
      val a_dx_single : Svgtypes.Unit.length -> [ `Dx__single ] SVG.M.attrib
      val a_dy_single : Svgtypes.Unit.length -> [ `Dy__single ] SVG.M.attrib
      val a_dx_number : Svgtypes.number -> [ `Dx__number ] SVG.M.attrib
      val a_dy_number : Svgtypes.number -> [ `Dy__number ] SVG.M.attrib
      val a_lengthadjust :
        [ `Spacing | `SpacingAndGlyphs ] -> [ `LengthAdjust ] SVG.M.attrib
      val a_textlength : Svgtypes.Unit.length -> [ `TextLength ] SVG.M.attrib
      val a_rotate : Svgtypes.numbers -> [ `Rotate ] SVG.M.attrib
      val a_startoffset :
        Svgtypes.Unit.length -> [ `StartOffset ] SVG.M.attrib
      val a_method : [ `Align | `Stretch ] -> [ `Method ] SVG.M.attrib
      val a_spacing : [ `Auto | `Exact ] -> [ `Spacing ] SVG.M.attrib
      val a_glyphref : string -> [ `GlyphRef ] SVG.M.attrib
      val a_format : string -> [ `Format ] SVG.M.attrib
      val a_markerunits :
        [ `StrokeWidth | `UserSpaceOnUse ] -> [ `MarkerUnits ] SVG.M.attrib
      val a_refx : Svgtypes.coord -> [ `RefX ] SVG.M.attrib
      val a_refy : Svgtypes.coord -> [ `RefY ] SVG.M.attrib
      val a_markerwidth :
        Svgtypes.Unit.length -> [ `MarkerWidth ] SVG.M.attrib
      val a_markerheight :
        Svgtypes.Unit.length -> [ `MarkerHeight ] SVG.M.attrib
      val a_orient :
        [ `Angle of Svgtypes.Unit.angle | `Auto ] -> [ `Orient ] SVG.M.attrib
      val a_local : string -> [ `Local ] SVG.M.attrib
      val a_renderingindent :
        [ `Absolute_colorimetric
        | `Auto
        | `Perceptual
        | `Relative_colorimetric
        | `Saturation ] -> [ `Rendering_Indent ] SVG.M.attrib
      val a_gradientunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `GradientUnits ] SVG.M.attrib
      val a_gradienttransform :
        Svgtypes.transforms -> [ `Gradient_Transform ] SVG.M.attrib
      val a_spreadmethod :
        [ `Pad | `Reflect | `Repeat ] -> [ `SpreadMethod ] SVG.M.attrib
      val a_fx : Svgtypes.coord -> [ `Fx ] SVG.M.attrib
      val a_fy : Svgtypes.coord -> [ `Fy ] SVG.M.attrib
      val a_offset :
        [ `Number of Svgtypes.number | `Percentage of Svgtypes.percentage ] ->
        [ `Offset ] SVG.M.attrib
      val a_patternunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `PatternUnits ] SVG.M.attrib
      val a_patterncontentunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `PatternContentUnits ] SVG.M.attrib
      val a_patterntransform :
        Svgtypes.transforms -> [ `PatternTransform ] SVG.M.attrib
      val a_clippathunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `ClipPathUnits ] SVG.M.attrib
      val a_maskunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `MaskUnits ] SVG.M.attrib
      val a_maskcontentunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `MaskContentUnits ] SVG.M.attrib
      val a_primitiveunits :
        [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
        [ `PrimitiveUnits ] SVG.M.attrib
      val a_filterres :
        Svgtypes.number_optional_number -> [ `FilterResUnits ] SVG.M.attrib
      val a_result : string -> [ `Result ] SVG.M.attrib
      val a_in :
        [ `BackgroundAlpha
        | `BackgroundImage
        | `FillPaint
        | `Ref of string
        | `SourceAlpha
        | `SourceGraphic
        | `StrokePaint ] -> [ `In ] SVG.M.attrib
      val a_in2 :
        [ `BackgroundAlpha
        | `BackgroundImage
        | `FillPaint
        | `Ref of string
        | `SourceAlpha
        | `SourceGraphic
        | `StrokePaint ] -> [ `In2 ] SVG.M.attrib
      val a_aizmuth : float -> [ `Azimuth ] SVG.M.attrib
      val a_elevation : float -> [ `Elevation ] SVG.M.attrib
      val a_pointatx : float -> [ `PointsAtX ] SVG.M.attrib
      val a_pointaty : float -> [ `PointsAtY ] SVG.M.attrib
      val a_pointatz : float -> [ `PointsAtZ ] SVG.M.attrib
      val a_specularexponent : float -> [ `SpecularExponent ] SVG.M.attrib
      val a_specularconstant : float -> [ `SpecularConstant ] SVG.M.attrib
      val a_limitingconeangle : float -> [ `LimitingConeAngle ] SVG.M.attrib
      val a_mode :
        [ `Darken | `Lighten | `Multiply | `Normal | `Screen ] ->
        [ `Mode ] SVG.M.attrib
      val a_typefecolor :
        [ `HueRotate | `LuminanceToAlpha | `Matrix | `Saturate ] ->
        [ `Type__fecolor ] SVG.M.attrib
      val a_values : Svgtypes.numbers -> [ `Values ] SVG.M.attrib
      val a_transferttype :
        [ `Discrete | `Gamma | `Identity | `Linear | `Table ] ->
        [ `Type__transfert ] SVG.M.attrib
      val a_tablevalues : Svgtypes.numbers -> [ `TableValues ] SVG.M.attrib
      val a_intercept : Svgtypes.number -> [ `Intercept ] SVG.M.attrib
      val a_amplitude : Svgtypes.number -> [ `Amplitude ] SVG.M.attrib
      val a_exponent : Svgtypes.number -> [ `Exponent ] SVG.M.attrib
      val a_offsettransfer :
        Svgtypes.number -> [ `Offset__transfer ] SVG.M.attrib
      val a_operator :
        [ `Arithmetic | `Atop | `In | `Out | `Over | `Xor ] ->
        [ `Operator ] SVG.M.attrib
      val a_k1 : Svgtypes.number -> [ `K1 ] SVG.M.attrib
      val a_k2 : Svgtypes.number -> [ `K2 ] SVG.M.attrib
      val a_k3 : Svgtypes.number -> [ `K3 ] SVG.M.attrib
      val a_k4 : Svgtypes.number -> [ `K4 ] SVG.M.attrib
      val a_order :
        Svgtypes.number_optional_number -> [ `Order ] SVG.M.attrib
      val a_kernelmatrix : Svgtypes.numbers -> [ `KernelMatrix ] SVG.M.attrib
      val a_divisor : Svgtypes.number -> [ `Divisor ] SVG.M.attrib
      val a_bias : Svgtypes.number -> [ `Bias ] SVG.M.attrib
      val a_kernelunitlength :
        Svgtypes.number_optional_number -> [ `KernelUnitLength ] SVG.M.attrib
      val a_targetX : int -> [ `TargetX ] SVG.M.attrib
      val a_targetY : int -> [ `TargetY ] SVG.M.attrib
      val a_edgemode :
        [ `Duplicate | `None | `Wrap ] -> [ `TargetY ] SVG.M.attrib
      val a_preservealpha : bool -> [ `TargetY ] SVG.M.attrib
      val a_surfacescale : Svgtypes.number -> [ `SurfaceScale ] SVG.M.attrib
      val a_diffuseconstant :
        Svgtypes.number -> [ `DiffuseConstant ] SVG.M.attrib
      val a_scale : Svgtypes.number -> [ `Scale ] SVG.M.attrib
      val a_xchannelselector :
        [ `A | `B | `G | `R ] -> [ `XChannelSelector ] SVG.M.attrib
      val a_ychannelselector :
        [ `A | `B | `G | `R ] -> [ `YChannelSelector ] SVG.M.attrib
      val a_stddeviation :
        Svgtypes.number_optional_number -> [ `StdDeviation ] SVG.M.attrib
      val a_operatormorphology :
        [ `Dilate | `Erode ] -> [ `OperatorMorphology ] SVG.M.attrib
      val a_radius :
        Svgtypes.number_optional_number -> [ `Radius ] SVG.M.attrib
      val a_basefrenquency :
        Svgtypes.number_optional_number -> [ `BaseFrequency ] SVG.M.attrib
      val a_numoctaves : int -> [ `NumOctaves ] SVG.M.attrib
      val a_seed : Svgtypes.number -> [ `Seed ] SVG.M.attrib
      val a_stitchtiles :
        [ `NoStitch | `Stitch ] -> [ `StitchTiles ] SVG.M.attrib
      val a_stitchtype :
        [ `FractalNoise | `Turbulence ] -> [ `TypeStitch ] SVG.M.attrib
      val a_xlinkshow : [ `New | `Replace ] -> [ `Xlink_show ] SVG.M.attrib
      val a_xlinkactuate : [ `OnRequest ] -> [ `Xlink_actuate ] SVG.M.attrib
      val a_target : string -> [ `Xlink_target ] SVG.M.attrib
      val a_viewtarget : string -> [ `ViewTarget ] SVG.M.attrib
      val a_attributename : string -> [ `AttributeName ] SVG.M.attrib
      val a_attributetype :
        [ `Auto | `CSS | `XML ] -> [ `AttributeType ] SVG.M.attrib
      val a_begin : string -> [ `Begin ] SVG.M.attrib
      val a_dur : string -> [ `Dur ] SVG.M.attrib
      val a_min : string -> [ `Min ] SVG.M.attrib
      val a_max : string -> [ `Max ] SVG.M.attrib
      val a_restart :
        [ `Always | `Never | `WhenNotActive ] -> [ `Restart ] SVG.M.attrib
      val a_repeatcount : string -> [ `RepeatCount ] SVG.M.attrib
      val a_repeatdur : string -> [ `RepeatDur ] SVG.M.attrib
      val a_fill : [ `Freeze | `Remove ] -> [ `Fill ] SVG.M.attrib
      val a_calcmode :
        [ `Discrete | `Linear | `Paced | `Spline ] ->
        [ `CalcMode ] SVG.M.attrib
      val a_values_anim : Svgtypes.strings -> [ `Values__anim ] SVG.M.attrib
      val a_keytimes : Svgtypes.strings -> [ `KeyTimes ] SVG.M.attrib
      val a_keysplines : Svgtypes.strings -> [ `KeySplines ] SVG.M.attrib
      val a_from : string -> [ `From ] SVG.M.attrib
      val a_to : string -> [ `To ] SVG.M.attrib
      val a_by : string -> [ `By ] SVG.M.attrib
      val a_additive : [ `Replace | `Sum ] -> [ `Additive ] SVG.M.attrib
      val a_accumulate : [ `None | `Sum ] -> [ `Accumulate ] SVG.M.attrib
      val a_keypoints :
        Svgtypes.numbers_semicolon -> [ `KeyPoints ] SVG.M.attrib
      val a_path : string -> [ `Path ] SVG.M.attrib
      val a_typeanimatecolor :
        [ `Rotate | `Scale | `SkewX | `SkewY | `Translate ] ->
        [ `Type__animatecolor ] SVG.M.attrib
      val a_horiz_origin_x :
        Svgtypes.number -> [ `Horiz___origin___x ] SVG.M.attrib
      val a_horiz_origin_y :
        Svgtypes.number -> [ `Horiz___origin___y ] SVG.M.attrib
      val a_horiz_adv_x :
        Svgtypes.number -> [ `Horiz___adv___x ] SVG.M.attrib
      val a_vert_origin_x :
        Svgtypes.number -> [ `Vert___origin___x ] SVG.M.attrib
      val a_vert_origin_y :
        Svgtypes.number -> [ `Vert___origin___y ] SVG.M.attrib
      val a_vert_adv_y : Svgtypes.number -> [ `Vert___adv___y ] SVG.M.attrib
      val a_unicode : string -> [ `Unicode ] SVG.M.attrib
      val a_glyphname : string -> [ `glyphname ] SVG.M.attrib
      val a_orientation : [ `H | `V ] -> [ `Orientation ] SVG.M.attrib
      val a_arabicform :
        [ `Initial | `Isolated | `Medial | `Terminal ] ->
        [ `Arabic___form ] SVG.M.attrib
      val a_lang : string -> [ `Lang ] SVG.M.attrib
      val a_u1 : string -> [ `U1 ] SVG.M.attrib
      val a_u2 : string -> [ `U2 ] SVG.M.attrib
      val a_g1 : string -> [ `G1 ] SVG.M.attrib
      val a_g2 : string -> [ `G2 ] SVG.M.attrib
      val a_k : string -> [ `K ] SVG.M.attrib
      val a_fontfamily : string -> [ `Font___Family ] SVG.M.attrib
      val a_fontstyle : string -> [ `Font___Style ] SVG.M.attrib
      val a_fontvariant : string -> [ `Font___Variant ] SVG.M.attrib
      val a_fontweight : string -> [ `Font___Weight ] SVG.M.attrib
      val a_fontstretch : string -> [ `Font___Stretch ] SVG.M.attrib
      val a_fontsize : string -> [ `Font___Size ] SVG.M.attrib
      val a_unicoderange : string -> [ `Unicode___Range ] SVG.M.attrib
      val a_unitsperem : string -> [ `Units___Per___Em ] SVG.M.attrib
      val a_stemv : Svgtypes.number -> [ `Stemv ] SVG.M.attrib
      val a_stemh : Svgtypes.number -> [ `Stemh ] SVG.M.attrib
      val a_slope : Svgtypes.number -> [ `Slope ] SVG.M.attrib
      val a_capheight : Svgtypes.number -> [ `Cap___Height ] SVG.M.attrib
      val a_xheight : Svgtypes.number -> [ `X___Height ] SVG.M.attrib
      val a_accentheight :
        Svgtypes.number -> [ `Accent___Height ] SVG.M.attrib
      val a_ascent : Svgtypes.number -> [ `Ascent ] SVG.M.attrib
      val a_widths : string -> [ `Widths ] SVG.M.attrib
      val a_bbox : string -> [ `Bbox ] SVG.M.attrib
      val a_ideographic : Svgtypes.number -> [ `Ideographic ] SVG.M.attrib
      val a_alphabetic : Svgtypes.number -> [ `Alphabetic ] SVG.M.attrib
      val a_mathematical : Svgtypes.number -> [ `Mathematical ] SVG.M.attrib
      val a_hanging : Svgtypes.number -> [ `Hanging ] SVG.M.attrib
      val a_videographic :
        Svgtypes.number -> [ `V___Ideographic ] SVG.M.attrib
      val a_valphabetic : Svgtypes.number -> [ `V___Alphabetic ] SVG.M.attrib
      val a_vmathematical :
        Svgtypes.number -> [ `V___Mathematical ] SVG.M.attrib
      val a_vhanging : Svgtypes.number -> [ `V___Hanging ] SVG.M.attrib
      val a_underlineposition :
        Svgtypes.number -> [ `Underline___Position ] SVG.M.attrib
      val a_underlinethickness :
        Svgtypes.number -> [ `Underline___Thickness ] SVG.M.attrib
      val a_strikethroughposition :
        Svgtypes.number -> [ `Strikethrough___Position ] SVG.M.attrib
      val a_strikethroughthickness :
        Svgtypes.number -> [ `Strikethrough___Thickness ] SVG.M.attrib
      val a_overlineposition :
        Svgtypes.number -> [ `Overline___Position ] SVG.M.attrib
      val a_overlinethickness :
        Svgtypes.number -> [ `Overline___Thickness ] SVG.M.attrib
      val a_string : string -> [ `String ] SVG.M.attrib
      val a_name : string -> [ `Name ] SVG.M.attrib
      val a_onabort : string -> [ `Onabort ] SVG.M.attrib
      val a_onactivate : string -> [ `Onactivate ] SVG.M.attrib
      val a_onbegin : string -> [ `Onbegin ] SVG.M.attrib
      val a_onclick : string -> [ `Onclick ] SVG.M.attrib
      val a_onend : string -> [ `Onend ] SVG.M.attrib
      val a_onerror : string -> [ `Onerror ] SVG.M.attrib
      val a_onfocusin : string -> [ `Onfocusin ] SVG.M.attrib
      val a_onfocusout : string -> [ `Onfocusout ] SVG.M.attrib
      val a_onload : string -> [ `Onload ] SVG.M.attrib
      val a_onmousedown : string -> [ `Onmousdown ] SVG.M.attrib
      val a_onmouseup : string -> [ `Onmouseup ] SVG.M.attrib
      val a_onmouseover : string -> [ `Onmouseover ] SVG.M.attrib
      val a_onmouseout : string -> [ `Onmouseout ] SVG.M.attrib
      val a_onmousemove : string -> [ `Onmousemove ] SVG.M.attrib
      val a_onrepeat : string -> [ `Onrepeat ] SVG.M.attrib
      val a_onresize : string -> [ `Onresize ] SVG.M.attrib
      val a_onscroll : string -> [ `Onscroll ] SVG.M.attrib
      val a_onunload : string -> [ `Onunload ] SVG.M.attrib
      val a_onzoom : string -> [ `Onzoom ] SVG.M.attrib
      val metadata :
        ?a:Svgtypes.metadata_attr SVG.M.attrib list ->
        XML.elt list -> [> Svgtypes.metadata ] SVG.M.elt
      val foreignobject :
        ?a:Svgtypes.foreignobject_attr SVG.M.attrib list ->
        XML.elt list -> [> Svgtypes.foreignobject ] SVG.M.elt
      val svg :
        ([< Svgtypes.svg_attr ], [< Svgtypes.svg_content ],
         [> Svgtypes.svg ])
        SVG.M.star
      val g :
        ([< Svgtypes.g_attr ], [< Svgtypes.g_content ], [> Svgtypes.g ])
        SVG.M.star
      val defs :
        ([< Svgtypes.defs_attr ], [< Svgtypes.defs_content ],
         [> Svgtypes.defs ])
        SVG.M.star
      val desc :
        ([< Svgtypes.desc_attr ], [< Svgtypes.desc_content ],
         [> Svgtypes.desc ])
        SVG.M.unary
      val title :
        ([< Svgtypes.title_attr ], [< Svgtypes.title_content ],
         [> Svgtypes.title ])
        SVG.M.unary
      val symbol :
        ([< Svgtypes.symbol_attr ], [< Svgtypes.symbol_content ],
         [> Svgtypes.symbol ])
        SVG.M.star
      val use :
        ([< Svgtypes.use_attr ], [< Svgtypes.use_content ],
         [> Svgtypes.use ])
        SVG.M.star
      val image :
        ([< Svgtypes.image_attr ], [< Svgtypes.image_content ],
         [> Svgtypes.image ])
        SVG.M.star
      val switch :
        ([< Svgtypes.switch_attr ], [< Svgtypes.switch_content ],
         [> Svgtypes.switch ])
        SVG.M.star
      val style :
        ([< Svgtypes.style_attr ], [< Svgtypes.style_content ],
         [> Svgtypes.style ])
        SVG.M.unary
      val path :
        ([< Svgtypes.path_attr ], [< Svgtypes.path_content ],
         [> Svgtypes.path ])
        SVG.M.star
      val rect :
        ([< Svgtypes.rect_attr ], [< Svgtypes.rect_content ],
         [> Svgtypes.rect ])
        SVG.M.star
      val circle :
        ([< Svgtypes.circle_attr ], [< Svgtypes.circle_content ],
         [> Svgtypes.circle ])
        SVG.M.star
      val ellipse :
        ([< Svgtypes.ellipse_attr ], [< Svgtypes.ellipse_content ],
         [> Svgtypes.ellipse ])
        SVG.M.star
      val line :
        ([< Svgtypes.line_attr ], [< Svgtypes.line_content ],
         [> Svgtypes.line ])
        SVG.M.star
      val polyline :
        ([< Svgtypes.polyline_attr ], [< Svgtypes.polyline_content ],
         [> Svgtypes.polyline ])
        SVG.M.star
      val polygon :
        ([< Svgtypes.polygon_attr ], [< Svgtypes.polygon_content ],
         [> Svgtypes.polygon ])
        SVG.M.star
      val text :
        ([< Svgtypes.text_attr ], [< Svgtypes.text_content ],
         [> Svgtypes.text ])
        SVG.M.star
      val tspan :
        ([< Svgtypes.tspan_attr ], [< Svgtypes.tspan_content ],
         [> Svgtypes.tspan ])
        SVG.M.star
      val tref :
        ([< Svgtypes.tref_attr ], [< Svgtypes.tref_content ],
         [> Svgtypes.tref ])
        SVG.M.star
      val textpath :
        ([< Svgtypes.textpath_attr ], [< Svgtypes.textpath_content ],
         [> Svgtypes.textpath ])
        SVG.M.star
      val altglyph :
        ([< Svgtypes.altglyph_attr ], [< Svgtypes.altglyph_content ],
         [> Svgtypes.altglyph ])
        SVG.M.unary
      val altglyphdef :
        ([< Svgtypes.altglyphdef_attr ], [< SVG.M.altglyphdef_content ],
         [> Svgtypes.altglyphdef ])
        SVG.M.unary
      val altglyphitem :
        ([< Svgtypes.altglyphitem_attr ], [< Svgtypes.altglyphitem_content ],
         [> Svgtypes.altglyphitem ])
        SVG.M.plus
      val glyphref :
        ([< Svgtypes.glyphref_attr ], [> Svgtypes.glyphref ]) SVG.M.nullary
      val marker :
        ([< Svgtypes.marker_attr ], [< Svgtypes.marker_content ],
         [> Svgtypes.marker ])
        SVG.M.star
      val colorprofile :
        ([< Svgtypes.colorprofile_attr ], [< Svgtypes.colorprofile_content ],
         [> Svgtypes.colorprofile ])
        SVG.M.star
      val lineargradient :
        ([< Svgtypes.lineargradient_attr ],
         [< Svgtypes.lineargradient_content ], [> Svgtypes.lineargradient ])
        SVG.M.star
      val radialgradient :
        ([< Svgtypes.radialgradient_attr ],
         [< Svgtypes.radialgradient_content ], [> Svgtypes.radialgradient ])
        SVG.M.star
      val gradientstop :
        ([< Svgtypes.gradientstop_attr ], [< Svgtypes.gradientstop_content ],
         [> Svgtypes.gradientstop ])
        SVG.M.star
      val pattern :
        ([< Svgtypes.pattern_attr ], [< Svgtypes.pattern_content ],
         [> Svgtypes.pattern ])
        SVG.M.star
      val clippath :
        ([< Svgtypes.clippath_attr ], [< Svgtypes.clippath_content ],
         [> Svgtypes.clippath ])
        SVG.M.star
      val filter :
        ([< Svgtypes.filter_attr ], [< Svgtypes.filter_content ],
         [> Svgtypes.filter ])
        SVG.M.star
      val fedistantlight :
        ([< Svgtypes.fedistantlight_attr ],
         [< Svgtypes.fedistantlight_content ], [> Svgtypes.fedistantlight ])
        SVG.M.star
      val fepointlight :
        ([< Svgtypes.fepointlight_attr ], [< Svgtypes.fepointlight_content ],
         [> Svgtypes.fepointlight ])
        SVG.M.star
      val fespotlight :
        ([< Svgtypes.fespotlight_attr ], [< Svgtypes.fespotlight_content ],
         [> Svgtypes.fespotlight ])
        SVG.M.star
      val feblend :
        ([< Svgtypes.feblend_attr ], [< Svgtypes.feblend_content ],
         [> Svgtypes.feblend ])
        SVG.M.star
      val fecolormatrix :
        ([< Svgtypes.fecolormatrix_attr ],
         [< Svgtypes.fecolormatrix_content ], [> Svgtypes.fecolormatrix ])
        SVG.M.star
      val fecomponenttransfer :
        ([< Svgtypes.fecomponenttransfer_attr ],
         [< Svgtypes.fecomponenttransfer_content ],
         [> Svgtypes.fecomponenttransfer ])
        SVG.M.star
      val fefunca :
        ([< Svgtypes.fefunca_attr ], [< Svgtypes.fefunca_content ],
         [> Svgtypes.fefunca ])
        SVG.M.star
      val fefuncg :
        ([< Svgtypes.fefuncg_attr ], [< Svgtypes.fefuncg_content ],
         [> Svgtypes.fefuncg ])
        SVG.M.star
      val fefuncb :
        ([< Svgtypes.fefuncb_attr ], [< Svgtypes.fefuncb_content ],
         [> Svgtypes.fefuncb ])
        SVG.M.star
      val fefuncr :
        ([< Svgtypes.fefuncr_attr ], [< Svgtypes.fefuncr_content ],
         [> Svgtypes.fefuncr ])
        SVG.M.star
      val fecomposite :
        ([< Svgtypes.fecomposite_attr ], [< Svgtypes.fecomposite_content ],
         [> Svgtypes.fecomposite ])
        SVG.M.star
      val feconvolvematrix :
        ([< Svgtypes.feconvolvematrix_attr ],
         [< Svgtypes.feconvolvematrix_content ],
         [> Svgtypes.feconvolvematrix ])
        SVG.M.star
      val fediffuselighting :
        ([< Svgtypes.fediffuselighting_attr ],
         [< Svgtypes.fediffuselighting_content ],
         [> Svgtypes.fediffuselighting ])
        SVG.M.star
      val fedisplacementmap :
        ([< Svgtypes.fedisplacementmap_attr ],
         [< Svgtypes.fedisplacementmap_content ],
         [> Svgtypes.fedisplacementmap ])
        SVG.M.star
      val feflood :
        ([< Svgtypes.feflood_attr ], [< Svgtypes.feflood_content ],
         [> Svgtypes.feflood ])
        SVG.M.star
      val fegaussianblur :
        ([< Svgtypes.fegaussianblur_attr ],
         [< Svgtypes.fegaussianblur_content ], [> Svgtypes.fegaussianblur ])
        SVG.M.star
      val feimage :
        ([< Svgtypes.feimage_attr ], [< Svgtypes.feimage_content ],
         [> Svgtypes.feimage ])
        SVG.M.star
      val femerge :
        ([< Svgtypes.femerge_attr ], [< Svgtypes.femerge_content ],
         [> Svgtypes.femerge ])
        SVG.M.star
      val femorphology :
        ([< Svgtypes.femorphology_attr ], [< Svgtypes.femorphology_content ],
         [> Svgtypes.femorphology ])
        SVG.M.star
      val feoffset :
        ([< Svgtypes.feoffset_attr ], [< Svgtypes.feoffset_content ],
         [> Svgtypes.feoffset ])
        SVG.M.star
      val fespecularlighting :
        ([< Svgtypes.fespecularlighting_attr ],
         [< Svgtypes.fespecularlighting_content ],
         [> Svgtypes.fespecularlighting ])
        SVG.M.star
      val fetile :
        ([< Svgtypes.fetile_attr ], [< Svgtypes.fetile_content ],
         [> Svgtypes.fetile ])
        SVG.M.star
      val feturbulence :
        ([< Svgtypes.feturbulence_attr ], [< Svgtypes.feturbulence_content ],
         [> Svgtypes.feturbulence ])
        SVG.M.star
      val cursor :
        ([< Svgtypes.cursor_attr ], [< Svgtypes.cursor_content ],
         [> Svgtypes.cursor ])
        SVG.M.star
      val a :
        ([< Svgtypes.a_attr ], [< Svgtypes.a_content ], [> Svgtypes.a ])
        SVG.M.star
      val view :
        ([< Svgtypes.view_attr ], [< Svgtypes.view_content ],
         [> Svgtypes.view ])
        SVG.M.star
      val script :
        ([< Svgtypes.script_attr ], [< Svgtypes.script_content ],
         [> Svgtypes.script ])
        SVG.M.unary
      val animation :
        ([< Svgtypes.animation_attr ], [< Svgtypes.animation_content ],
         [> Svgtypes.animation ])
        SVG.M.star
      val set :
        ([< Svgtypes.set_attr ], [< Svgtypes.set_content ],
         [> Svgtypes.set ])
        SVG.M.star
      val animatemotion :
        ([< Svgtypes.animatemotion_attr ],
         [< Svgtypes.animatemotion_content ], [> Svgtypes.animatemotion ])
        SVG.M.star
      val mpath :
        ([< Svgtypes.mpath_attr ], [< Svgtypes.mpath_content ],
         [> Svgtypes.mpath ])
        SVG.M.star
      val animatecolor :
        ([< Svgtypes.animatecolor_attr ], [< Svgtypes.animatecolor_content ],
         [> Svgtypes.animatecolor ])
        SVG.M.star
      val animatetransform :
        ([< Svgtypes.animatetransform_attr ],
         [< Svgtypes.animatetransform_content ],
         [> Svgtypes.animatetransform ])
        SVG.M.star
      val font :
        ([< Svgtypes.font_attr ], [< Svgtypes.font_content ],
         [> Svgtypes.font ])
        SVG.M.star
      val glyph :
        ([< Svgtypes.glyph_attr ], [< Svgtypes.glyph_content ],
         [> Svgtypes.glyph ])
        SVG.M.star
      val missingglyph :
        ([< Svgtypes.missingglyph_attr ], [< Svgtypes.missingglyph_content ],
         [> Svgtypes.missingglyph ])
        SVG.M.star
      val hkern :
        ([< Svgtypes.hkern_attr ], [> Svgtypes.hkern ]) SVG.M.nullary
      val vkern :
        ([< Svgtypes.vkern_attr ], [> Svgtypes.vkern ]) SVG.M.nullary
      val fontface :
        ([< Svgtypes.fontface_attr ], [> Svgtypes.fontface ]) SVG.M.nullary
      val fontfacesrc :
        ([< Svgtypes.fontfacesrc_attr ], [< Svgtypes.fontfacesrc_content ],
         [> Svgtypes.fontfacesrc ])
        SVG.M.star
      val fontfaceuri :
        ([< Svgtypes.fontfaceuri_attr ], [< Svgtypes.fontfaceuri_content ],
         [> Svgtypes.fontfaceuri ])
        SVG.M.star
      val fontfaceformat :
        ([< Svgtypes.fontfaceformat_attr ], [> Svgtypes.fontfaceformat ])
        SVG.M.nullary
      val fontfacename :
        ([< Svgtypes.fontfacename_attr ], [> Svgtypes.fontfacename ])
        SVG.M.nullary
      val tot : XML.elt -> 'a SVG.M.elt
      val totl : XML.elt list -> 'a SVG.M.elt list
      val toelt : 'a SVG.M.elt -> XML.elt
      val toeltl : 'a SVG.M.elt list -> XML.elt list
      val to_xmlattribs : 'a SVG.M.attrib list -> XML.attrib list
    end
end >>