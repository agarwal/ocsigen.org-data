
// Generated by js_of_ocaml 2.7
(function(joo_global_object)
   {"use strict";
    var
     num_254=254,
     num_255=255,
     num_224=224,
     str_i$0="i",
     str_Invalid_argument="Invalid_argument",
     str$1='"',
     num_16777215=16777215,
     str$12="@[",
     str_function="function",
     str_characters=", characters ",
     num_250=250,
     num_1024=1024,
     num_12=-12,
     str_o="o",
     str_jsError="jsError",
     str_Program_not_lin_abr=
      "(Program not linked with -g, cannot print stack backtrace)\n",
     str_wikicreole_mll="wikicreole.mll",
     num_512=512,
     str_End_of_file="End_of_file",
     num_120=120,
     num_2147483e3=2147483e3,
     str_Failure="Failure",
     num_10=-10,
     str$8="% ",
     str_Stack_overflow="Stack_overflow",
     str$7="",
     num_128=128,
     num_100=100,
     str_0="0",
     num_248=248,
     str_Not_found="Not_found",
     str$11="%#",
     str_Sys_blocked_io="Sys_blocked_io",
     str_fd="fd ",
     str_Match_failure="Match_failure",
     str_camlinternalForm_abr="camlinternalFormat.ml",
     str_Division_by_zero="Division_by_zero",
     num_1e3=1e3,
     str_src_core_lwt_ml="src/core/lwt.ml",
     str_x="x",
     str_Sys_error="Sys_error",
     str$6=".",
     str$5="+",
     num_65535=65535,
     str_u="%u",
     str_d="%d",
     num_110=110,
     num_57343=57343,
     num_785140586=785140586,
     num_252=252,
     str$0="'",
     num_127=127,
     num_982028505=982028505,
     str$10="@{",
     str=" ",
     str_e="e",
     str_Undefined_recurs_abr="Undefined_recursive_module",
     str_d$0="d",
     num_256=256,
     str_X="X",
     str$9="-",
     str_br="br",
     str_nan="nan",
     str_line='", line ',
     num_240=240,
     num_2048=2048,
     str_12g="%.12g",
     num_56320=56320,
     str_file_already_abr=" : file already exists",
     str$4="%+",
     str$2="%",
     str_Assert_failure="Assert_failure",
     str$3="/",
     str_i="%i",
     str_Out_of_memory="Out_of_memory",
     str_index_out_of_bounds="index out of bounds";
    function raw_array_sub(a,i,l)
     {var b=new Array(l);for(var j=0;j<l;j++)b[j]=a[i+j];return b}
    function caml_subarray_to_string(a,i,len)
     {var f=String.fromCharCode;
      if(i==0&&len<=4096&&len==a.length)return f.apply(null,a);
      var s=str$7;
      for(;0<len;i+=num_1024,len-=num_1024)
       s+=f.apply(null,raw_array_sub(a,i,Math.min(len,num_1024)));
      return s}
    function caml_convert_string_to_array(s)
     {var a=new Array(s.l),b=s.c,l=b.length,i=0;
      for(;i<l;i++)a[i]=b.charCodeAt(i);
      for(l=s.l;i<l;i++)a[i]=0;
      s.c=a;
      s.t=4;
      return a}
    function caml_blit_string(s1,i1,s2,i2,len)
     {if(len==0)return 0;
      if(i2==0&&(len>=s2.l||s2.t==2&&len>=s2.c.length))
       {s2.c=
        s1.t==4
         ?caml_subarray_to_string(s1.c,i1,len)
         :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
        s2.t=s2.c.length==s2.l?0:2}
      else
       if(s2.t==2&&i2==s2.c.length)
        {s2.c+=
         s1.t==4
          ?caml_subarray_to_string(s1.c,i1,len)
          :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
         s2.t=s2.c.length==s2.l?0:2}
       else
        {if(s2.t!=4)caml_convert_string_to_array(s2);
         var c1=s1.c,c2=s2.c;
         if(s1.t==4)
          for(var i=0;i<len;i++)c2[i2+i]=c1[i1+i];
         else
          {var l=Math.min(len,c1.length-i1);
           for(var i=0;i<l;i++)c2[i2+i]=c1.charCodeAt(i1+i);
           for(;i<len;i++)c2[i2+i]=0}}
      return 0}
    function raw_array_append_one(a,x)
     {var l=a.length,b=new Array(l+1),i=0;
      for(;i<l;i++)b[i]=a[i];
      b[i]=x;
      return b}
    function caml_call_gen(f,args)
     {if(f.fun)return caml_call_gen(f.fun,args);
      var n=f.length,argsLen=args.length,d=n-argsLen;
      if(d==0)
       return f.apply(null,args);
      else
       if(d<0)
        return caml_call_gen
                (f.apply(null,raw_array_sub(args,0,n)),
                 raw_array_sub(args,n,argsLen-n));
       else
        return function(x)
         {return caml_call_gen(f,raw_array_append_one(args,x))}}
    function caml_raise_with_arg(tag,arg){throw [0,tag,arg]}
    function caml_str_repeat(n,s)
     {if(s.repeat)return s.repeat(n);
      var r=str$7,l=0;
      if(n==0)return r;
      for(;;)
       {if(n&1)r+=s;n>>=1;if(n==0)return r;s+=s;l++;if(l==9)s.slice(0,1)}}
    function caml_convert_string_to_bytes(s)
     {if(s.t==2)
       s.c+=caml_str_repeat(s.l-s.c.length,"\0");
      else
       s.c=caml_subarray_to_string(s.c,0,s.c.length);
      s.t=0}
    function caml_is_ascii(s)
     {if(s.length<24)
       {for(var i=0;i<s.length;i++)if(s.charCodeAt(i)>num_127)return false;
        return true}
      else
       return !/[^\x00-\x7f]/.test(s)}
    function caml_utf16_of_utf8(s)
     {for(var b=str$7,t=str$7,c,c1,c2,v,i=0,l=s.length;i<l;i++)
       {c1=s.charCodeAt(i);
        if(c1<num_128)
         {for(var j=i+1;j<l&&(c1=s.charCodeAt(j))<num_128;j++);
          if(j-i>num_512)
           {t.substr(0,1);b+=t;t=str$7;b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        v=1;
        if(++i<l&&((c2=s.charCodeAt(i))&-64)==num_128)
         {c=c2+(c1<<6);
          if(c1<num_224)
           {v=c-12416;if(v<num_128)v=1}
          else
           {v=2;
            if(++i<l&&((c2=s.charCodeAt(i))&-64)==num_128)
             {c=c2+(c<<6);
              if(c1<num_240)
               {v=c-925824;if(v<num_2048||v>=55295&&v<57344)v=2}
              else
               {v=3;
                if(++i<l&&((c2=s.charCodeAt(i))&-64)==num_128&&c1<245)
                 {v=c2-63447168+(c<<6);if(v<65536||v>1114111)v=3}}}}}
        if(v<4)
         {i-=v;t+="\ufffd"}
        else
         if(v>num_65535)
          t+=String.fromCharCode(55232+(v>>10),num_56320+(v&1023));
         else
          t+=String.fromCharCode(v);
        if(t.length>num_1024){t.substr(0,1);b+=t;t=str$7}}
      return b+t}
    function caml_to_js_string(s)
     {switch(s.t)
       {case 9:return s.c;
        default:caml_convert_string_to_bytes(s);case 0:
         if(caml_is_ascii(s.c)){s.t=9;return s.c}s.t=8;
        case 8:return caml_utf16_of_utf8(s.c)
        }}
    function MlString(tag,contents,length)
     {this.t=tag;this.c=contents;this.l=length}
    MlString.prototype.toString=function(){return caml_to_js_string(this)};
    function caml_new_string(s){return new MlString(0,s,s.length)}
    function caml_raise_with_string(tag,msg)
     {caml_raise_with_arg(tag,caml_new_string(msg))}
    var caml_global_data=[0];
    function caml_invalid_argument(msg)
     {caml_raise_with_string(caml_global_data.Invalid_argument,msg)}
    function caml_array_bound_error()
     {caml_invalid_argument(str_index_out_of_bounds)}
    function caml_check_bound(array,index)
     {if(index>>>0>=array.length-1)caml_array_bound_error();return array}
    function caml_classify_float(x)
     {if(isFinite(x))
       {if(Math.abs(x)>=2.22507385850720138e-308)return 0;
        if(x!=0)return 1;
        return 2}
      return isNaN(x)?4:3}
    function caml_failwith(msg)
     {caml_raise_with_string(caml_global_data.Failure,msg)}
    function caml_convert_raw_backtrace_slot()
     {caml_failwith("caml_convert_raw_backtrace_slot")}
    function caml_create_string(len)
     {if(len<0)caml_invalid_argument("String.create");
      return new MlString(len?2:9,str$7,len)}
    function caml_int64_compare(x,y)
     {var x3=x[3]<<16,y3=y[3]<<16;
      if(x3>y3)return 1;
      if(x3<y3)return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int_compare(a,b){if(a<b)return -1;if(a==b)return 0;return 1}
    function caml_string_compare(s1,s2)
     {s1.t&6&&caml_convert_string_to_bytes(s1);
      s2.t&6&&caml_convert_string_to_bytes(s2);
      return s1.c<s2.c?-1:s1.c>s2.c?1:0}
    function caml_compare_val(a,b,total)
     {var stack=[];
      for(;;)
       {if(!(total&&a===b))
         if(a instanceof MlString)
          if(b instanceof MlString)
           {if(a!==b){var x=caml_string_compare(a,b);if(x!=0)return x}}
          else
           return 1;
         else
          if(a instanceof Array&&a[0]===(a[0]|0))
           {var ta=a[0];
            if(ta===num_254)ta=0;
            if(ta===num_250)
             {a=a[1];continue}
            else
             if(b instanceof Array&&b[0]===(b[0]|0))
              {var tb=b[0];
               if(tb===num_254)tb=0;
               if(tb===num_250)
                {b=b[1];continue}
               else
                if(ta!=tb)
                 return ta<tb?-1:1;
                else
                 switch(ta)
                  {case 248:
                    var x=caml_int_compare(a[2],b[2]);if(x!=0)return x;break;
                   case 251:caml_invalid_argument("equal: abstract value");
                   case 255:
                    var x=caml_int64_compare(a,b);if(x!=0)return x;break;
                   default:
                    if(a.length!=b.length)return a.length<b.length?-1:1;
                    if(a.length>1)stack.push(a,b,1)}}
             else
              return 1}
          else
           if(b instanceof MlString||b instanceof Array&&b[0]===(b[0]|0))
            return -1;
           else
            if(typeof a!="number"&&a&&a.compare)
             return a.compare(b,total);
            else
             if(typeof a==str_function)
              caml_invalid_argument("equal: functional value");
             else
              {if(a<b)return -1;
               if(a>b)return 1;
               if(a!=b)
                {if(!total)return NaN;if(a==a)return 1;if(b==b)return -1}}
        if(stack.length==0)return 0;
        var i=stack.pop();
        b=stack.pop();
        a=stack.pop();
        if(i+1<a.length)stack.push(a,b,i+1);
        a=a[i];
        b=b[i]}}
    function caml_equal(x,y){return +(caml_compare_val(x,y,false)==0)}
    function caml_fill_string(s,i,l,c)
     {if(l>0)
       if(i==0&&(l>=s.l||s.t==2&&l>=s.c.length))
        if(c==0)
         {s.c=str$7;s.t=2}
        else
         {s.c=caml_str_repeat(l,String.fromCharCode(c));s.t=l==s.l?0:2}
       else
        {if(s.t!=4)caml_convert_string_to_array(s);for(l+=i;i<l;i++)s.c[i]=c}
      return 0}
    function caml_bytes_of_string(s)
     {if((s.t&6)!=0)caml_convert_string_to_bytes(s);return s.c}
    function caml_parse_format(fmt)
     {fmt=caml_bytes_of_string(fmt);
      var len=fmt.length;
      if(len>31)caml_invalid_argument("format_int: format too long");
      var
       f=
        {justify:str$5,
         signstyle:str$9,
         filler:str,
         alternate:false,
         base:0,
         signedconv:false,
         width:0,
         uppercase:false,
         sign:1,
         prec:-1,
         conv:"f"};
      for(var i=0;i<len;i++)
       {var c=fmt.charAt(i);
        switch(c)
         {case "-":f.justify=str$9;break;
          case "+":
          case " ":f.signstyle=c;break;
          case "0":f.filler=str_0;break;
          case "#":f.alternate=true;break;
          case "1":
          case "2":
          case "3":
          case "4":
          case "5":
          case "6":
          case "7":
          case "8":
          case "9":
           f.width=0;
           while(c=fmt.charCodeAt(i)-48,c>=0&&c<=9){f.width=f.width*10+c;i++}
           i--;
           break;
          case ".":
           f.prec=0;
           i++;
           while(c=fmt.charCodeAt(i)-48,c>=0&&c<=9){f.prec=f.prec*10+c;i++}
           i--;
          case "d":
          case "i":f.signedconv=true;
          case "u":f.base=10;break;
          case "x":f.base=16;break;
          case "X":f.base=16;f.uppercase=true;break;
          case "o":f.base=8;break;
          case "e":
          case "f":
          case "g":f.signedconv=true;f.conv=c;break;
          case "E":
          case "F":
          case "G":
           f.signedconv=true;f.uppercase=true;f.conv=c.toLowerCase();break
          }}
      return f}
    function caml_finish_formatting(f,rawbuffer)
     {if(f.uppercase)rawbuffer=rawbuffer.toUpperCase();
      var len=rawbuffer.length;
      if(f.signedconv&&(f.sign<0||f.signstyle!=str$9))len++;
      if(f.alternate){if(f.base==8)len+=1;if(f.base==16)len+=2}
      var buffer=str$7;
      if(f.justify==str$5&&f.filler==str)
       for(var i=len;i<f.width;i++)buffer+=str;
      if(f.signedconv)
       if(f.sign<0)
        buffer+=str$9;
       else
        if(f.signstyle!=str$9)buffer+=f.signstyle;
      if(f.alternate&&f.base==8)buffer+=str_0;
      if(f.alternate&&f.base==16)buffer+="0x";
      if(f.justify==str$5&&f.filler==str_0)
       for(var i=len;i<f.width;i++)buffer+=str_0;
      buffer+=rawbuffer;
      if(f.justify==str$9)for(var i=len;i<f.width;i++)buffer+=str;
      return caml_new_string(buffer)}
    function caml_format_float(fmt,x)
     {var s,f=caml_parse_format(fmt),prec=f.prec<0?6:f.prec;
      if(x<0||x==0&&1/x==-Infinity){f.sign=-1;x=-x}
      if(isNaN(x))
       {s=str_nan;f.filler=str}
      else
       if(!isFinite(x))
        {s="inf";f.filler=str}
       else
        switch(f.conv)
         {case "e":
           var s=x.toExponential(prec),i=s.length;
           if(s.charAt(i-3)==str_e)s=s.slice(0,i-1)+str_0+s.slice(i-1);
           break;
          case "f":s=x.toFixed(prec);break;
          case "g":
           prec=prec?prec:1;
           s=x.toExponential(prec-1);
           var j=s.indexOf(str_e),exp=+s.slice(j+1);
           if(exp<-4||x>=1e+21||x.toFixed(0).length>prec)
            {var i=j-1;
             while(s.charAt(i)==str_0)i--;
             if(s.charAt(i)==str$6)i--;
             s=s.slice(0,i+1)+s.slice(j);
             i=s.length;
             if(s.charAt(i-3)==str_e)s=s.slice(0,i-1)+str_0+s.slice(i-1);
             break}
           else
            {var p=prec;
             if(exp<0)
              {p-=exp+1;s=x.toFixed(p)}
             else
              while(s=x.toFixed(p),s.length>prec+1)p--;
             if(p)
              {var i=s.length-1;
               while(s.charAt(i)==str_0)i--;
               if(s.charAt(i)==str$6)i--;
               s=s.slice(0,i+1)}}
           break
          }
      return caml_finish_formatting(f,s)}
    function caml_format_int(fmt,i)
     {if(caml_bytes_of_string(fmt)==str_d)return caml_new_string(str$7+i);
      var f=caml_parse_format(fmt);
      if(i<0)if(f.signedconv){f.sign=-1;i=-i}else i>>>=0;
      var s=i.toString(f.base);
      if(f.prec>=0)
       {f.filler=str;
        var n=f.prec-s.length;
        if(n>0)s=caml_str_repeat(n,str_0)+s}
      return caml_finish_formatting(f,s)}
    function caml_get_exception_raw_backtrace(){return [0]}
    function caml_greaterequal(x,y){return +(caml_compare_val(x,y,false)>=0)}
    function caml_int64_is_zero(x){return (x[3]|x[2]|x[1])==0}
    function caml_int64_of_int32(x)
     {return [num_255,x&num_16777215,x>>24&num_16777215,x>>31&num_65535]}
    function caml_obj_dup(x)
     {var l=x.length,a=new Array(l);for(var i=0;i<l;i++)a[i]=x[i];return a}
    function caml_int64_sub(x,y)
     {var z1=x[1]-y[1],z2=x[2]-y[2]+(z1>>24),z3=x[3]-y[3]+(z2>>24);
      return [num_255,z1&num_16777215,z2&num_16777215,z3&num_65535]}
    function caml_int64_ucompare(x,y)
     {if(x[3]>y[3])return 1;
      if(x[3]<y[3])return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int64_lsl1(x)
     {x[3]=x[3]<<1|x[2]>>23;
      x[2]=(x[2]<<1|x[1]>>23)&num_16777215;
      x[1]=x[1]<<1&num_16777215}
    function caml_int64_lsr1(x)
     {x[1]=(x[1]>>>1|x[2]<<23)&num_16777215;
      x[2]=(x[2]>>>1|x[3]<<23)&num_16777215;
      x[3]=x[3]>>>1}
    function caml_int64_udivmod(x,y)
     {var
       offset=0,
       modulus=caml_obj_dup(x),
       divisor=caml_obj_dup(y),
       quotient=[num_255,0,0,0];
      while(caml_int64_ucompare(modulus,divisor)>0)
       {offset++;caml_int64_lsl1(divisor)}
      while(offset>=0)
       {offset--;
        caml_int64_lsl1(quotient);
        if(caml_int64_ucompare(modulus,divisor)>=0)
         {quotient[1]++;modulus=caml_int64_sub(modulus,divisor)}
        caml_int64_lsr1(divisor)}
      return [0,quotient,modulus]}
    function caml_int64_to_int32(x){return x[1]|x[2]<<24}
    function caml_int64_is_negative(x){return x[3]<<16<0}
    function caml_int64_neg(x)
     {var y1=-x[1],y2=-x[2]+(y1>>24),y3=-x[3]+(y2>>24);
      return [num_255,y1&num_16777215,y2&num_16777215,y3&num_65535]}
    function caml_int64_format(fmt,x)
     {var f=caml_parse_format(fmt);
      if(f.signedconv&&caml_int64_is_negative(x))
       {f.sign=-1;x=caml_int64_neg(x)}
      var
       buffer=str$7,
       wbase=caml_int64_of_int32(f.base),
       cvtbl="0123456789abcdef";
      do
       {var p=caml_int64_udivmod(x,wbase);
        x=p[1];
        buffer=cvtbl.charAt(caml_int64_to_int32(p[2]))+buffer}
      while
       (!caml_int64_is_zero(x));
      if(f.prec>=0)
       {f.filler=str;
        var n=f.prec-buffer.length;
        if(n>0)buffer=caml_str_repeat(n,str_0)+buffer}
      return caml_finish_formatting(f,buffer)}
    function caml_is_printable(c){return +(c>31&&c<num_127)}
    function caml_js_get_console()
     {var
       c=joo_global_object.console?joo_global_object.console:{},
       m=
        ["log",
         "debug",
         "info",
         "warn",
         "error",
         "assert",
         "dir",
         "dirxml",
         "trace",
         "group",
         "groupCollapsed",
         "groupEnd",
         "time",
         "timeEnd"];
      function f(){}
      for(var i=0;i<m.length;i++)if(!c[m[i]])c[m[i]]=f;
      return c}
    var caml_js_regexps={amp:/&/g,lt:/</g,quot:/\"/g,all:/[&<\"]/};
    function caml_js_html_escape(s)
     {if(!caml_js_regexps.all.test(s))return s;
      return s.replace(caml_js_regexps.amp,"&amp;").replace
               (caml_js_regexps.lt,"&lt;").replace
              (caml_js_regexps.quot,"&quot;")}
    function caml_utf8_of_utf16(s)
     {for(var b=str$7,t=b,c,d,i=0,l=s.length;i<l;i++)
       {c=s.charCodeAt(i);
        if(c<num_128)
         {for(var j=i+1;j<l&&(c=s.charCodeAt(j))<num_128;j++);
          if(j-i>num_512)
           {t.substr(0,1);b+=t;t=str$7;b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        if(c<num_2048)
         {t+=String.fromCharCode(192|c>>6);
          t+=String.fromCharCode(num_128|c&63)}
        else
         if(c<55296||c>=num_57343)
          t+=String.fromCharCode(num_224|c>>12,num_128|c>>6&63,num_128|c&63);
         else
          if(c>=56319||i+1==l||(d=s.charCodeAt(i+1))<num_56320||d>num_57343)
           t+="\xef\xbf\xbd";
          else
           {i++;
            c=(c<<10)+d-56613888;
            t+=
            String.fromCharCode
             (num_240|c>>18,num_128|c>>12&63,num_128|c>>6&63,num_128|c&63)}
        if(t.length>num_1024){t.substr(0,1);b+=t;t=str$7}}
      return b+t}
    function caml_js_to_string(s)
     {var tag=9;
      if(!caml_is_ascii(s))tag=8,s=caml_utf8_of_utf16(s);
      return new MlString(tag,s,s.length)}
    function raw_array_copy(a)
     {var l=a.length,b=new Array(l);for(var i=0;i<l;i++)b[i]=a[i];return b}
    function caml_js_wrap_callback(f)
     {return function()
       {return arguments.length>0
                ?caml_call_gen(f,raw_array_copy(arguments))
                :caml_call_gen(f,[undefined])}}
    function caml_lex_array(s)
     {s=caml_bytes_of_string(s);
      var l=s.length/2,a=new Array(l);
      for(var i=0;i<l;i++)
       a[i]=(s.charCodeAt(2*i)|s.charCodeAt(2*i+1)<<8)<<16>>16;
      return a}
    function caml_array_of_string(s)
     {if(s.t!=4)caml_convert_string_to_array(s);return s.c}
    function caml_lex_engine(tbl,start_state,lexbuf)
     {var
       lex_buffer=2,
       lex_buffer_len=3,
       lex_start_pos=5,
       lex_curr_pos=6,
       lex_last_pos=7,
       lex_last_action=8,
       lex_eof_reached=9,
       lex_base=1,
       lex_backtrk=2,
       lex_default=3,
       lex_trans=4,
       lex_check=5;
      if(!tbl.lex_default)
       {tbl.lex_base=caml_lex_array(tbl[lex_base]);
        tbl.lex_backtrk=caml_lex_array(tbl[lex_backtrk]);
        tbl.lex_check=caml_lex_array(tbl[lex_check]);
        tbl.lex_trans=caml_lex_array(tbl[lex_trans]);
        tbl.lex_default=caml_lex_array(tbl[lex_default])}
      var c,state=start_state,buffer=caml_array_of_string(lexbuf[lex_buffer]);
      if(state>=0)
       {lexbuf[lex_last_pos]=lexbuf[lex_start_pos]=lexbuf[lex_curr_pos];
        lexbuf[lex_last_action]=-1}
      else
       state=-state-1;
      for(;;)
       {var base=tbl.lex_base[state];
        if(base<0)return -base-1;
        var backtrk=tbl.lex_backtrk[state];
        if(backtrk>=0)
         {lexbuf[lex_last_pos]=lexbuf[lex_curr_pos];
          lexbuf[lex_last_action]=backtrk}
        if(lexbuf[lex_curr_pos]>=lexbuf[lex_buffer_len])
         if(lexbuf[lex_eof_reached]==0)return -state-1;else c=num_256;
        else
         {c=buffer[lexbuf[lex_curr_pos]];lexbuf[lex_curr_pos]++}
        state=
        tbl.lex_check[base+c]==state
         ?tbl.lex_trans[base+c]
         :tbl.lex_default[state];
        if(state<0)
         {lexbuf[lex_curr_pos]=lexbuf[lex_last_pos];
          if(lexbuf[lex_last_action]==-1)
           caml_failwith("lexing: empty token");
          else
           return lexbuf[lex_last_action]}
        else
         if(c==num_256)lexbuf[lex_eof_reached]=0}}
    function caml_make_vect(len,init)
     {var len=len+1|0,b=new Array(len);
      b[0]=0;
      for(var i=1;i<len;i++)b[i]=init;
      return b}
    function caml_raise_sys_error(msg)
     {caml_raise_with_string(caml_global_data.Sys_error,msg)}
    function caml_ml_flush(oc)
     {if(!oc.opened)caml_raise_sys_error("Cannot flush a closed channel");
      if(oc.buffer==str$7)return 0;
      if(oc.output)
       switch(oc.output.length)
        {case 2:oc.output(oc,oc.buffer);break;default:oc.output(oc.buffer)}
      oc.buffer=str$7;
      return 0}
    var file_inode=0;
    function unix_gettimeofday(){return new Date().getTime()/num_1e3}
    function unix_time(){return Math.floor(unix_gettimeofday())}
    function MlFile(content)
     {this.data=content;
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlFile.prototype=
    {truncate:function(){this.data=caml_create_string(0);this.modified()},
     modified:function(){var now=unix_time();this.atime=now;this.mtime=now}};
    function caml_ml_string_length(s){return s.l}
    function caml_raise_no_such_file(name)
     {name=name instanceof MlString?name.toString():name;
      caml_raise_sys_error(name+": No such file or directory")}
    var caml_current_dir=str$3;
    function caml_make_path(name)
     {name=name instanceof MlString?name.toString():name;
      if(name.charCodeAt(0)!=47)name=caml_current_dir+name;
      var comp=name.split(str$3),ncomp=[];
      for(var i=0;i<comp.length;i++)
       switch(comp[i])
        {case "..":if(ncomp.length>1)ncomp.pop();break;
         case ".":break;
         case "":if(ncomp.length==0)ncomp.push(str$7);break;
         default:ncomp.push(comp[i]);break}
      ncomp.orig=name;
      return ncomp}
    function MlDir()
     {this.content={};
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlDir.prototype=
    {exists:function(name){return this.content[name]?1:0},
     mk:function(name,c){this.content[name]=c},
     get:function(name){return this.content[name]},
     list:function(){var a=[];for(var n in this.content)a.push(n);return a},
     remove:function(name){delete this.content[name]}};
    var caml_root_dir=new MlDir();
    caml_root_dir.mk(str$7,new MlDir());
    function caml_fs_content(path)
     {var dir=caml_root_dir;
      for(var i=0;i<path.length;i++)
       {if(!(dir.exists&&dir.exists(path[i])))
         caml_raise_no_such_file(path.orig);
        dir=dir.get(path[i])}
      return dir}
    function caml_sys_is_directory(name)
     {var path=caml_make_path(name),dir=caml_fs_content(path);
      return dir instanceof MlDir?1:0}
    function caml_string_of_array(a){return new MlString(4,a,a.length)}
    function caml_fs_register(name,content)
     {var path=caml_make_path(name),dir=caml_root_dir;
      for(var i=0;i<path.length-1;i++)
       {var d=path[i];
        if(!dir.exists(d))dir.mk(d,new MlDir());
        dir=dir.get(d);
        if(!(dir instanceof MlDir))
         caml_raise_sys_error(path.orig+str_file_already_abr)}
      var d=path[path.length-1];
      if(dir.exists(d))caml_raise_sys_error(path.orig+str_file_already_abr);
      if(content instanceof MlDir)
       dir.mk(d,content);
      else
       if(content instanceof MlFile)
        dir.mk(d,content);
       else
        if(content instanceof MlString)
         dir.mk(d,new MlFile(content));
        else
         if(content instanceof Array)
          dir.mk(d,new MlFile(caml_string_of_array(content)));
         else
          if(content.toString)
           dir.mk(d,new MlFile(caml_new_string(content.toString())));
          else
           caml_invalid_argument("caml_fs_register");
      return 0}
    function caml_sys_file_exists(name)
     {var dir=caml_root_dir,path=caml_make_path(name),auto_load,pos;
      for(var i=0;i<path.length;i++)
       {if(dir.auto){auto_load=dir.auto;pos=i}
        if(!(dir.exists&&dir.exists(path[i])))
         return auto_load?auto_load(path,pos):0;
        dir=dir.get(path[i])}
      return 1}
    function caml_sys_open_internal(idx,file,flags)
     {if(caml_global_data.fds===undefined)caml_global_data.fds=new Array();
      flags=flags?flags:{};
      var info={};
      info.file=file;
      info.offset=flags.append?caml_ml_string_length(file.data):0;
      info.flags=flags;
      caml_global_data.fds[idx]=info;
      caml_global_data.fd_last_idx=idx;
      return idx}
    function caml_sys_open(name,flags,_perms)
     {var f={};
      while(flags)
       {switch(flags[1])
         {case 0:f.rdonly=1;break;
          case 1:f.wronly=1;break;
          case 2:f.append=1;break;
          case 3:f.create=1;break;
          case 4:f.truncate=1;break;
          case 5:f.excl=1;break;
          case 6:f.binary=1;break;
          case 7:f.text=1;break;
          case 8:f.nonblock=1;break
          }
        flags=flags[2]}
      var name2=name.toString(),path=caml_make_path(name);
      if(f.rdonly&&f.wronly)
       caml_raise_sys_error
        (name2+" : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text&&f.binary)
       caml_raise_sys_error
        (name2+" : flags Open_text and Open_binary are not compatible");
      if(caml_sys_file_exists(name))
       {if(caml_sys_is_directory(name))
         caml_raise_sys_error(name2+" : is a directory");
        if(f.create&&f.excl)caml_raise_sys_error(name2+str_file_already_abr);
        var
         idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0,
         file=caml_fs_content(path);
        if(f.truncate)file.truncate();
        return caml_sys_open_internal(idx+1,file,f)}
      else
       if(f.create)
        {var idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;
         caml_fs_register(name,caml_create_string(0));
         var file=caml_fs_content(path);
         return caml_sys_open_internal(idx+1,file,f)}
       else
        caml_raise_no_such_file(name)}
    caml_sys_open_internal(0,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(1,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(2,new MlFile(caml_create_string(0)));
    function caml_ml_open_descriptor_in(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.wronly)caml_raise_sys_error(str_fd+fd+" is writeonly");
      return {file:data.file,offset:data.offset,fd:fd,opened:true,refill:null}}
    function js_print_stderr(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stderr.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.error&&v.error(s)}}
    function js_print_stdout(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stdout.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.log&&v.log(s)}}
    var caml_ml_out_channels=new Array();
    function caml_std_output(chan,s)
     {var
       str=caml_new_string(s),
       slen=caml_ml_string_length(str),
       clen=caml_ml_string_length(chan.file.data),
       offset=chan.offset;
      if(offset+slen>=clen)
       {var new_str=caml_create_string(offset+slen);
        caml_blit_string(chan.file.data,0,new_str,0,clen);
        caml_blit_string(str,0,new_str,offset,slen);
        chan.file.data=new_str}
      chan.offset+=slen;
      chan.file.modified();
      return 0}
    function caml_ml_open_descriptor_out(fd)
     {var output;
      switch(fd)
       {case 1:output=js_print_stdout;break;
        case 2:output=js_print_stderr;break;
        default:output=caml_std_output}
      var data=caml_global_data.fds[fd];
      if(data.flags.rdonly)caml_raise_sys_error(str_fd+fd+" is readonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         buffer:str$7,
         output:output};
      caml_ml_out_channels[channel.fd]=channel;
      return channel}
    function caml_ml_out_channels_list()
     {var l=0;
      for(var c in caml_ml_out_channels)
       if(caml_ml_out_channels[c].opened)l=[0,caml_ml_out_channels[c],l];
      return l}
    function caml_ml_output(oc,buffer,offset,len)
     {if(!oc.opened)caml_raise_sys_error("Cannot output to a closed channel");
      var string;
      if(offset==0&&caml_ml_string_length(buffer)==len)
       string=buffer;
      else
       {string=caml_create_string(len);
        caml_blit_string(buffer,offset,string,0,len)}
      var jsstring=string.toString(),id=jsstring.lastIndexOf("\n");
      if(id<0)
       oc.buffer+=jsstring;
      else
       {oc.buffer+=jsstring.substr(0,id+1);
        caml_ml_flush(oc);
        oc.buffer+=jsstring.substr(id+1)}
      return 0}
    function caml_ml_output_char(oc,c)
     {var s=caml_new_string(String.fromCharCode(c));
      caml_ml_output(oc,s,0,1);
      return 0}
    if(!Math.imul)
     Math.imul=function(x,y){y|=0;return ((x>>16)*y<<16)+(x&num_65535)*y|0};
    var caml_mul=Math.imul;
    function caml_notequal(x,y){return +(caml_compare_val(x,y,false)!=0)}
    function caml_obj_is_block(x){return +(x instanceof Array)}
    function caml_obj_tag(x)
     {return x instanceof Array?x[0]:x instanceof MlString?num_252:num_1e3}
    function caml_register_global(n,v,name_opt)
     {caml_global_data[n+1]=v;if(name_opt)caml_global_data[name_opt]=v}
    var caml_named_values={};
    function caml_register_named_value(nm,v)
     {caml_named_values[caml_bytes_of_string(nm)]=v;return 0}
    var caml_oo_last_id=0;
    function caml_set_oo_id(b){b[2]=caml_oo_last_id++;return b}
    function caml_string_bound_error()
     {caml_invalid_argument(str_index_out_of_bounds)}
    function caml_string_unsafe_get(s,i)
     {switch(s.t&6)
       {default:if(i>=s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function caml_string_get(s,i)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_get(s,i)}
    function caml_string_equal(s1,s2)
     {s1.t&6&&caml_convert_string_to_bytes(s1);
      s2.t&6&&caml_convert_string_to_bytes(s2);
      return s1.c==s2.c?1:0}
    function caml_string_notequal(s1,s2){return 1-caml_string_equal(s1,s2)}
    function caml_string_unsafe_set(s,i,c)
     {c&=num_255;
      if(s.t!=4)
       {if(i==s.c.length)
         {s.c+=String.fromCharCode(c);if(i+1==s.l)s.t=0;return 0}
        caml_convert_string_to_array(s)}
      s.c[i]=c;
      return 0}
    function caml_string_set(s,i,c)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_set(s,i,c)}
    function caml_sys_const_word_size(){return 32}
    function caml_sys_exit(code)
     {var g=joo_global_object;
      if(g.quit)g.quit(code);
      if(g.process&&g.process.exit)g.process.exit(code);
      caml_invalid_argument("Function 'exit' not implemented")}
    function caml_trampoline(res)
     {var c=1;
      while(res&&res.joo_tramp)
       {res=res.joo_tramp.apply(null,res.joo_args);c++}
      return res}
    function caml_trampoline_return(f,args)
     {return {joo_tramp:f,joo_args:args}}
    function caml_update_dummy(x,y)
     {if(typeof y===str_function){x.fun=y;return 0}
      if(y.fun){x.fun=y.fun;return 0}
      var i=y.length;
      while(i--)x[i]=y[i];
      return 0}
    function caml_return_exn_constant(tag){return tag}
    function caml_named_value(nm){return caml_named_values[nm]}
    function caml_wrap_exception(e)
     {if(e instanceof Array)return e;
      if
       (joo_global_object.RangeError&&
        e instanceof joo_global_object.RangeError&&
        e.message&&
        e.message.match(/maximum call stack/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if
       (joo_global_object.InternalError&&
        e instanceof joo_global_object.InternalError&&
        e.message&&
        e.message.match(/too much recursion/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if(e instanceof joo_global_object.Error)
       return [0,caml_named_value(str_jsError),e];
      return [0,caml_global_data.Failure,caml_js_to_string(String(e))]}
    function caml_call_gen1(fun,var0)
     {return fun.length==1?fun(var0):caml_call_gen(fun,[var0])}
    function caml_call_gen2(fun,var0,var1)
     {return fun.length==2?fun(var0,var1):caml_call_gen(fun,[var0,var1])}
    function caml_call_gen5(fun,var0,var1,var2,var3,var4)
     {return fun.length==5
              ?fun(var0,var1,var2,var3,var4)
              :caml_call_gen(fun,[var0,var1,var2,var3,var4])}
    var
     _b9_=[num_248,caml_new_string(str_Out_of_memory),-1],
     _e_=[num_248,caml_new_string(str_Failure),-3],
     _d_=[num_248,caml_new_string(str_Invalid_argument),-4],
     _s_=[num_248,caml_new_string(str_Not_found),-7],
     _cb_=[num_248,caml_new_string(str_Match_failure),-8],
     _b$_=[num_248,caml_new_string(str_Stack_overflow),-9],
     _o_=[num_248,caml_new_string(str_Assert_failure),-11],
     _ce_=[num_248,caml_new_string(str_Undefined_recurs_abr),num_12],
     _P_=[0,caml_new_string(str$7),1,0,0],
     locfmt=
      [0,
       [11,
        caml_new_string('File "'),
        [2,
         0,
         [11,
          caml_new_string(str_line),
          [4,
           0,
           0,
           0,
           [11,
            caml_new_string(str_characters),
            [4,0,0,0,[12,45,[4,0,0,0,[11,caml_new_string(": "),[2,0,0]]]]]]]]]],
       caml_new_string('File "%s", line %d, characters %d-%d: %s')],
     _c5_=
      [0,
       caml_new_string
        ("\0\0\x01\0\x02\0\x01\0\x01\0\x01\0\x02\0\x05\0\x01\0\xff\xff\x03\0\x04\0\x06\0\x07\0\xfe\xff\x03\0\x04\0\x06\0\xfb\xff\x02\0\x03\0\x07\0\xfa\xff\b\0\xf8\xff\x0b\0\xee\xff/\0\x14\0.\0F\0U\0l\0\x9b\0\xc1\0\xd0\0\b\x01\x19\x01M\x01Q\x01\f\0\xff\xff\xfe\xff\xfd\xff\xfc\xff\r\0\x94\x01@\0B\0J\0\xf9\xffx\0\xfb\xff\x98\x01\xcc\x01\xdb\x01\x01\x025\x02E\x02y\x02\x9f\x02\xae\x02\x1f\0\xe3\x02\xf5\x02\x19\x03*\x03`\0\xfa\xff\xf8\xffY\x03_\x03\x8e\x03\xd7\x03\x0e\x04:\x04d\x04i\x04\x80\x04\xf6\xffj\0a\0\xd7\0\x87\0\xab\0\xf5\xff\xb6\0\xd2\0\x0b\0\xf3\xff\xf0\xff\xf2\xff\x0f\0\x8f\0p\x01\x10\0\xfd\xff\xdf\0\xfe\xffe\x01\x8f\x01{\x01\x89\x01\xe4\0\xff\xff\x11\0\x9a\x01\x04\x01\x12\0"),
       caml_new_string
        ("\b\0\x06\0\xff\xff\xff\xff\x03\0\x02\0\x01\0\xff\xff\0\0\xff\xff\x01\0\x01\0\x01\0\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x04\0\xff\xff\xff\xff\xff\xff\x05\0\xff\xff\xff\xff\xff\xff\x10\0\x0e\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\x10\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\x10\0\xff\xff\x10\0\x10\0\x10\0\x05\0\xff\xff\xff\xff\xff\xff\x10\0\x10\0\x10\0\x10\0\b\0\b\0\xff\xff\x10\0\x10\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0b\0\x0b\0\xff\xff\xff\xff\xff\xff\r\0\xff\xff\xff\xff\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\x01\0"),
       caml_new_string
        ("\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\x1b\0\0\0\x1b\0\xff\xffY\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\x1b\x000\x000\x000\0\0\x000\0\0\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0?\0>\0?\0?\0?\0\x1b\0>\0\0\0\0\0\x1b\0\x1b\0\x1b\0K\0J\0K\0J\0\x1b\0\x1b\0\0\0R\0Q\0R\0S\0S\0\0\0Q\0Q\0\xff\xff\0\0\0\0\0\0\xff\xff\xff\xffa\0\xff\xff\0\0a\0\0\0a\0a\0a\0a\0a\0\0\0\xff\xffa\0a\0\xff\xff"),
       caml_new_string
        ("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\t\0\t\0\x12\0\b\0\x07\0\x11\0\x12\0\x16\0\x16\0\x13\0\x17\0)\0)\0,\0(\0[\0`\0h\0b\0]\0[\0\0\0\x07\0\\\0\0\0\x04\0\x04\0\x07\0\x11\0\0\0\x04\0\xff\xff\x05\0\x05\0\xff\xff\x03\0\x0f\0\x05\0\x10\0\x11\0\x03\0\0\0]\0'\0\0\0\xff\xff\xff\xff\xff\xff&\0\xff\xff\xff\xff\x06\0\x18\0\n\0\x0b\0\f\0\x06\0\r\0\x0e\0\0\0\0\0#\0%\0\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffZ\0\0\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0C\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\0\0\0\0$\0\x1f\0\"\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff \0\0\0!\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\x02\0\x01\0\x14\0\x15\0\xff\xff\x02\0\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\x1e\0\x1c\0X\0\x1d\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff]\0[\0\0\0\xff\xff\\\x001\0D\x003\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff]\0\xff\xffO\0\xff\xff\0\0\0\0\xff\xff\0\0\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\xff\xff2\0\0\0\xff\xffP\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff4\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xffV\0\xff\xffM\0\xff\xff\0\0\0\0\xff\xffQ\0\xff\xff\xff\xff\xff\xff`\0\xff\xff\xff\xff_\0\0\0h\0\0\0\xff\xffi\0\0\0\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xffT\0\0\0\x12\0\x16\0\0\0\0\0\0\0\x1a\x005\0\xff\xffb\0F\0\0\0l\0\xff\xff\0\0[\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\xff\xffE\0\xff\xff\0\0\0\0.\0,\0\0\0\0\0-\0\xff\xffU\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\xff\xffW\0\0\0\0\0\xff\xff\xff\xff\xff\xff.\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xffX\0\0\0\0\0\0\0S\0\0\0\xff\xff%\0\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\xff\xff\0\0/\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff`\0\xff\xff\0\0_\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffd\0`\0*\0+\0_\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff`\0\xff\xff\xff\xff_\0\0\0\xff\xff\0\0\0\0\0\0\xff\xff[\0d\0\0\0\0\0`\0\xff\xff\xff\xff_\0\xff\xffd\0`\0\0\0\xff\xff_\0.\0,\0\0\0\0\0-\0\xff\xff\0\0`\0\xff\xff\0\0_\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffd\0\0\0\0\0\0\0\xff\xff.\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0`\0\0\0\0\0j\0\0\0h\0\xff\xff\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0c\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0f\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0b\0\xff\xffg\0\0\0\xff\xff\xff\xff\xff\xff\xff\xffe\0\0\0\xff\xff\xff\xff\xff\xff6\0\xff\xff\xff\xff\xff\xff\0\0\xff\xffk\0\xff\xff,\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\0\x007\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff8\0\xff\xff\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xff\xff`\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xffb\0\0\0\xff\xff\0\0\xff\xff9\0\0\0\0\0\0\0\0\0\0\0`\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\0\0`\0\0\0\0\0\0\0\0\0\0\0`\0\xff\xff\xff\xff\xff\xff\0\0,\0\0\0\0\0\0\0\xff\xff\0\0`\0\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0;\0\xff\xff\xff\xff:\0\xff\xff\xff\xff\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\0\0\0\0\0\0=\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0>\0\0\0\0\0\xff\xff\xff\xff>\0<\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0@\0\xff\xff\0\0\0\0\xff\xff\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\xff\xff\0\0>\0>\0>\0\0\0>\0\0\0\0\0\0\0\0\0>\0\0\0>\0\0\0>\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0>\0>\0A\0\0\0\xff\xff>\0\0\0\xff\xff\0\0\0\0>\0>\0\0\0>\0\0\0\0\0\0\0\0\0\0\0>\0\x1b\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0>\0>\0>\0\0\0\0\0>\0\0\0\xff\xff\0\0\0\0>\0>\0\0\0>\0\0\0\0\0\0\0\0\0>\0>\0>\0\0\0\xff\xff\0\0>\0B\0\0\0\xff\xff\0\0>\0\0\0>\0>\0>\0\0\0>\0\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\0\0\0\0\0\0>\0>\0\0\0>\0>\0>\0>\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0>\0\0\0>\0\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\0\0>\0>\0\xff\xff>\0\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\xff\xff\0\0\xff\xffI\0\0\0\0\0\xff\xff\0\0G\0\0\0H\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\x1b\0\xff\xff\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\x1b\0I\0I\0\0\0\0\0\0\0\0\0I\0\0\0\0\0J\0\0\0I\0\0\0I\0J\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0I\0I\0\0\0J\0\0\0I\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\xff\xffL\0L\0\0\0J\0J\0J\0L\0\0\0\0\0\0\0\0\0L\0\0\0L\0J\0\0\0J\0\0\0\0\0\0\0\x1b\0\xff\xff\0\0\0\0\xff\xffL\0L\0\0\0\0\0\0\0L\0\0\0\0\0\0\0\0\0J\0J\0\0\0J\0\0\0\0\0\0\0\xff\xff\x1b\0I\0I\0\0\0\0\0\xff\xff\0\0I\0\0\0\0\0J\0\0\0I\0\0\0I\0J\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\xff\xff\0\0\xff\xffI\0I\0\xff\xffJ\0\0\0I\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xffL\0L\0\0\0\0\0\0\0\xff\xffL\0\0\0\xff\xff\xff\xff\0\0L\0\0\0L\0\xff\xff\0\0J\0J\0J\0\xff\xff\0\0\0\0\0\0\0\0\0\0L\0L\0J\0\0\0J\0L\0\0\0\0\0\xff\xff\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0J\0J\0\0\0J\0\0\0I\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0N\0\0\0\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff"),
       caml_new_string
        ("\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\b\0\x13\0\0\0\x07\0\x11\0\x11\0\x15\0\x17\0\x11\0\x15\0\x19\0(\0-\0\x19\0\\\0_\0i\0l\0\x1c\0\x1c\0\xff\xff\0\0\x1c\0\xff\xff\0\0\x04\0\x07\0\x11\0\xff\xff\x07\0>\0\0\0\x05\0>\0\0\0\x03\0\x07\0\x0f\0\x10\0\x07\0\xff\xff\x1c\0\x19\0\xff\xff\x1d\0\x1d\0\x1b\0\x19\0\x1d\0\x1b\0\0\0\x01\0\x06\0\n\0\x0b\0\x07\0\f\0\r\0\xff\xff\xff\xff\x19\0\x19\0\xff\xff/\0\xff\xff0\0/\0\x1d\x000\0\x1e\0\x1c\0\xff\xff\x1e\x001\0\xff\xff\xff\xff1\0\xff\xff\x1b\0\xff\xff\xff\xff\xff\xff>\0\x1b\0\x1f\0\xff\xff\xff\xff\x1f\0\xff\xff\xff\xff\xff\xff\x19\0\x19\0\x19\0\xff\xffC\0Q\0\x1b\0C\0Q\0\xff\xff\x1e\0\x19\0\xff\xff\x19\0P\0\x1e\0 \0P\0\xff\xff \0\xff\xff\0\0\0\0\x02\0\x14\0\x1f\0\x07\0\x07\x003\0\x1e\0\x1f\x003\0\x19\0\x19\0X\0\x19\0\x1b\0\x1b\0\x1b\0\xff\xff\xff\xff\xff\xff\xff\xffS\0\x1f\0\xff\xffS\0\x1b\0 \0\x1b\0]\0]\0\xff\xff \0]\0/\0C\x000\0\xff\xff\x1e\0\x1e\0\x1e\0\xff\xff!\0\xff\xff1\0!\0 \0\x1b\0\x1b\0\x1e\0\x1b\0\x1e\0]\0\x1f\0\x1f\0\x1f\0\xff\xff\xff\xffT\0\xff\xff\xff\xffT\0\xff\xff\xff\xff\x1f\0/\0\x1f\x000\0\xff\xffV\0\x1e\0\x1e\0V\0\x1e\0!\x001\0 \0 \0 \0!\0\"\0\xff\xff\xff\xff\"\0\xff\xff\x1f\0\x1f\0 \0\x1f\0 \x003\0\xff\xff\xff\xff!\0\xff\xff#\0\xff\xffW\0#\0Q\0W\0 \0R\0\xff\xff\xff\xffR\0P\0P\0 \0 \0a\0 \0\"\0a\0\xff\xffg\0\xff\xff\"\0g\0\xff\xff\xff\xff3\0\xff\xff!\0!\0!\0\xff\xff#\0\xff\xff\xff\xff\xff\xff\"\0#\0\xff\xff!\0\xff\xff!\0S\0\xff\xff\x11\0\x15\0\xff\xff\xff\xff\xff\xff\x19\0#\0#\0k\0!\0\xff\xffk\0$\0\xff\xff\x1c\0$\0!\0!\0\xff\xff!\0\xff\xff\xff\xff\"\0\"\0\"\0>\0\xff\xff\xff\xff%\0%\0\xff\xff\xff\xff%\0\"\0T\0\"\0\xff\xff#\0#\0#\0\x1d\0\x1b\0\xff\xff\xff\xff$\0V\0\xff\xff\xff\xff#\0$\0#\0%\0\xff\xff\xff\xff\"\0\"\0\xff\xff\"\0/\0\xff\xff0\0%\0\xff\xff$\0\x1e\0\xff\xff%\0\xff\xff1\0#\0#\0\xff\xff#\0W\0\xff\xff\xff\xff\xff\xffR\0\xff\xff\x1f\0%\0&\0\xff\xff\xff\xff&\0'\0\xff\xff\xff\xff'\0\xff\xffC\0Q\0\xff\xff$\0$\0$\0\xff\xff\xff\xff\xff\xff\xff\xffP\0\xff\xff \0\xff\xff$\0c\0$\0\xff\xffc\0\xff\xff%\0%\0%\0&\x003\0^\0^\0'\0&\0^\0\xff\xff%\0'\0%\0\xff\xff$\0$\0e\0$\0S\0e\0\xff\xff&\0\xff\xff\xff\xff\xff\xff'\0]\0^\0\xff\xff\xff\xfff\0%\0%\0f\0%\0d\0d\0\xff\xff!\0d\0.\0.\0\xff\xff\xff\xff.\x005\0\xff\xffj\x005\0\xff\xffj\0&\0&\0&\0T\0'\0'\0'\0d\0\xff\xff\xff\xff\xff\xff&\0.\0&\0V\0'\0\xff\xff'\0\xff\xff\xff\xff\xff\xff\xff\xff.\0\xff\xff\xff\xff\"\x005\0.\0\xff\xff\xff\xff\xff\xff5\0&\0&\0\xff\xff&\0'\0'\0\xff\xff'\0#\0.\0W\0\xff\xff\xff\xff5\x006\0R\0\xff\xff6\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffa\0\xff\xff\xff\xffc\0\xff\xffg\x007\0\xff\xff\xff\xff7\0\xff\xff\xff\xff\xff\xff\xff\xff^\0\xff\xff.\0.\0.\0\xff\xff5\x005\x005\x006\0\xff\xffe\0\xff\xff.\x006\0.\0\xff\xff5\0\xff\xff5\0\xff\xff\xff\xff\xff\xffk\x007\0f\0\xff\xff$\x006\x007\x008\0d\0\xff\xff8\0.\0.\x005\0.\x005\x005\0\xff\xff5\0j\x007\0%\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff6\x006\x006\0\xff\xff8\0\xff\xff\xff\xff\xff\xff\xff\xff8\0\xff\xff6\0\xff\xff6\0\xff\xff7\x007\x007\0\xff\xff\xff\xff6\0\xff\xff\xff\xff8\x009\0\xff\xff7\x009\x007\0\xff\xff\xff\xff\xff\xff6\x006\0\xff\xff6\0\xff\xff\xff\xff&\0\xff\xff:\x007\0'\0:\0\xff\xff\xff\xff\xff\xff7\x007\0\xff\xff7\0\xff\xff\xff\xff8\x008\x008\x009\0\xff\xff\xff\xff\xff\xff\xff\xff9\0c\0\xff\xff8\0\xff\xff8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff:\0^\0\xff\xff9\0\xff\xff:\x008\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffe\x008\x008\0\xff\xff8\0\xff\xff\xff\xff:\0;\0\xff\xff\xff\xff;\0\xff\xff\xff\xfff\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffd\x009\x009\x009\0\xff\xff.\0\xff\xff\xff\xff\xff\xff5\0\xff\xffj\x009\0\xff\xff9\0\xff\xff\xff\xff:\0:\0:\0;\0\xff\xff\xff\xff\xff\xff:\0;\0<\x009\0:\0<\0:\0\xff\xff\xff\xff9\x009\0\xff\xff9\0\xff\xff\xff\xff;\0\xff\xff=\0\xff\xff\xff\xff=\0\xff\xff\xff\xff\xff\xff<\0:\0:\0\xff\xff:\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff<\0\xff\xff\xff\xff6\0\xff\xff<\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff;\0;\0;\0\xff\xff=\0\xff\xff\xff\xff7\0<\0=\0;\0;\0\xff\xff;\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\0=\0?\0\xff\xff\xff\xff?\0\xff\xff\xff\xff\xff\xff;\0;\0\xff\xff;\0\xff\xff\xff\xff<\0<\0<\0\xff\xff\xff\xff@\0\xff\xff8\0@\0\xff\xff\xff\xff<\0\xff\xff<\0\xff\xff=\0=\0=\0\xff\xff?\0\xff\xff\xff\xff\xff\xff\xff\xff?\0\xff\xff=\0\xff\xff=\0\xff\xff\xff\xff\xff\xff<\0<\0\xff\xff<\0\xff\xff@\0?\0?\0\xff\xffA\0@\0\xff\xffA\0\xff\xff\xff\xff=\0=\0\xff\xff=\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff@\0@\0B\x009\0\xff\xffB\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff?\0?\0?\0\xff\xff\xff\xffA\0\xff\xff:\0\xff\xff\xff\xffA\0?\0\xff\xff?\0\xff\xff\xff\xff\xff\xff\xff\xff@\0@\0@\0\xff\xffB\0\xff\xffA\0A\0\xff\xffB\0\xff\xff@\0\xff\xff@\0?\0?\0\xff\xff?\0\xff\xffF\0\xff\xff\xff\xffF\0B\0\xff\xffG\0\xff\xff\xff\xffG\0\xff\xff\xff\xff\xff\xff@\0@\0\xff\xff@\0A\0A\0A\0\xff\xff\xff\xff;\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffA\0\xff\xffA\0\xff\xffF\0\xff\xffB\0B\0B\0F\0G\0\xff\xff\xff\xff\xff\xff\xff\xffG\0\xff\xffB\0\xff\xffB\0\xff\xffA\0A\0F\0A\0H\0\xff\xff\xff\xffH\0G\0\xff\xff\xff\xff<\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffB\0B\0\xff\xffB\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffF\0F\0F\0\xff\xffH\0\xff\xffG\0G\0G\0H\0\xff\xffF\0\xff\xffF\0\xff\xff\xff\xff\xff\xffG\0\xff\xffG\0H\0\xff\xff\xff\xffH\0\xff\xffF\0\xff\xffG\0\xff\xff\xff\xff\xff\xff\xff\xffF\0F\0\xff\xffF\0\xff\xff\xff\xffG\0G\0\xff\xffG\0\xff\xff\xff\xffI\0I\0\xff\xff?\0I\0\xff\xff\xff\xff\xff\xff\xff\xffH\0H\0H\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffH\0@\0H\0I\0I\0I\0\xff\xff\xff\xff\xff\xff\xff\xffI\0\xff\xff\xff\xffI\0\xff\xffI\0\xff\xffI\0I\0\xff\xff\xff\xffH\0H\0\xff\xffH\0\xff\xff\xff\xff\xff\xff\xff\xffI\0I\0\xff\xffI\0\xff\xffI\0J\0J\0A\0\xff\xffJ\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffB\0\xff\xff\xff\xff\xff\xffJ\0J\0J\0\xff\xffI\0I\0I\0J\0\xff\xff\xff\xff\xff\xff\xff\xffJ\0\xff\xffJ\0I\0\xff\xffI\0\xff\xff\xff\xff\xff\xffK\0K\0\xff\xff\xff\xffK\0J\0J\0\xff\xff\xff\xff\xff\xffJ\0\xff\xff\xff\xff\xff\xff\xff\xffI\0I\0\xff\xffI\0\xff\xff\xff\xff\xff\xffF\0K\0K\0K\0\xff\xff\xff\xffG\0\xff\xffK\0\xff\xff\xff\xffK\0\xff\xffK\0\xff\xffK\0K\0\xff\xff\xff\xff\xff\xffL\0L\0\xff\xff\xff\xffL\0\xff\xffM\0K\0K\0M\0K\0\xff\xffK\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffL\0L\0L\0\xff\xff\xff\xff\xff\xffN\0L\0\xff\xffN\0H\0\xff\xffL\0\xff\xffL\0M\0\xff\xffK\0K\0K\0M\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffL\0L\0K\0\xff\xffK\0L\0\xff\xff\xff\xffM\0\xff\xff\xff\xff\xff\xffN\0\xff\xff\xff\xff\xff\xff\xff\xffN\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffK\0K\0\xff\xffK\0\xff\xffN\0\xff\xff\xff\xffN\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffM\0M\0M\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffM\0\xff\xffM\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffI\0\xff\xffM\0\xff\xffN\0N\0N\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffM\0M\0N\0M\0N\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffN\0N\0\xff\xffN\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffJ\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffK\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffL\0\xff\xff\xff\xff\xff\xff\xff\xffM\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffN\0"),
       caml_new_string(str$7),
       caml_new_string(str$7),
       caml_new_string(str$7),
       caml_new_string(str$7),
       caml_new_string(str$7),
       caml_new_string(str$7)];
    caml_register_global(11,_ce_,str_Undefined_recurs_abr);
    caml_register_global(10,_o_,str_Assert_failure);
    caml_register_global
     (9,
      [num_248,caml_new_string(str_Sys_blocked_io),num_10],
      str_Sys_blocked_io);
    caml_register_global(8,_b$_,str_Stack_overflow);
    caml_register_global(7,_cb_,str_Match_failure);
    caml_register_global(6,_s_,str_Not_found);
    caml_register_global
     (5,
      [num_248,caml_new_string(str_Division_by_zero),-6],
      str_Division_by_zero);
    caml_register_global
     (4,[num_248,caml_new_string(str_End_of_file),-5],str_End_of_file);
    caml_register_global(3,_d_,str_Invalid_argument);
    caml_register_global(2,_e_,str_Failure);
    caml_register_global
     (1,[num_248,caml_new_string(str_Sys_error),-2],str_Sys_error);
    caml_register_global(0,_b9_,str_Out_of_memory);
    var
     _k_=caml_new_string(str_12g),
     _j_=caml_new_string(str$6),
     _h_=caml_new_string("true"),
     _i_=caml_new_string("false"),
     _f_=caml_new_string("Pervasives.Exit"),
     _n_=caml_new_string("Array.Bottom"),
     _v_=caml_new_string("\\b"),
     _w_=caml_new_string("\\t"),
     _x_=caml_new_string("\\n"),
     _y_=caml_new_string("\\r"),
     _u_=caml_new_string("\\\\"),
     _t_=caml_new_string("\\'"),
     _G_=caml_new_string("String.blit / Bytes.blit_string"),
     _E_=caml_new_string("Bytes.blit"),
     _B_=caml_new_string("String.sub / Bytes.sub"),
     _K_=caml_new_string(str$7),
     _N_=caml_new_string("Sys.Break"),
     _R_=caml_new_string("Queue.Empty"),
     _T_=caml_new_string("CamlinternalLazy.Undefined"),
     s=caml_new_string("Buffer.add: cannot grow buffer"),
     _ak_=caml_new_string("%c"),
     _al_=caml_new_string("%s"),
     _am_=caml_new_string(str_i),
     _an_=caml_new_string("%li"),
     _ao_=caml_new_string("%ni"),
     _ap_=caml_new_string("%Li"),
     _aq_=caml_new_string("%f"),
     _ar_=caml_new_string("%B"),
     _as_=caml_new_string("%{"),
     _at_=caml_new_string("%}"),
     _au_=caml_new_string("%("),
     _av_=caml_new_string("%)"),
     _aw_=caml_new_string("%a"),
     _ax_=caml_new_string("%t"),
     _ay_=caml_new_string("%?"),
     _az_=caml_new_string("%r"),
     _aA_=caml_new_string("%_r"),
     _aE_=[0,caml_new_string(str_camlinternalForm_abr),816,23],
     _aP_=[0,caml_new_string(str_camlinternalForm_abr),780,21],
     _aH_=[0,caml_new_string(str_camlinternalForm_abr),781,21],
     _aQ_=[0,caml_new_string(str_camlinternalForm_abr),784,21],
     _aI_=[0,caml_new_string(str_camlinternalForm_abr),785,21],
     _aR_=[0,caml_new_string(str_camlinternalForm_abr),788,19],
     _aJ_=[0,caml_new_string(str_camlinternalForm_abr),789,19],
     _aS_=[0,caml_new_string(str_camlinternalForm_abr),792,22],
     _aK_=[0,caml_new_string(str_camlinternalForm_abr),793,22],
     _aT_=[0,caml_new_string(str_camlinternalForm_abr),797,30],
     _aL_=[0,caml_new_string(str_camlinternalForm_abr),798,30],
     _aN_=[0,caml_new_string(str_camlinternalForm_abr),802,26],
     _aF_=[0,caml_new_string(str_camlinternalForm_abr),803,26],
     _aO_=[0,caml_new_string(str_camlinternalForm_abr),812,28],
     _aG_=[0,caml_new_string(str_camlinternalForm_abr),813,28],
     _aM_=[0,caml_new_string(str_camlinternalForm_abr),817,23],
     _bN_=caml_new_string(str_u),
     _bL_=[0,caml_new_string(str_camlinternalForm_abr),1449,4],
     _bM_=caml_new_string("Printf: bad conversion %["),
     _bO_=[0,caml_new_string(str_camlinternalForm_abr),1517,39],
     _bP_=[0,caml_new_string(str_camlinternalForm_abr),1540,31],
     _bQ_=[0,caml_new_string(str_camlinternalForm_abr),1541,31],
     _bR_=caml_new_string("Printf: bad conversion %_"),
     _bT_=caml_new_string(str$10),
     _bU_=caml_new_string(str$12),
     _bW_=caml_new_string(str$10),
     _bX_=caml_new_string(str$12),
     _bE_=[0,caml_new_string(str$0),[0,caml_new_string(str$0),0]],
     _bC_=caml_new_string(str_nan),
     _bD_=caml_new_string(str$6),
     _bA_=caml_new_string("neg_infinity"),
     _bB_=caml_new_string("infinity"),
     _bu_=caml_new_string(str_12g),
     _bh_=[0,caml_new_string(str$2),[0,caml_new_string(str_d$0),0]],
     _bi_=[0,caml_new_string(str$4),[0,caml_new_string(str_d$0),0]],
     _bj_=[0,caml_new_string(str$8),[0,caml_new_string(str_d$0),0]],
     _bk_=[0,caml_new_string(str$2),[0,caml_new_string(str_i$0),0]],
     _bl_=[0,caml_new_string(str$4),[0,caml_new_string(str_i$0),0]],
     _bm_=[0,caml_new_string(str$8),[0,caml_new_string(str_i$0),0]],
     _bn_=[0,caml_new_string(str$2),[0,caml_new_string(str_x),0]],
     _bo_=[0,caml_new_string(str$11),[0,caml_new_string(str_x),0]],
     _bp_=[0,caml_new_string(str$2),[0,caml_new_string(str_X),0]],
     _bq_=[0,caml_new_string(str$11),[0,caml_new_string(str_X),0]],
     _br_=[0,caml_new_string(str$2),[0,caml_new_string(str_o),0]],
     _bs_=[0,caml_new_string(str$11),[0,caml_new_string(str_o),0]],
     _bt_=[0,caml_new_string(str$2),[0,caml_new_string("u"),0]],
     _a5_=caml_new_string(str_d),
     _a6_=caml_new_string("%+d"),
     _a7_=caml_new_string("% d"),
     _a8_=caml_new_string(str_i),
     _a9_=caml_new_string("%+i"),
     _a__=caml_new_string("% i"),
     _a$_=caml_new_string("%x"),
     _ba_=caml_new_string("%#x"),
     _bb_=caml_new_string("%X"),
     _bc_=caml_new_string("%#X"),
     _bd_=caml_new_string("%o"),
     _be_=caml_new_string("%#o"),
     _bf_=caml_new_string(str_u),
     _a4_=[0,caml_new_string(str$1),[0,caml_new_string(str$1),0]],
     _ab_=caml_new_string("@]"),
     _ac_=caml_new_string("@}"),
     _ad_=caml_new_string("@?"),
     _ae_=caml_new_string("@\n"),
     _af_=caml_new_string("@."),
     _ag_=caml_new_string("@@"),
     _ah_=caml_new_string("@%"),
     _ai_=caml_new_string("@"),
     _aU_=caml_new_string("CamlinternalFormat.Type_mismatch"),
     _b3_=caml_new_string(str$7),
     _b4_=
      [0,[11,caml_new_string(", "),[2,0,[2,0,0]]],caml_new_string(", %s%s")],
     _cm_=[0,[2,0,[12,10,0]],caml_new_string("%s\n")],
     _cn_=
      [0,
       [11,caml_new_string(str_Program_not_lin_abr),0],
       caml_new_string(str_Program_not_lin_abr)],
     _cg_=caml_new_string("Raised at"),
     _ch_=caml_new_string("Re-raised at"),
     _ci_=caml_new_string("Raised by primitive operation at"),
     _cj_=caml_new_string("Called from"),
     _ck_=
      [0,
       [2,
        0,
        [11,
         caml_new_string(' file "'),
         [2,
          0,
          [11,
           caml_new_string(str_line),
           [4,
            0,
            0,
            0,
            [11,caml_new_string(str_characters),[4,0,0,0,[12,45,[4,0,0,0,0]]]]]]]]],
       caml_new_string('%s file "%s", line %d, characters %d-%d')],
     _cl_=
      [0,
       [2,0,[11,caml_new_string(" unknown location"),0]],
       caml_new_string("%s unknown location")],
     _b__=caml_new_string("Out of memory"),
     _ca_=caml_new_string("Stack overflow"),
     _cc_=caml_new_string("Pattern matching failed"),
     _cd_=caml_new_string("Assertion failed"),
     _cf_=caml_new_string("Undefined recursive module"),
     _b5_=[0,[12,40,[2,0,[2,0,[12,41,0]]]],caml_new_string("(%s%s)")],
     _b6_=caml_new_string(str$7),
     _b7_=caml_new_string(str$7),
     _b8_=[0,[12,40,[2,0,[12,41,0]]],caml_new_string("(%s)")],
     _b2_=[0,[4,0,0,0,0],caml_new_string(str_d)],
     _b0_=[0,[3,0,0],caml_new_string("%S")],
     _b1_=caml_new_string("_"),
     _co_=caml_new_string("Lwt_sequence.Empty"),
     _cv_=[0,caml_new_string(str_src_core_lwt_ml),655,20],
     _cw_=[0,caml_new_string(str_src_core_lwt_ml),658,8],
     _cu_=[0,caml_new_string(str_src_core_lwt_ml),498,8],
     _ct_=[0,caml_new_string(str_src_core_lwt_ml),487,9],
     _cs_=caml_new_string("Lwt.wakeup_result"),
     _cr_=caml_new_string("Fatal error: exception "),
     _cq_=caml_new_string("Lwt.Canceled"),
     _cz_=caml_new_string("Js.Error"),
     _cG_=caml_new_string("iframe"),
     _cF_=caml_new_string("img"),
     _cE_=caml_new_string("a"),
     _cD_=caml_new_string(str_br),
     _cC_=caml_new_string("div"),
     _cB_=caml_new_string("textarea"),
     _cH_=caml_new_string("Dom_html.Canvas_not_available"),
     _cK_=caml_new_string("Exception during Lwt.async: "),
     _cZ_=[0,caml_new_string(str_wikicreole_mll),207,32],
     _c0_=[0,caml_new_string(str_wikicreole_mll),216,6],
     _c1_=[0,caml_new_string(str_wikicreole_mll),231,6],
     _c7_=[0,caml_new_string(str_wikicreole_mll),285,6],
     _c8_=caml_new_string("*"),
     _c4_=[5,0],
     _cX_=[0,caml_new_string(str_wikicreole_mll),158,6],
     _cT_=caml_new_string("//"),
     _cS_=caml_new_string("**"),
     _dr_=caml_new_string("http://youtube.com/embed/"),
     _do_=caml_new_string(str$7),
     _dg_=caml_new_string("ul"),
     _de_=caml_new_string("ol"),
     _da_=caml_new_string("th"),
     _db_=caml_new_string("td"),
     _dz_=[0,caml_new_string("main.ml"),33,17],
     _dA_=caml_new_string(str$7);
    function _a_(param)
     {if(typeof param==="number")
       return 0;
      else
       switch(param[0])
        {case 0:return [0,_a_(param[1])];
         case 1:return [1,_a_(param[1])];
         case 2:return [2,_a_(param[1])];
         case 3:return [3,_a_(param[1])];
         case 4:return [4,_a_(param[1])];
         case 5:return [5,_a_(param[1])];
         case 6:return [6,_a_(param[1])];
         case 7:return [7,_a_(param[1])];
         case 8:var ty=param[1];return [8,ty,_a_(param[2])];
         case 9:var ty1=param[1];return [9,ty1,ty1,_a_(param[3])];
         case 10:return [10,_a_(param[1])];
         case 11:return [11,_a_(param[1])];
         case 12:return [12,_a_(param[1])];
         case 13:return [13,_a_(param[1])];
         default:return [14,_a_(param[1])]}}
    function _b_(fmtty1,fmtty2)
     {if(typeof fmtty1==="number")
       return fmtty2;
      else
       switch(fmtty1[0])
        {case 0:return [0,_b_(fmtty1[1],fmtty2)];
         case 1:return [1,_b_(fmtty1[1],fmtty2)];
         case 2:return [2,_b_(fmtty1[1],fmtty2)];
         case 3:return [3,_b_(fmtty1[1],fmtty2)];
         case 4:return [4,_b_(fmtty1[1],fmtty2)];
         case 5:return [5,_b_(fmtty1[1],fmtty2)];
         case 6:return [6,_b_(fmtty1[1],fmtty2)];
         case 7:return [7,_b_(fmtty1[1],fmtty2)];
         case 8:var ty=fmtty1[1];return [8,ty,_b_(fmtty1[2],fmtty2)];
         case 9:
          var ty2=fmtty1[2],ty1=fmtty1[1];
          return [9,ty1,ty2,_b_(fmtty1[3],fmtty2)];
         case 10:return [10,_b_(fmtty1[1],fmtty2)];
         case 11:return [11,_b_(fmtty1[1],fmtty2)];
         case 12:return [12,_b_(fmtty1[1],fmtty2)];
         case 13:return [13,_b_(fmtty1[1],fmtty2)];
         default:return [14,_b_(fmtty1[1],fmtty2)]}}
    function _c_(fmt1,fmt2)
     {if(typeof fmt1==="number")
       return fmt2;
      else
       switch(fmt1[0])
        {case 0:return [0,_c_(fmt1[1],fmt2)];
         case 1:return [1,_c_(fmt1[1],fmt2)];
         case 2:var pad=fmt1[1];return [2,pad,_c_(fmt1[2],fmt2)];
         case 3:var pad$0=fmt1[1];return [3,pad$0,_c_(fmt1[2],fmt2)];
         case 4:
          var prec=fmt1[3],pad$1=fmt1[2],iconv=fmt1[1];
          return [4,iconv,pad$1,prec,_c_(fmt1[4],fmt2)];
         case 5:
          var prec$0=fmt1[3],pad$2=fmt1[2],iconv$0=fmt1[1];
          return [5,iconv$0,pad$2,prec$0,_c_(fmt1[4],fmt2)];
         case 6:
          var prec$1=fmt1[3],pad$3=fmt1[2],iconv$1=fmt1[1];
          return [6,iconv$1,pad$3,prec$1,_c_(fmt1[4],fmt2)];
         case 7:
          var prec$2=fmt1[3],pad$4=fmt1[2],iconv$2=fmt1[1];
          return [7,iconv$2,pad$4,prec$2,_c_(fmt1[4],fmt2)];
         case 8:
          var prec$3=fmt1[3],pad$5=fmt1[2],fconv=fmt1[1];
          return [8,fconv,pad$5,prec$3,_c_(fmt1[4],fmt2)];
         case 9:return [9,_c_(fmt1[1],fmt2)];
         case 10:return [10,_c_(fmt1[1],fmt2)];
         case 11:var str=fmt1[1];return [11,str,_c_(fmt1[2],fmt2)];
         case 12:var chr=fmt1[1];return [12,chr,_c_(fmt1[2],fmt2)];
         case 13:
          var fmtty=fmt1[2],pad$6=fmt1[1];
          return [13,pad$6,fmtty,_c_(fmt1[3],fmt2)];
         case 14:
          var fmtty$0=fmt1[2],pad$7=fmt1[1];
          return [14,pad$7,fmtty$0,_c_(fmt1[3],fmt2)];
         case 15:return [15,_c_(fmt1[1],fmt2)];
         case 16:return [16,_c_(fmt1[1],fmt2)];
         case 17:
          var fmting_lit=fmt1[1];return [17,fmting_lit,_c_(fmt1[2],fmt2)];
         case 18:
          var fmting_gen=fmt1[1];return [18,fmting_gen,_c_(fmt1[2],fmt2)];
         case 19:return [19,_c_(fmt1[1],fmt2)];
         case 20:
          var char_set=fmt1[2],width_opt=fmt1[1];
          return [20,width_opt,char_set,_c_(fmt1[3],fmt2)];
         case 21:var counter=fmt1[1];return [21,counter,_c_(fmt1[2],fmt2)];
         case 22:return [22,_c_(fmt1[1],fmt2)];
         case 23:var ign=fmt1[1];return [23,ign,_c_(fmt1[2],fmt2)];
         default:
          var f=fmt1[2],arity=fmt1[1];return [24,arity,f,_c_(fmt1[3],fmt2)]}}
    function invalid_arg(s){throw [0,_d_,s]}
    caml_set_oo_id([num_248,_f_,0]);
    function max(x,y){return caml_greaterequal(x,y)?x:y}
    function abs(x){return 0<=x?x:-x|0}
    function _g_(s1,s2)
     {var
       l1=caml_ml_string_length(s1),
       l2=caml_ml_string_length(s2),
       s=caml_create_string(l1+l2|0);
      caml_blit_string(s1,0,s,0,l1);
      caml_blit_string(s2,0,s,l1,l2);
      return s}
    function _l_(l1,l2)
     {if(l1){var hd=l1[1];return [0,hd,_l_(l1[2],l2)]}return l2}
    caml_ml_open_descriptor_in(0);
    caml_ml_open_descriptor_out(1);
    var stderr=caml_ml_open_descriptor_out(2);
    function output_string(oc,s)
     {return caml_ml_output(oc,s,0,caml_ml_string_length(s))}
    function prerr_string(s){return output_string(stderr,s)}
    function do_at_exit(param)
     {function iter(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var l=param$0[2],a=param$0[1];
            try {caml_ml_flush(a)}catch(_g3_){}
            var param$0=l;
            continue}
          return 0}}
      return iter(caml_ml_out_channels_list(0))}
    function _m_(f,a)
     {var l=a.length-1;
      if(0===l)return [0];
      var r=caml_make_vect(l,caml_call_gen1(f,a[1])),_g1_=l-1|0,_g0_=1;
      if(!(_g1_<1))
       {var i=_g0_;
        for(;;)
         {r[i+1]=caml_call_gen1(f,a[i+1]);
          var _g2_=i+1|0;
          if(_g1_!==i){var i=_g2_;continue}
          break}}
      return r}
    caml_set_oo_id([num_248,_n_,0]);
    function _p_(l)
     {var l1=l,l2=0;
      for(;;)
       {if(l1){var l2$0=[0,l1[1],l2],l1=l1[2],l2=l2$0;continue}return l2}}
    function _q_(f,param)
     {if(param)
       {var l=param[2],r=caml_call_gen1(f,param[1]);return [0,r,_q_(f,l)]}
      return 0}
    function _r_(f,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2];
          caml_call_gen1(f,param$0[1]);
          var param$0=l;
          continue}
        return 0}}
    function make(n,c)
     {var s=caml_create_string(n);caml_fill_string(s,0,n,c);return s}
    function _z_(s)
     {var len=caml_ml_string_length(s),r=caml_create_string(len);
      caml_blit_string(s,0,r,0,len);
      return r}
    function _A_(s,ofs,len)
     {if(0<=ofs)
       if(0<=len)
        if(!((caml_ml_string_length(s)-len|0)<ofs))
         {var r=caml_create_string(len);
          caml_blit_string(s,ofs,r,0,len);
          return r}
      return invalid_arg(_B_)}
    function _C_(b,ofs,len){return _A_(b,ofs,len)}
    function _D_(s1,ofs1,s2,ofs2,len)
     {if(0<=len)
       if(0<=ofs1)
        if(!((caml_ml_string_length(s1)-len|0)<ofs1))
         if(0<=ofs2)
          if(!((caml_ml_string_length(s2)-len|0)<ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_E_)}
    function _F_(s1,ofs1,s2,ofs2,len)
     {if(0<=len)
       if(0<=ofs1)
        if(!((caml_ml_string_length(s1)-len|0)<ofs1))
         if(0<=ofs2)
          if(!((caml_ml_string_length(s2)-len|0)<ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_G_)}
    function _H_(n,c){return make(n,c)}
    function _I_(s,ofs,len){return _A_(s,ofs,len)}
    function _J_(sep,l)
     {if(l)
       {var hd=l[1],num=[0,0],len=[0,0],tl=l[2];
        _r_
         (function(s)
           {num[1]++;len[1]=len[1]+caml_ml_string_length(s)|0;return 0},
          l);
        var
         r=
          caml_create_string
           (len[1]+caml_mul(caml_ml_string_length(sep),num[1]-1|0)|0);
        caml_blit_string(hd,0,r,0,caml_ml_string_length(hd));
        var pos=[0,caml_ml_string_length(hd)];
        _r_
         (function(s)
           {caml_blit_string(sep,0,r,pos[1],caml_ml_string_length(sep));
            pos[1]=pos[1]+caml_ml_string_length(sep)|0;
            caml_blit_string(s,0,r,pos[1],caml_ml_string_length(s));
            pos[1]=pos[1]+caml_ml_string_length(s)|0;
            return 0},
          tl);
        return r}
      return _K_}
    var
     _L_=caml_sys_const_word_size(0),
     _M_=caml_mul(_L_/8|0,(1<<(_L_+num_10|0))-1|0)-1|0;
    caml_set_oo_id([num_248,_N_,0]);
    function _O_(tbl,state,buf)
     {var result=caml_lex_engine(tbl,state,buf);
      if(0<=result)
       {buf[11]=buf[12];
        var _gZ_=buf[12];
        buf[12]=[0,_gZ_[1],_gZ_[2],_gZ_[3],buf[4]+buf[6]|0]}
      return result}
    function _Q_(lexbuf)
     {return _C_(lexbuf[2],lexbuf[5],lexbuf[6]-lexbuf[5]|0)}
    var _S_=caml_set_oo_id([num_248,_R_,0]);
    caml_set_oo_id([num_248,_T_,0]);
    function _U_(b,more)
     {var new_len=[0,b[3]];
      for(;;)
       {if(new_len[1]<(b[2]+more|0)){new_len[1]=2*new_len[1]|0;continue}
        if(_M_<new_len[1])
         {if(!((b[2]+more|0)<=_M_))throw [0,_e_,s];new_len[1]=_M_}
        var new_buffer=caml_create_string(new_len[1]);
        _D_(b[1],0,new_buffer,0,b[2]);
        b[1]=new_buffer;
        b[3]=new_len[1];
        return 0}}
    function _V_(b,s)
     {var len=caml_ml_string_length(s),new_position=b[2]+len|0;
      if(b[3]<new_position)_U_(b,len);
      _F_(s,0,b[1],b[2],len);
      b[2]=new_position;
      return 0}
    var _W_=6;
    function _X_(init_size){return [0,0,caml_create_string(init_size)]}
    function _Y_(buf,overhead)
     {var
       len=caml_ml_string_length(buf[2]),
       min_len=buf[1]+overhead|0,
       _gX_=len<min_len?1:0;
      if(_gX_)
       {var new_str=caml_create_string(max(len*2|0,min_len));
        _D_(buf[2],0,new_str,0,len);
        buf[2]=new_str;
        var _gY_=0}
      else
       var _gY_=_gX_;
      return _gY_}
    function _Z_(buf,c)
     {_Y_(buf,1);caml_string_set(buf[2],buf[1],c);buf[1]=buf[1]+1|0;return 0}
    function ___(buf,s)
     {var str_len=caml_ml_string_length(s);
      _Y_(buf,str_len);
      _F_(s,0,buf[2],buf[1],str_len);
      buf[1]=buf[1]+str_len|0;
      return 0}
    function _$_(buf){return _C_(buf[2],0,buf[1])}
    function _aa_(formatting_lit)
     {if(typeof formatting_lit==="number")
       switch(formatting_lit)
        {case 0:return _ab_;
         case 1:return _ac_;
         case 2:return _ad_;
         case 3:return _ae_;
         case 4:return _af_;
         case 5:return _ag_;
         default:return _ah_}
      else
       switch(formatting_lit[0])
        {case 0:return formatting_lit[1];
         case 1:return formatting_lit[1];
         default:return _g_(_ai_,_H_(1,formatting_lit[1]))}}
    function _aj_(buf,fmtty)
     {var fmtty$0=fmtty;
      for(;;)
       if(typeof fmtty$0==="number")
        return 0;
       else
        switch(fmtty$0[0])
         {case 0:var rest=fmtty$0[1];___(buf,_ak_);var fmtty$0=rest;continue;
          case 1:
           var rest$0=fmtty$0[1];___(buf,_al_);var fmtty$0=rest$0;continue;
          case 2:
           var rest$1=fmtty$0[1];___(buf,_am_);var fmtty$0=rest$1;continue;
          case 3:
           var rest$2=fmtty$0[1];___(buf,_an_);var fmtty$0=rest$2;continue;
          case 4:
           var rest$3=fmtty$0[1];___(buf,_ao_);var fmtty$0=rest$3;continue;
          case 5:
           var rest$4=fmtty$0[1];___(buf,_ap_);var fmtty$0=rest$4;continue;
          case 6:
           var rest$5=fmtty$0[1];___(buf,_aq_);var fmtty$0=rest$5;continue;
          case 7:
           var rest$6=fmtty$0[1];___(buf,_ar_);var fmtty$0=rest$6;continue;
          case 8:
           var rest$7=fmtty$0[2],sub_fmtty=fmtty$0[1];
           ___(buf,_as_);
           _aj_(buf,sub_fmtty);
           ___(buf,_at_);
           var fmtty$0=rest$7;
           continue;
          case 9:
           var rest$8=fmtty$0[3],sub_fmtty$0=fmtty$0[1];
           ___(buf,_au_);
           _aj_(buf,sub_fmtty$0);
           ___(buf,_av_);
           var fmtty$0=rest$8;
           continue;
          case 10:
           var rest$9=fmtty$0[1];___(buf,_aw_);var fmtty$0=rest$9;continue;
          case 11:
           var rest$10=fmtty$0[1];___(buf,_ax_);var fmtty$0=rest$10;continue;
          case 12:
           var rest$11=fmtty$0[1];___(buf,_ay_);var fmtty$0=rest$11;continue;
          case 13:
           var rest$12=fmtty$0[1];___(buf,_az_);var fmtty$0=rest$12;continue;
          default:
           var rest$13=fmtty$0[1];___(buf,_aA_);var fmtty$0=rest$13;continue}}
    function _aB_(param)
     {if(typeof param==="number")
       return 0;
      else
       switch(param[0])
        {case 0:return [0,_aB_(param[1])];
         case 1:return [1,_aB_(param[1])];
         case 2:return [2,_aB_(param[1])];
         case 3:return [3,_aB_(param[1])];
         case 4:return [4,_aB_(param[1])];
         case 5:return [5,_aB_(param[1])];
         case 6:return [6,_aB_(param[1])];
         case 7:return [7,_aB_(param[1])];
         case 8:var ty=param[1];return [8,ty,_aB_(param[2])];
         case 9:
          var ty2=param[2],ty1=param[1];return [9,ty2,ty1,_aB_(param[3])];
         case 10:return [10,_aB_(param[1])];
         case 11:return [11,_aB_(param[1])];
         case 12:return [12,_aB_(param[1])];
         case 13:return [13,_aB_(param[1])];
         default:return [14,_aB_(param[1])]}}
    function _aC_(param)
     {if(typeof param==="number")
       {var
         _gz_=function(param){return 0},
         _gA_=function(param){return 0},
         _gB_=function(param){return 0};
        return [0,function(param){return 0},_gB_,_gA_,_gz_]}
      else
       switch(param[0])
        {case 0:
          var
           match=_aC_(param[1]),
           de=match[4],
           ed=match[3],
           af=match[2],
           fa=match[1],
           _gC_=function(param){caml_call_gen1(af,0);return 0};
          return [0,function(param){caml_call_gen1(fa,0);return 0},_gC_,ed,de];
         case 1:
          var
           match$0=_aC_(param[1]),
           de$0=match$0[4],
           ed$0=match$0[3],
           af$0=match$0[2],
           fa$0=match$0[1],
           _gD_=function(param){caml_call_gen1(af$0,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$0,0);return 0},
                  _gD_,
                  ed$0,
                  de$0];
         case 2:
          var
           match$1=_aC_(param[1]),
           de$1=match$1[4],
           ed$1=match$1[3],
           af$1=match$1[2],
           fa$1=match$1[1],
           _gE_=function(param){caml_call_gen1(af$1,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$1,0);return 0},
                  _gE_,
                  ed$1,
                  de$1];
         case 3:
          var
           match$2=_aC_(param[1]),
           de$2=match$2[4],
           ed$2=match$2[3],
           af$2=match$2[2],
           fa$2=match$2[1],
           _gF_=function(param){caml_call_gen1(af$2,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$2,0);return 0},
                  _gF_,
                  ed$2,
                  de$2];
         case 4:
          var
           match$3=_aC_(param[1]),
           de$3=match$3[4],
           ed$3=match$3[3],
           af$3=match$3[2],
           fa$3=match$3[1],
           _gG_=function(param){caml_call_gen1(af$3,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$3,0);return 0},
                  _gG_,
                  ed$3,
                  de$3];
         case 5:
          var
           match$4=_aC_(param[1]),
           de$4=match$4[4],
           ed$4=match$4[3],
           af$4=match$4[2],
           fa$4=match$4[1],
           _gH_=function(param){caml_call_gen1(af$4,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$4,0);return 0},
                  _gH_,
                  ed$4,
                  de$4];
         case 6:
          var
           match$5=_aC_(param[1]),
           de$5=match$5[4],
           ed$5=match$5[3],
           af$5=match$5[2],
           fa$5=match$5[1],
           _gI_=function(param){caml_call_gen1(af$5,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$5,0);return 0},
                  _gI_,
                  ed$5,
                  de$5];
         case 7:
          var
           match$6=_aC_(param[1]),
           de$6=match$6[4],
           ed$6=match$6[3],
           af$6=match$6[2],
           fa$6=match$6[1],
           _gJ_=function(param){caml_call_gen1(af$6,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$6,0);return 0},
                  _gJ_,
                  ed$6,
                  de$6];
         case 8:
          var
           match$7=_aC_(param[2]),
           de$7=match$7[4],
           ed$7=match$7[3],
           af$7=match$7[2],
           fa$7=match$7[1],
           _gK_=function(param){caml_call_gen1(af$7,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$7,0);return 0},
                  _gK_,
                  ed$7,
                  de$7];
         case 9:
          var
           ty2=param[2],
           ty1=param[1],
           match$8=_aC_(param[3]),
           de$8=match$8[4],
           ed$8=match$8[3],
           af$8=match$8[2],
           fa$8=match$8[1],
           match$9=_aC_(_aD_(_aB_(ty1),ty2)),
           jd=match$9[4],
           dj=match$9[3],
           ga=match$9[2],
           ag=match$9[1],
           _gL_=
            function(param)
             {caml_call_gen1(jd,0);caml_call_gen1(de$8,0);return 0},
           _gM_=
            function(param)
             {caml_call_gen1(ed$8,0);caml_call_gen1(dj,0);return 0},
           _gN_=
            function(param)
             {caml_call_gen1(ga,0);caml_call_gen1(af$8,0);return 0};
          return [0,
                  function(param)
                   {caml_call_gen1(fa$8,0);caml_call_gen1(ag,0);return 0},
                  _gN_,
                  _gM_,
                  _gL_];
         case 10:
          var
           match$10=_aC_(param[1]),
           de$9=match$10[4],
           ed$9=match$10[3],
           af$9=match$10[2],
           fa$9=match$10[1],
           _gO_=function(param){caml_call_gen1(af$9,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$9,0);return 0},
                  _gO_,
                  ed$9,
                  de$9];
         case 11:
          var
           match$11=_aC_(param[1]),
           de$10=match$11[4],
           ed$10=match$11[3],
           af$10=match$11[2],
           fa$10=match$11[1],
           _gP_=function(param){caml_call_gen1(af$10,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$10,0);return 0},
                  _gP_,
                  ed$10,
                  de$10];
         case 12:
          var
           match$12=_aC_(param[1]),
           de$11=match$12[4],
           ed$11=match$12[3],
           af$11=match$12[2],
           fa$11=match$12[1],
           _gQ_=function(param){caml_call_gen1(af$11,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$11,0);return 0},
                  _gQ_,
                  ed$11,
                  de$11];
         case 13:
          var
           match$13=_aC_(param[1]),
           de$12=match$13[4],
           ed$12=match$13[3],
           af$12=match$13[2],
           fa$12=match$13[1],
           _gR_=function(param){caml_call_gen1(de$12,0);return 0},
           _gS_=function(param){caml_call_gen1(ed$12,0);return 0},
           _gT_=function(param){caml_call_gen1(af$12,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$12,0);return 0},
                  _gT_,
                  _gS_,
                  _gR_];
         default:
          var
           match$14=_aC_(param[1]),
           de$13=match$14[4],
           ed$13=match$14[3],
           af$13=match$14[2],
           fa$13=match$14[1],
           _gU_=function(param){caml_call_gen1(de$13,0);return 0},
           _gV_=function(param){caml_call_gen1(ed$13,0);return 0},
           _gW_=function(param){caml_call_gen1(af$13,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$13,0);return 0},
                  _gW_,
                  _gV_,
                  _gU_]}}
    function _aD_(ty1,match)
     {if(typeof ty1==="number")
       if(typeof match==="number")
        return 0;
       else
        switch(match[0])
         {case 10:var switch$0=0;break;
          case 11:var switch$0=1;break;
          case 12:var switch$0=2;break;
          case 13:var switch$0=3;break;
          case 14:var switch$0=4;break;
          case 8:var switch$0=5;break;
          case 9:var switch$0=6;break;
          default:throw [0,_o_,_aE_]}
      else
       switch(ty1[0])
        {case 0:
          var _gg_=ty1[1];
          if(typeof match==="number")
           var switch$1=1;
          else
           switch(match[0])
            {case 0:return [0,_aD_(_gg_,match[1])];
             case 8:var switch$0=5,switch$1=0;break;
             case 9:var switch$0=6,switch$1=0;break;
             case 10:var switch$0=0,switch$1=0;break;
             case 11:var switch$0=1,switch$1=0;break;
             case 12:var switch$0=2,switch$1=0;break;
             case 13:var switch$0=3,switch$1=0;break;
             case 14:var switch$0=4,switch$1=0;break;
             default:var switch$1=1}
          if(switch$1)var switch$0=7;
          break;
         case 1:
          var _gh_=ty1[1];
          if(typeof match==="number")
           var switch$2=1;
          else
           switch(match[0])
            {case 1:return [1,_aD_(_gh_,match[1])];
             case 8:var switch$0=5,switch$2=0;break;
             case 9:var switch$0=6,switch$2=0;break;
             case 10:var switch$0=0,switch$2=0;break;
             case 11:var switch$0=1,switch$2=0;break;
             case 12:var switch$0=2,switch$2=0;break;
             case 13:var switch$0=3,switch$2=0;break;
             case 14:var switch$0=4,switch$2=0;break;
             default:var switch$2=1}
          if(switch$2)var switch$0=7;
          break;
         case 2:
          var _gi_=ty1[1];
          if(typeof match==="number")
           var switch$3=1;
          else
           switch(match[0])
            {case 2:return [2,_aD_(_gi_,match[1])];
             case 8:var switch$0=5,switch$3=0;break;
             case 9:var switch$0=6,switch$3=0;break;
             case 10:var switch$0=0,switch$3=0;break;
             case 11:var switch$0=1,switch$3=0;break;
             case 12:var switch$0=2,switch$3=0;break;
             case 13:var switch$0=3,switch$3=0;break;
             case 14:var switch$0=4,switch$3=0;break;
             default:var switch$3=1}
          if(switch$3)var switch$0=7;
          break;
         case 3:
          var _gj_=ty1[1];
          if(typeof match==="number")
           var switch$4=1;
          else
           switch(match[0])
            {case 3:return [3,_aD_(_gj_,match[1])];
             case 8:var switch$0=5,switch$4=0;break;
             case 9:var switch$0=6,switch$4=0;break;
             case 10:var switch$0=0,switch$4=0;break;
             case 11:var switch$0=1,switch$4=0;break;
             case 12:var switch$0=2,switch$4=0;break;
             case 13:var switch$0=3,switch$4=0;break;
             case 14:var switch$0=4,switch$4=0;break;
             default:var switch$4=1}
          if(switch$4)var switch$0=7;
          break;
         case 4:
          var _gk_=ty1[1];
          if(typeof match==="number")
           var switch$5=1;
          else
           switch(match[0])
            {case 4:return [4,_aD_(_gk_,match[1])];
             case 8:var switch$0=5,switch$5=0;break;
             case 9:var switch$0=6,switch$5=0;break;
             case 10:var switch$0=0,switch$5=0;break;
             case 11:var switch$0=1,switch$5=0;break;
             case 12:var switch$0=2,switch$5=0;break;
             case 13:var switch$0=3,switch$5=0;break;
             case 14:var switch$0=4,switch$5=0;break;
             default:var switch$5=1}
          if(switch$5)var switch$0=7;
          break;
         case 5:
          var _gl_=ty1[1];
          if(typeof match==="number")
           var switch$6=1;
          else
           switch(match[0])
            {case 5:return [5,_aD_(_gl_,match[1])];
             case 8:var switch$0=5,switch$6=0;break;
             case 9:var switch$0=6,switch$6=0;break;
             case 10:var switch$0=0,switch$6=0;break;
             case 11:var switch$0=1,switch$6=0;break;
             case 12:var switch$0=2,switch$6=0;break;
             case 13:var switch$0=3,switch$6=0;break;
             case 14:var switch$0=4,switch$6=0;break;
             default:var switch$6=1}
          if(switch$6)var switch$0=7;
          break;
         case 6:
          var _gm_=ty1[1];
          if(typeof match==="number")
           var switch$7=1;
          else
           switch(match[0])
            {case 6:return [6,_aD_(_gm_,match[1])];
             case 8:var switch$0=5,switch$7=0;break;
             case 9:var switch$0=6,switch$7=0;break;
             case 10:var switch$0=0,switch$7=0;break;
             case 11:var switch$0=1,switch$7=0;break;
             case 12:var switch$0=2,switch$7=0;break;
             case 13:var switch$0=3,switch$7=0;break;
             case 14:var switch$0=4,switch$7=0;break;
             default:var switch$7=1}
          if(switch$7)var switch$0=7;
          break;
         case 7:
          var _gn_=ty1[1];
          if(typeof match==="number")
           var switch$8=1;
          else
           switch(match[0])
            {case 7:return [7,_aD_(_gn_,match[1])];
             case 8:var switch$0=5,switch$8=0;break;
             case 9:var switch$0=6,switch$8=0;break;
             case 10:var switch$0=0,switch$8=0;break;
             case 11:var switch$0=1,switch$8=0;break;
             case 12:var switch$0=2,switch$8=0;break;
             case 13:var switch$0=3,switch$8=0;break;
             case 14:var switch$0=4,switch$8=0;break;
             default:var switch$8=1}
          if(switch$8)var switch$0=7;
          break;
         case 8:
          var _go_=ty1[2],_gp_=ty1[1];
          if(typeof match==="number")
           var switch$9=1;
          else
           switch(match[0])
            {case 8:
              var ty2=match[1],_gq_=_aD_(_go_,match[2]);
              return [8,_aD_(_gp_,ty2),_gq_];
             case 10:var switch$0=0,switch$9=0;break;
             case 11:var switch$0=1,switch$9=0;break;
             case 12:var switch$0=2,switch$9=0;break;
             case 13:var switch$0=3,switch$9=0;break;
             case 14:var switch$0=4,switch$9=0;break;
             default:var switch$9=1}
          if(switch$9)throw [0,_o_,_aN_];
          break;
         case 9:
          var _gr_=ty1[3],_gs_=ty1[2],_gt_=ty1[1];
          if(typeof match==="number")
           var switch$10=1;
          else
           switch(match[0])
            {case 8:var switch$0=5,switch$10=0;break;
             case 9:
              var
               rest2=match[3],
               ty22=match[2],
               ty21=match[1],
               match$0=_aC_(_aD_(_aB_(_gs_),ty21)),
               f4=match$0[4];
              caml_call_gen1(match$0[2],0);
              caml_call_gen1(f4,0);
              return [9,_gt_,ty22,_aD_(_gr_,rest2)];
             case 10:var switch$0=0,switch$10=0;break;
             case 11:var switch$0=1,switch$10=0;break;
             case 12:var switch$0=2,switch$10=0;break;
             case 13:var switch$0=3,switch$10=0;break;
             case 14:var switch$0=4,switch$10=0;break;
             default:var switch$10=1}
          if(switch$10)throw [0,_o_,_aO_];
          break;
         case 10:
          var _gu_=ty1[1];
          if(typeof match!=="number"&&10===match[0])
           return [10,_aD_(_gu_,match[1])];
          throw [0,_o_,_aP_];
         case 11:
          var _gv_=ty1[1];
          if(typeof match==="number")
           var switch$11=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$11=0;break;
             case 11:return [11,_aD_(_gv_,match[1])];
             default:var switch$11=1}
          if(switch$11)throw [0,_o_,_aQ_];
          break;
         case 12:
          var _gw_=ty1[1];
          if(typeof match==="number")
           var switch$12=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$12=0;break;
             case 11:var switch$0=1,switch$12=0;break;
             case 12:return [12,_aD_(_gw_,match[1])];
             default:var switch$12=1}
          if(switch$12)throw [0,_o_,_aR_];
          break;
         case 13:
          var _gx_=ty1[1];
          if(typeof match==="number")
           var switch$13=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$13=0;break;
             case 11:var switch$0=1,switch$13=0;break;
             case 12:var switch$0=2,switch$13=0;break;
             case 13:return [13,_aD_(_gx_,match[1])];
             default:var switch$13=1}
          if(switch$13)throw [0,_o_,_aS_];
          break;
         default:
          var _gy_=ty1[1];
          if(typeof match==="number")
           var switch$14=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$14=0;break;
             case 11:var switch$0=1,switch$14=0;break;
             case 12:var switch$0=2,switch$14=0;break;
             case 13:var switch$0=3,switch$14=0;break;
             case 14:return [14,_aD_(_gy_,match[1])];
             default:var switch$14=1}
          if(switch$14)throw [0,_o_,_aT_]}
      switch(switch$0)
       {case 0:throw [0,_o_,_aH_];
        case 1:throw [0,_o_,_aI_];
        case 2:throw [0,_o_,_aJ_];
        case 3:throw [0,_o_,_aK_];
        case 4:throw [0,_o_,_aL_];
        case 5:throw [0,_o_,_aF_];
        case 6:throw [0,_o_,_aG_];
        default:throw [0,_o_,_aM_]}}
    var _aV_=caml_set_oo_id([num_248,_aU_,0]);
    function _aW_(pad,match)
     {if(typeof pad==="number")
       return [0,0,match];
      else
       {if(0===pad[0])return [0,[0,pad[1],pad[2]],match];
        if(typeof match!=="number"&&2===match[0])
         return [0,[1,pad[1]],match[1]];
        throw _aV_}}
    function _aX_(pad,prec,fmtty)
     {var match=_aW_(pad,fmtty);
      if(typeof prec==="number")
       {if(0===prec)return [0,match[1],0,match[2]];
        var _gf_=match[2];
        if(typeof _gf_!=="number"&&2===_gf_[0])return [0,match[1],1,_gf_[1]];
        throw _aV_}
      return [0,match[1],[0,prec[1]],match[2]]}
    function _aY_(fmt,fmtty)
     {if(typeof fmt==="number")
       return [0,0,fmtty];
      else
       switch(fmt[0])
        {case 0:
          if(typeof fmtty!=="number"&&0===fmtty[0])
           {var match=_aY_(fmt[1],fmtty[1]);return [0,[0,match[1]],match[2]]}
          break;
         case 1:
          if(typeof fmtty!=="number"&&0===fmtty[0])
           {var match$0=_aY_(fmt[1],fmtty[1]);
            return [0,[1,match$0[1]],match$0[2]]}
          break;
         case 2:
          var
           fmt_rest=fmt[2],
           _fP_=_aW_(fmt[1],fmtty),
           _fQ_=_fP_[2],
           _fR_=_fP_[1];
          if(typeof _fQ_!=="number"&&1===_fQ_[0])
           {var match$1=_aY_(fmt_rest,_fQ_[1]);
            return [0,[2,_fR_,match$1[1]],match$1[2]]}
          throw _aV_;
         case 3:
          var
           fmt_rest$0=fmt[2],
           _fS_=_aW_(fmt[1],fmtty),
           _fT_=_fS_[2],
           _fU_=_fS_[1];
          if(typeof _fT_!=="number"&&1===_fT_[0])
           {var match$2=_aY_(fmt_rest$0,_fT_[1]);
            return [0,[3,_fU_,match$2[1]],match$2[2]]}
          throw _aV_;
         case 4:
          var
           fmt_rest$1=fmt[4],
           iconv=fmt[1],
           _fV_=_aX_(fmt[2],fmt[3],fmtty),
           _fW_=_fV_[3],
           _fX_=_fV_[2],
           _fY_=_fV_[1];
          if(typeof _fW_!=="number"&&2===_fW_[0])
           {var match$3=_aY_(fmt_rest$1,_fW_[1]);
            return [0,[4,iconv,_fY_,_fX_,match$3[1]],match$3[2]]}
          throw _aV_;
         case 5:
          var
           fmt_rest$2=fmt[4],
           iconv$0=fmt[1],
           _fZ_=_aX_(fmt[2],fmt[3],fmtty),
           _f0_=_fZ_[3],
           _f1_=_fZ_[2],
           _f2_=_fZ_[1];
          if(typeof _f0_!=="number"&&3===_f0_[0])
           {var match$4=_aY_(fmt_rest$2,_f0_[1]);
            return [0,[5,iconv$0,_f2_,_f1_,match$4[1]],match$4[2]]}
          throw _aV_;
         case 6:
          var
           fmt_rest$3=fmt[4],
           iconv$1=fmt[1],
           _f3_=_aX_(fmt[2],fmt[3],fmtty),
           _f4_=_f3_[3],
           _f5_=_f3_[2],
           _f6_=_f3_[1];
          if(typeof _f4_!=="number"&&4===_f4_[0])
           {var match$5=_aY_(fmt_rest$3,_f4_[1]);
            return [0,[6,iconv$1,_f6_,_f5_,match$5[1]],match$5[2]]}
          throw _aV_;
         case 7:
          var
           fmt_rest$4=fmt[4],
           iconv$2=fmt[1],
           _f7_=_aX_(fmt[2],fmt[3],fmtty),
           _f8_=_f7_[3],
           _f9_=_f7_[2],
           _f__=_f7_[1];
          if(typeof _f8_!=="number"&&5===_f8_[0])
           {var match$6=_aY_(fmt_rest$4,_f8_[1]);
            return [0,[7,iconv$2,_f__,_f9_,match$6[1]],match$6[2]]}
          throw _aV_;
         case 8:
          var
           fmt_rest$5=fmt[4],
           fconv=fmt[1],
           _f$_=_aX_(fmt[2],fmt[3],fmtty),
           _ga_=_f$_[3],
           _gb_=_f$_[2],
           _gc_=_f$_[1];
          if(typeof _ga_!=="number"&&6===_ga_[0])
           {var match$7=_aY_(fmt_rest$5,_ga_[1]);
            return [0,[8,fconv,_gc_,_gb_,match$7[1]],match$7[2]]}
          throw _aV_;
         case 9:
          if(typeof fmtty!=="number"&&7===fmtty[0])
           {var match$8=_aY_(fmt[1],fmtty[1]);
            return [0,[9,match$8[1]],match$8[2]]}
          break;
         case 10:
          var match$9=_aY_(fmt[1],fmtty);
          return [0,[10,match$9[1]],match$9[2]];
         case 11:
          var str=fmt[1],match$10=_aY_(fmt[2],fmtty);
          return [0,[11,str,match$10[1]],match$10[2]];
         case 12:
          var chr=fmt[1],match$11=_aY_(fmt[2],fmtty);
          return [0,[12,chr,match$11[1]],match$11[2]];
         case 13:
          if(typeof fmtty!=="number"&&8===fmtty[0])
           {var
             sub_fmtty=fmtty[1],
             fmtty_rest=fmtty[2],
             fmt_rest$6=fmt[3],
             pad_opt=fmt[1];
            if(caml_notequal([0,fmt[2]],[0,sub_fmtty]))throw _aV_;
            var match$12=_aY_(fmt_rest$6,fmtty_rest);
            return [0,[13,pad_opt,sub_fmtty,match$12[1]],match$12[2]]}
          break;
         case 14:
          if(typeof fmtty!=="number"&&9===fmtty[0])
           {var
             sub_fmtty1=fmtty[1],
             fmtty_rest$0=fmtty[3],
             fmt_rest$7=fmt[3],
             sub_fmtty$0=fmt[2],
             pad_opt$0=fmt[1],
             _gd_=[0,_a_(sub_fmtty1)];
            if(caml_notequal([0,_a_(sub_fmtty$0)],_gd_))throw _aV_;
            var match$13=_aY_(fmt_rest$7,_a_(fmtty_rest$0));
            return [0,[14,pad_opt$0,sub_fmtty1,match$13[1]],match$13[2]]}
          break;
         case 15:
          if(typeof fmtty!=="number"&&10===fmtty[0])
           {var match$14=_aY_(fmt[1],fmtty[1]);
            return [0,[15,match$14[1]],match$14[2]]}
          break;
         case 16:
          if(typeof fmtty!=="number"&&11===fmtty[0])
           {var match$15=_aY_(fmt[1],fmtty[1]);
            return [0,[16,match$15[1]],match$15[2]]}
          break;
         case 17:
          var formatting_lit=fmt[1],match$16=_aY_(fmt[2],fmtty);
          return [0,[17,formatting_lit,match$16[1]],match$16[2]];
         case 18:
          var fmt_rest$8=fmt[2],formatting_gen=fmt[1];
          if(0===formatting_gen[0])
           {var
             match$20=formatting_gen[1],
             str$0=match$20[2],
             match$21=_aY_(match$20[1],fmtty),
             fmt2=match$21[1],
             match$22=_aY_(fmt_rest$8,match$21[2]);
            return [0,[18,[0,[0,fmt2,str$0]],match$22[1]],match$22[2]]}
          var
           match$23=formatting_gen[1],
           str$1=match$23[2],
           match$24=_aY_(match$23[1],fmtty),
           fmt2$0=match$24[1],
           match$25=_aY_(fmt_rest$8,match$24[2]);
          return [0,[18,[1,[0,fmt2$0,str$1]],match$25[1]],match$25[2]];
         case 19:
          if(typeof fmtty!=="number"&&13===fmtty[0])
           {var match$17=_aY_(fmt[1],fmtty[1]);
            return [0,[19,match$17[1]],match$17[2]]}
          break;
         case 20:
          if(typeof fmtty!=="number"&&1===fmtty[0])
           {var
             char_set=fmt[2],
             width_opt=fmt[1],
             match$18=_aY_(fmt[3],fmtty[1]);
            return [0,[20,width_opt,char_set,match$18[1]],match$18[2]]}
          break;
         case 21:
          if(typeof fmtty!=="number"&&2===fmtty[0])
           {var counter=fmt[1],match$19=_aY_(fmt[2],fmtty[1]);
            return [0,[21,counter,match$19[1]],match$19[2]]}
          break;
         case 23:
          var rest=fmt[2],ign=fmt[1];
          if(typeof ign==="number")
           switch(ign)
            {case 0:return _aZ_(ign,rest,fmtty);
             case 1:return _aZ_(ign,rest,fmtty);
             case 2:return _aZ_(ign,rest,fmtty);
             case 3:
              if(typeof fmtty!=="number"&&14===fmtty[0])
               {var match$26=_aY_(rest,fmtty[1]);
                return [0,[23,3,match$26[1]],match$26[2]]}
              throw _aV_;
             default:return _aZ_(ign,rest,fmtty)}
          else
           switch(ign[0])
            {case 0:return _aZ_(ign,rest,fmtty);
             case 1:return _aZ_(ign,rest,fmtty);
             case 2:return _aZ_(ign,rest,fmtty);
             case 3:return _aZ_(ign,rest,fmtty);
             case 4:return _aZ_(ign,rest,fmtty);
             case 5:return _aZ_(ign,rest,fmtty);
             case 6:return _aZ_(ign,rest,fmtty);
             case 7:return _aZ_([7,ign[1],ign[2]],rest,fmtty);
             case 8:
              var
               pad_opt$1=ign[1],
               _ge_=_a0_(ign[2],rest,fmtty),
               match$27=_ge_[2];
              return [0,[23,[8,pad_opt$1,_ge_[1]],match$27[1]],match$27[2]];
             case 9:return _aZ_(ign,rest,fmtty);
             default:return _aZ_(ign,rest,fmtty)}
         }
      throw _aV_}
    function _aZ_(ign,fmt,fmtty)
     {var match=_aY_(fmt,fmtty);return [0,[23,ign,match[1]],match[2]]}
    function _a0_(sub_fmtty,fmt,match)
     {if(typeof sub_fmtty==="number")
       return [0,0,_aY_(fmt,match)];
      else
       switch(sub_fmtty[0])
        {case 0:
          if(typeof match!=="number"&&0===match[0])
           {var match$0=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[0,match$0[1]],match$0[2]]}
          break;
         case 1:
          if(typeof match!=="number"&&1===match[0])
           {var match$1=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[1,match$1[1]],match$1[2]]}
          break;
         case 2:
          if(typeof match!=="number"&&2===match[0])
           {var match$2=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[2,match$2[1]],match$2[2]]}
          break;
         case 3:
          if(typeof match!=="number"&&3===match[0])
           {var match$3=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[3,match$3[1]],match$3[2]]}
          break;
         case 4:
          if(typeof match!=="number"&&4===match[0])
           {var match$4=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[4,match$4[1]],match$4[2]]}
          break;
         case 5:
          if(typeof match!=="number"&&5===match[0])
           {var match$5=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[5,match$5[1]],match$5[2]]}
          break;
         case 6:
          if(typeof match!=="number"&&6===match[0])
           {var match$6=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[6,match$6[1]],match$6[2]]}
          break;
         case 7:
          if(typeof match!=="number"&&7===match[0])
           {var match$7=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[7,match$7[1]],match$7[2]]}
          break;
         case 8:
          if(typeof match!=="number"&&8===match[0])
           {var
             sub2_fmtty=match[1],
             fmtty_rest=match[2],
             sub_fmtty_rest=sub_fmtty[2];
            if(caml_notequal([0,sub_fmtty[1]],[0,sub2_fmtty]))throw _aV_;
            var match$8=_a0_(sub_fmtty_rest,fmt,fmtty_rest);
            return [0,[8,sub2_fmtty,match$8[1]],match$8[2]]}
          break;
         case 9:
          if(typeof match!=="number"&&9===match[0])
           {var
             sub2_fmtty$0=match[2],
             sub1_fmtty=match[1],
             fmtty_rest$0=match[3],
             sub_fmtty_rest$0=sub_fmtty[3],
             sub2_fmtty$1=sub_fmtty[2],
             sub1_fmtty$0=sub_fmtty[1],
             _fN_=[0,_a_(sub1_fmtty)];
            if(caml_notequal([0,_a_(sub1_fmtty$0)],_fN_))throw _aV_;
            var _fO_=[0,_a_(sub2_fmtty$0)];
            if(caml_notequal([0,_a_(sub2_fmtty$1)],_fO_))throw _aV_;
            var
             match$9=_aC_(_aD_(_aB_(sub1_fmtty),sub2_fmtty$0)),
             f4=match$9[4];
            caml_call_gen1(match$9[2],0);
            caml_call_gen1(f4,0);
            var
             match$10=_a0_(_a_(sub_fmtty_rest$0),fmt,fmtty_rest$0),
             fmt$0=match$10[2];
            return [0,[9,sub1_fmtty,sub2_fmtty$0,_aB_(match$10[1])],fmt$0]}
          break;
         case 10:
          if(typeof match!=="number"&&10===match[0])
           {var match$11=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[10,match$11[1]],match$11[2]]}
          break;
         case 11:
          if(typeof match!=="number"&&11===match[0])
           {var match$12=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[11,match$12[1]],match$12[2]]}
          break;
         case 13:
          if(typeof match!=="number"&&13===match[0])
           {var match$13=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[13,match$13[1]],match$13[2]]}
          break;
         case 14:
          if(typeof match!=="number"&&14===match[0])
           {var match$14=_a0_(sub_fmtty[1],fmt,match[1]);
            return [0,[14,match$14[1]],match$14[2]]}
          break
         }
      throw _aV_}
    function _a1_(padty,width,str)
     {var
       len=caml_ml_string_length(str),
       padty$0=0<=width?padty:0,
       width$0=abs(width);
      if(width$0<=len)return str;
      var _fM_=2===padty$0?48:32,res=make(width$0,_fM_);
      switch(padty$0)
       {case 0:_F_(str,0,res,0,len);break;
        case 1:_F_(str,0,res,width$0-len|0,len);break;
        default:
         if(0<len)
          {if(43===caml_string_get(str,0))
            var switch$1=1;
           else
            if(45===caml_string_get(str,0))
             var switch$1=1;
            else
             if(32===caml_string_get(str,0))
              var switch$1=1;
             else
              var switch$0=0,switch$1=0;
           if(switch$1)
            {caml_string_set(res,0,caml_string_get(str,0));
             _F_(str,1,res,(width$0-len|0)+1|0,len-1|0);
             var switch$0=1}}
         else
          var switch$0=0;
         if(!switch$0)
          {if(1<len)
            if(48===caml_string_get(str,0))
             {if(num_120===caml_string_get(str,1))
               var switch$3=1;
              else
               if(88===caml_string_get(str,1))
                var switch$3=1;
               else
                var switch$2=0,switch$3=0;
              if(switch$3)
               {caml_string_set(res,1,caml_string_get(str,1));
                _F_(str,2,res,(width$0-len|0)+2|0,len-2|0);
                var switch$2=1}}
            else
             var switch$2=0;
           else
            var switch$2=0;
           if(!switch$2)_F_(str,0,res,width$0-len|0,len)}}
      return res}
    function _a2_(prec,str)
     {var
       prec$0=abs(prec),
       len=caml_ml_string_length(str),
       c=caml_string_get(str,0);
      if(58<=c)
       var switch$0=71<=c?5<(c-97|0)>>>0?1:0:65<=c?0:1;
      else
       {if(32===c)
         var switch$1=1;
        else
         if(43<=c)
          switch(c-43|0)
           {case 5:
             if(len<(prec$0+2|0))
              if(1<len)
               {var
                 switch$2=
                  num_120===caml_string_get(str,1)
                   ?0
                   :88===caml_string_get(str,1)?0:1;
                if(!switch$2)
                 {var res$1=make(prec$0+2|0,48);
                  caml_string_set(res$1,1,caml_string_get(str,1));
                  _F_(str,2,res$1,(prec$0-len|0)+4|0,len-2|0);
                  return res$1}}
             var switch$0=0,switch$1=0;
             break;
            case 0:
            case 2:var switch$1=1;break;
            case 1:
            case 3:
            case 4:var switch$0=1,switch$1=0;break;
            default:var switch$0=0,switch$1=0}
         else
          var switch$0=1,switch$1=0;
        if(switch$1)
         {if(len<(prec$0+1|0))
           {var res$0=make(prec$0+1|0,48);
            caml_string_set(res$0,0,c);
            _F_(str,1,res$0,(prec$0-len|0)+2|0,len-1|0);
            return res$0}
          var switch$0=1}}
      if(!switch$0)
       if(len<prec$0)
        {var res=make(prec$0,48);_F_(str,0,res,prec$0-len|0,len);return res}
      return str}
    function _a3_(str)
     {var i$1=0;
      for(;;)
       {if(caml_ml_string_length(str)<=i$1)
         var _fJ_=0;
        else
         {var
           c$1=caml_string_unsafe_get(str,i$1),
           switch$0=
            14<=c$1?34===c$1?1:92===c$1?1:0:11<=c$1?13<=c$1?1:0:8<=c$1?1:0;
          if(switch$0)
           var _fJ_=1;
          else
           {if(caml_is_printable(c$1)){var i$1=i$1+1|0;continue}var _fJ_=1}}
        if(_fJ_)
         {var n=[0,0],_fC_=caml_ml_string_length(str)-1|0,_fB_=0;
          if(!(_fC_<0))
           {var i$0=_fB_;
            for(;;)
             {var
               c$0=caml_string_unsafe_get(str,i$0),
               switch$1=
                14<=c$0?34===c$0?1:92===c$0?1:0:11<=c$0?13<=c$0?1:0:8<=c$0?1:0,
               _fH_=switch$1?2:caml_is_printable(c$0)?1:4;
              n[1]=n[1]+_fH_|0;
              var _fI_=i$0+1|0;
              if(_fC_!==i$0){var i$0=_fI_;continue}
              break}}
          if(n[1]===caml_ml_string_length(str))
           var _fK_=_z_(str);
          else
           {var s=caml_create_string(n[1]);
            n[1]=0;
            var _fE_=caml_ml_string_length(str)-1|0,_fD_=0;
            if(!(_fE_<0))
             {var i=_fD_;
              for(;;)
               {var c=caml_string_unsafe_get(str,i),_fF_=c-34|0;
                if(58<_fF_>>>0)
                 if(-20<=_fF_)
                  var switch$2=1;
                 else
                  {switch(_fF_+34|0)
                    {case 8:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],98);
                      var switch$3=1;
                      break;
                     case 9:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],116);
                      var switch$3=1;
                      break;
                     case 10:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],num_110);
                      var switch$3=1;
                      break;
                     case 13:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],114);
                      var switch$3=1;
                      break;
                     default:var switch$2=1,switch$3=0}
                   if(switch$3)var switch$2=0}
                else
                 var
                  switch$2=
                   56<(_fF_-1|0)>>>0
                    ?(caml_string_unsafe_set(s,n[1],92),
                      n[1]++,
                      caml_string_unsafe_set(s,n[1],c),
                      0)
                    :1;
                if(switch$2)
                 if(caml_is_printable(c))
                  caml_string_unsafe_set(s,n[1],c);
                 else
                  {caml_string_unsafe_set(s,n[1],92);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+(c/num_100|0)|0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+((c/10|0)%10|0)|0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+(c%10|0)|0)}
                n[1]++;
                var _fG_=i+1|0;
                if(_fE_!==i){var i=_fG_;continue}
                break}}
            var _fK_=s}
          var _fL_=_fK_}
        else
         var _fL_=str;
        return _J_(_fL_,_a4_)}}
    function _bg_(iconv,c)
     {switch(iconv)
       {case 0:var seps=_bh_;break;
        case 1:var seps=_bi_;break;
        case 2:var seps=_bj_;break;
        case 3:var seps=_bk_;break;
        case 4:var seps=_bl_;break;
        case 5:var seps=_bm_;break;
        case 6:var seps=_bn_;break;
        case 7:var seps=_bo_;break;
        case 8:var seps=_bp_;break;
        case 9:var seps=_bq_;break;
        case 10:var seps=_br_;break;
        case 11:var seps=_bs_;break;
        default:var seps=_bt_}
      return _J_(_H_(1,c),seps)}
    function _bv_(iconv,n)
     {switch(iconv)
       {case 0:var _fA_=_a5_;break;
        case 1:var _fA_=_a6_;break;
        case 2:var _fA_=_a7_;break;
        case 3:var _fA_=_a8_;break;
        case 4:var _fA_=_a9_;break;
        case 5:var _fA_=_a__;break;
        case 6:var _fA_=_a$_;break;
        case 7:var _fA_=_ba_;break;
        case 8:var _fA_=_bb_;break;
        case 9:var _fA_=_bc_;break;
        case 10:var _fA_=_bd_;break;
        case 11:var _fA_=_be_;break;
        default:var _fA_=_bf_}
      return caml_format_int(_fA_,n)}
    function _bw_(iconv,n){return caml_format_int(_bg_(iconv,108),n)}
    function _bx_(iconv,n){return caml_format_int(_bg_(iconv,num_110),n)}
    function _by_(iconv,n){return caml_int64_format(_bg_(iconv,76),n)}
    function _bz_(fconv,prec$0,x)
     {var prec$1=abs(prec$0);
      if(15===fconv)
       var _fx_=_bu_;
      else
       {var prec=abs(prec$1);
        switch(fconv)
         {case 15:var symb=70;break;
          case 0:
          case 1:
          case 2:var symb=102;break;
          case 3:
          case 4:
          case 5:var symb=101;break;
          case 6:
          case 7:
          case 8:var symb=69;break;
          case 9:
          case 10:
          case 11:var symb=103;break;
          default:var symb=71}
        var buf=_X_(16);
        _Z_(buf,37);
        switch(fconv)
         {case 1:
          case 4:
          case 7:
          case 10:
          case 13:_Z_(buf,43);break;
          case 2:
          case 5:
          case 8:
          case 11:
          case 14:_Z_(buf,32);break
          }
        _Z_(buf,46);
        ___(buf,caml_new_string(str$7+prec));
        _Z_(buf,symb);
        var _fx_=_$_(buf)}
      var str=caml_format_float(_fx_,x);
      if(15===fconv)
       {var match=caml_classify_float(x),len=caml_ml_string_length(str);
        if(3===match)return x<0?_bA_:_bB_;
        if(4<=match)return _bC_;
        var i=0;
        for(;;)
         {if(i===len)
           var _fz_=0;
          else
           {var
             _fy_=caml_string_get(str,i)-46|0,
             switch$0=23<_fy_>>>0?55===_fy_?1:0:21<(_fy_-1|0)>>>0?1:0;
            if(!switch$0){var i=i+1|0;continue}
            var _fz_=1}
          return _fz_?str:_g_(str,_bD_)}}
      return str}
    function _bF_(k,o,acc,fmt)
     {var k$0=k,acc$0=acc,fmt$0=fmt;
      for(;;)
       if(typeof fmt$0==="number")
        return caml_call_gen2(k$0,o,acc$0);
       else
        switch(fmt$0[0])
         {case 0:
           var rest=fmt$0[1];
           return function(c){return _bF_(k$0,o,[5,acc$0,c],rest)};
          case 1:
           var rest$0=fmt$0[1];
           return function(c)
            {if(39===c)
              var _fw_=_t_;
             else
              if(92===c)
               var _fw_=_u_;
              else
               {if(14<=c)
                 var switch$0=0;
                else
                 switch(c)
                  {case 8:var _fw_=_v_,switch$0=1;break;
                   case 9:var _fw_=_w_,switch$0=1;break;
                   case 10:var _fw_=_x_,switch$0=1;break;
                   case 13:var _fw_=_y_,switch$0=1;break;
                   default:var switch$0=0}
                if(!switch$0)
                 if(caml_is_printable(c))
                  {var s=caml_create_string(1);
                   caml_string_unsafe_set(s,0,c);
                   var _fw_=s}
                 else
                  {var s$0=caml_create_string(4);
                   caml_string_unsafe_set(s$0,0,92);
                   caml_string_unsafe_set(s$0,1,48+(c/num_100|0)|0);
                   caml_string_unsafe_set(s$0,2,48+((c/10|0)%10|0)|0);
                   caml_string_unsafe_set(s$0,3,48+(c%10|0)|0);
                   var _fw_=s$0}}
             return _bF_(k$0,o,[4,acc$0,_J_(_fw_,_bE_)],rest$0)};
          case 2:
           var rest$1=fmt$0[2],pad=fmt$0[1];
           return _bI_(k$0,o,acc$0,rest$1,pad,function(str){return str});
          case 3:return _bI_(k$0,o,acc$0,fmt$0[2],fmt$0[1],_a3_);
          case 4:
           return _bJ_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bv_,fmt$0[1]);
          case 5:
           return _bJ_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bw_,fmt$0[1]);
          case 6:
           return _bJ_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bx_,fmt$0[1]);
          case 7:
           return _bJ_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_by_,fmt$0[1]);
          case 8:
           var rest$2=fmt$0[4],prec=fmt$0[3],pad$0=fmt$0[2],fconv=fmt$0[1];
           if(typeof pad$0==="number")
            {if(typeof prec==="number")
              return 0===prec
                      ?function(x)
                        {return _bF_(k$0,o,[4,acc$0,_bz_(fconv,_W_,x)],rest$2)}
                      :function(p,x)
                        {return _bF_(k$0,o,[4,acc$0,_bz_(fconv,p,x)],rest$2)};
             var p=prec[1];
             return function(x)
              {return _bF_(k$0,o,[4,acc$0,_bz_(fconv,p,x)],rest$2)}}
           else
            {if(0===pad$0[0])
              {var _fr_=pad$0[2],_fs_=pad$0[1];
               if(typeof prec==="number")
                return 0===prec
                        ?function(x)
                          {return _bF_
                                   (k$0,o,[4,acc$0,_a1_(_fs_,_fr_,_bz_(fconv,_W_,x))],rest$2)}
                        :function(p,x)
                          {return _bF_
                                   (k$0,o,[4,acc$0,_a1_(_fs_,_fr_,_bz_(fconv,p,x))],rest$2)};
               var p$0=prec[1];
               return function(x)
                {return _bF_
                         (k$0,o,[4,acc$0,_a1_(_fs_,_fr_,_bz_(fconv,p$0,x))],rest$2)}}
             var _ft_=pad$0[1];
             if(typeof prec==="number")
              return 0===prec
                      ?function(w,x)
                        {return _bF_
                                 (k$0,o,[4,acc$0,_a1_(_ft_,w,_bz_(fconv,_W_,x))],rest$2)}
                      :function(w,p,x)
                        {return _bF_
                                 (k$0,o,[4,acc$0,_a1_(_ft_,w,_bz_(fconv,p,x))],rest$2)};
             var p$1=prec[1];
             return function(w,x)
              {return _bF_
                       (k$0,o,[4,acc$0,_a1_(_ft_,w,_bz_(fconv,p$1,x))],rest$2)}}
          case 9:
           var rest$3=fmt$0[1];
           return function(b)
            {var _fv_=b?_h_:_i_;return _bF_(k$0,o,[4,acc$0,_fv_],rest$3)};
          case 10:var acc$0=[7,acc$0],fmt$0=fmt$0[1];continue;
          case 11:var acc$0=[2,acc$0,fmt$0[1]],fmt$0=fmt$0[2];continue;
          case 12:var acc$0=[3,acc$0,fmt$0[1]],fmt$0=fmt$0[2];continue;
          case 13:
           var rest$4=fmt$0[3],sub_fmtty=fmt$0[2],buf=_X_(16);
           _aj_(buf,sub_fmtty);
           var ty=_$_(buf);
           return function(str){return _bF_(k$0,o,[4,acc$0,ty],rest$4)};
          case 14:
           var rest$5=fmt$0[3],fmtty=fmt$0[2];
           return function(param)
            {var fmt=param[1],_fu_=_aY_(fmt,_a_(_aB_(fmtty)));
             if(typeof _fu_[2]==="number")
              return _bF_(k$0,o,acc$0,_c_(_fu_[1],rest$5));
             throw _aV_};
          case 15:
           var rest$6=fmt$0[1];
           return function(f,x)
            {return _bF_
                     (k$0,
                      o,
                      [6,acc$0,function(o){return caml_call_gen2(f,o,x)}],
                      rest$6)};
          case 16:
           var rest$7=fmt$0[1];
           return function(f){return _bF_(k$0,o,[6,acc$0,f],rest$7)};
          case 17:var acc$0=[0,acc$0,fmt$0[1]],fmt$0=fmt$0[2];continue;
          case 18:
           var _fq_=fmt$0[1];
           if(0===_fq_[0])
            {var
              rest$8=fmt$0[2],
              fmt$1=_fq_[1][1],
              acc$1=0,
              k$0=
               function(acc,k,rest)
                 {return function(koc,kacc)
                   {return _bF_(k,koc,[1,acc,[0,kacc]],rest)}}
                (acc$0,k$0,rest$8),
              acc$0=acc$1,
              fmt$0=fmt$1;
             continue}
           var
            rest$9=fmt$0[2],
            fmt$2=_fq_[1][1],
            acc$2=0,
            k$0=
             function(acc,k,rest)
               {return function(koc,kacc)
                 {return _bF_(k,koc,[1,acc,[1,kacc]],rest)}}
              (acc$0,k$0,rest$9),
            acc$0=acc$2,
            fmt$0=fmt$2;
           continue;
          case 19:throw [0,_o_,_bL_];
          case 20:
           var rest$10=fmt$0[3],new_acc=[8,acc$0,_bM_];
           return function(param){return _bF_(k$0,o,new_acc,rest$10)};
          case 21:
           var rest$11=fmt$0[2];
           return function(n)
            {return _bF_(k$0,o,[4,acc$0,caml_format_int(_bN_,n)],rest$11)};
          case 22:
           var rest$12=fmt$0[1];
           return function(c){return _bF_(k$0,o,[5,acc$0,c],rest$12)};
          case 23:
           var rest$13=fmt$0[2],ign=fmt$0[1];
           if(typeof ign==="number")
            switch(ign)
             {case 0:return _bH_(k$0,o,acc$0,rest$13);
              case 1:return _bH_(k$0,o,acc$0,rest$13);
              case 2:return _bH_(k$0,o,acc$0,rest$13);
              case 3:throw [0,_o_,_bO_];
              default:return _bH_(k$0,o,acc$0,rest$13)}
           else
            switch(ign[0])
             {case 0:return _bH_(k$0,o,acc$0,rest$13);
              case 1:return _bH_(k$0,o,acc$0,rest$13);
              case 2:return _bH_(k$0,o,acc$0,rest$13);
              case 3:return _bH_(k$0,o,acc$0,rest$13);
              case 4:return _bH_(k$0,o,acc$0,rest$13);
              case 5:return _bH_(k$0,o,acc$0,rest$13);
              case 6:return _bH_(k$0,o,acc$0,rest$13);
              case 7:return _bH_(k$0,o,acc$0,rest$13);
              case 8:return _bG_(k$0,o,acc$0,ign[2],rest$13);
              case 9:return _bH_(k$0,o,acc$0,rest$13);
              default:return _bH_(k$0,o,acc$0,rest$13)}
          default:
           var rest$14=fmt$0[3],arity=fmt$0[1];
           return _bK_(k$0,o,acc$0,rest$14,arity,caml_call_gen1(fmt$0[2],0))}}
    function _bG_(k,o,acc,fmtty,fmt)
     {if(typeof fmtty==="number")
       return _bH_(k,o,acc,fmt);
      else
       switch(fmtty[0])
        {case 0:
          var rest=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest,fmt)};
         case 1:
          var rest$0=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$0,fmt)};
         case 2:
          var rest$1=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$1,fmt)};
         case 3:
          var rest$2=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$2,fmt)};
         case 4:
          var rest$3=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$3,fmt)};
         case 5:
          var rest$4=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$4,fmt)};
         case 6:
          var rest$5=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$5,fmt)};
         case 7:
          var rest$6=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$6,fmt)};
         case 8:
          var rest$7=fmtty[2];
          return function(param){return _bG_(k,o,acc,rest$7,fmt)};
         case 9:
          var rest$8=fmtty[3],ty2=fmtty[2],ty=_aD_(_aB_(fmtty[1]),ty2);
          return function(param){return _bG_(k,o,acc,_b_(ty,rest$8),fmt)};
         case 10:
          var rest$9=fmtty[1];
          return function(param,_fp_){return _bG_(k,o,acc,rest$9,fmt)};
         case 11:
          var rest$10=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$10,fmt)};
         case 12:
          var rest$11=fmtty[1];
          return function(param){return _bG_(k,o,acc,rest$11,fmt)};
         case 13:throw [0,_o_,_bP_];
         default:throw [0,_o_,_bQ_]}}
    function _bH_(k,o,acc,fmt){return _bF_(k,o,[8,acc,_bR_],fmt)}
    function _bI_(k,o,acc,fmt,pad,trans)
     {if(typeof pad==="number")
       return function(x)
        {return _bF_(k,o,[4,acc,caml_call_gen1(trans,x)],fmt)};
      else
       {if(0===pad[0])
         {var width=pad[2],padty=pad[1];
          return function(x)
           {return _bF_
                    (k,o,[4,acc,_a1_(padty,width,caml_call_gen1(trans,x))],fmt)}}
        var padty$0=pad[1];
        return function(w,x)
         {return _bF_(k,o,[4,acc,_a1_(padty$0,w,caml_call_gen1(trans,x))],fmt)}}}
    function _bJ_(k,o,acc,fmt,pad,match,trans,iconv)
     {if(typeof pad==="number")
       {if(typeof match==="number")
         return 0===match
                 ?function(x)
                   {return _bF_(k,o,[4,acc,caml_call_gen2(trans,iconv,x)],fmt)}
                 :function(p,x)
                   {return _bF_
                            (k,o,[4,acc,_a2_(p,caml_call_gen2(trans,iconv,x))],fmt)};
        var p=match[1];
        return function(x)
         {return _bF_(k,o,[4,acc,_a2_(p,caml_call_gen2(trans,iconv,x))],fmt)}}
      else
       {if(0===pad[0])
         {var _fm_=pad[2],_fn_=pad[1];
          if(typeof match==="number")
           return 0===match
                   ?function(x)
                     {return _bF_
                              (k,
                               o,
                               [4,acc,_a1_(_fn_,_fm_,caml_call_gen2(trans,iconv,x))],
                               fmt)}
                   :function(p,x)
                     {return _bF_
                              (k,
                               o,
                               [4,
                                acc,
                                _a1_(_fn_,_fm_,_a2_(p,caml_call_gen2(trans,iconv,x)))],
                               fmt)};
          var p$0=match[1];
          return function(x)
           {return _bF_
                    (k,
                     o,
                     [4,
                      acc,
                      _a1_(_fn_,_fm_,_a2_(p$0,caml_call_gen2(trans,iconv,x)))],
                     fmt)}}
        var _fo_=pad[1];
        if(typeof match==="number")
         return 0===match
                 ?function(w,x)
                   {return _bF_
                            (k,o,[4,acc,_a1_(_fo_,w,caml_call_gen2(trans,iconv,x))],fmt)}
                 :function(w,p,x)
                   {return _bF_
                            (k,
                             o,
                             [4,acc,_a1_(_fo_,w,_a2_(p,caml_call_gen2(trans,iconv,x)))],
                             fmt)};
        var p$1=match[1];
        return function(w,x)
         {return _bF_
                  (k,
                   o,
                   [4,acc,_a1_(_fo_,w,_a2_(p$1,caml_call_gen2(trans,iconv,x)))],
                   fmt)}}}
    function _bK_(k,o,acc,rest,arity,f)
     {if(arity)
       {var arity$0=arity[1];
        return function(x)
         {return _bK_(k,o,acc,rest,arity$0,caml_call_gen1(f,x))}}
      return _bF_(k,o,[4,acc,f],rest)}
    function _bS_(o,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0==="number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var p=acc$0[1],s=_aa_(acc$0[2]);
           _bS_(o,p);
           return output_string(o,s);
          case 1:
           var _fk_=acc$0[2],_fl_=acc$0[1];
           if(0===_fk_[0])
            {var acc$1=_fk_[1];
             _bS_(o,_fl_);
             output_string(o,_bT_);
             var acc$0=acc$1;
             continue}
           var acc$2=_fk_[1];
           _bS_(o,_fl_);
           output_string(o,_bU_);
           var acc$0=acc$2;
           continue;
          case 6:var f=acc$0[2];_bS_(o,acc$0[1]);return caml_call_gen1(f,o);
          case 7:_bS_(o,acc$0[1]);return caml_ml_flush(o);
          case 8:var msg=acc$0[2];_bS_(o,acc$0[1]);return invalid_arg(msg);
          case 2:
          case 4:
           var s$0=acc$0[2];_bS_(o,acc$0[1]);return output_string(o,s$0);
          default:
           var c=acc$0[2];_bS_(o,acc$0[1]);return caml_ml_output_char(o,c)}}
    function _bV_(b,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0==="number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:var p=acc$0[1],s=_aa_(acc$0[2]);_bV_(b,p);return _V_(b,s);
          case 1:
           var _fi_=acc$0[2],_fj_=acc$0[1];
           if(0===_fi_[0])
            {var acc$1=_fi_[1];
             _bV_(b,_fj_);
             _V_(b,_bW_);
             var acc$0=acc$1;
             continue}
           var acc$2=_fi_[1];
           _bV_(b,_fj_);
           _V_(b,_bX_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2];_bV_(b,acc$0[1]);return _V_(b,caml_call_gen1(f,0));
          case 7:var acc$0=acc$0[1];continue;
          case 8:var msg=acc$0[2];_bV_(b,acc$0[1]);return invalid_arg(msg);
          case 2:
          case 4:var s$0=acc$0[2];_bV_(b,acc$0[1]);return _V_(b,s$0);
          default:
           var c=acc$0[2];
           _bV_(b,acc$0[1]);
           var pos=b[2];
           if(b[3]<=pos)_U_(b,1);
           caml_string_unsafe_set(b[1],pos,c);
           b[2]=pos+1|0;
           return 0}}
    function _bY_(oc,fmt$0)
     {var fmt=fmt$0[1],_fh_=0;
      return _bF_(function(o,acc){_bS_(o,acc);return 0},oc,_fh_,fmt)}
    function _bZ_(fmt$0)
     {var fmt=fmt$0[1];
      return _bF_
              (function(param,acc)
                {var
                  n$1=64,
                  n=1<=64?n$1:1,
                  n$0=_M_<n?_M_:n,
                  s=caml_create_string(n$0),
                  buf=[0,s,0,n$0,s];
                 _bV_(buf,acc);
                 return _C_(buf[1],0,buf[2])},
               0,
               0,
               fmt)}
    var printers=[0,0];
    function field(x,i$0)
     {var f=x[i$0+1];
      if(caml_obj_is_block(f))
       {if(caml_obj_tag(f)===num_252)return caml_call_gen1(_bZ_(_b0_),f);
        if(caml_obj_tag(f)===253)
         {var s=caml_format_float(_k_,f),i=0,l=caml_ml_string_length(s);
          for(;;)
           {if(l<=i)return _g_(s,_j_);
            var
             match=caml_string_get(s,i),
             switch$0=48<=match?58<=match?0:1:45===match?1:0;
            if(switch$0){var i=i+1|0;continue}
            return s}}
        return _b1_}
      return caml_call_gen1(_bZ_(_b2_),f)}
    function other_fields(x,i)
     {if(x.length-1<=i)return _b3_;
      var _ff_=other_fields(x,i+1|0),_fg_=field(x,i);
      return caml_call_gen2(_bZ_(_b4_),_fg_,_ff_)}
    function fields(x)
     {var n=x.length-1;
      if(2<n>>>0)
       {var _fc_=other_fields(x,2),_fd_=field(x,1);
        return caml_call_gen2(_bZ_(_b5_),_fd_,_fc_)}
      switch(n)
       {case 0:return _b6_;
        case 1:return _b7_;
        default:var _fe_=field(x,1);return caml_call_gen1(_bZ_(_b8_),_fe_)}}
    function to_string(x)
     {function conv(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var tl=param$0[2],hd=param$0[1];
            try
             {var _fa_=caml_call_gen1(hd,x),_e$_=_fa_}
            catch(_fb_){var _e$_=0}
            if(_e$_)return _e$_[1];
            var param$0=tl;
            continue}
          if(x===_b9_)return _b__;
          if(x===_b$_)return _ca_;
          if(x[1]===_cb_)
           {var match=x[2],char$0=match[3],line=match[2],file=match[1];
            return caml_call_gen5
                    (_bZ_(locfmt),file,line,char$0,char$0+5|0,_cc_)}
          if(x[1]===_o_)
           {var
             match$0=x[2],
             char$1=match$0[3],
             line$0=match$0[2],
             file$0=match$0[1];
            return caml_call_gen5
                    (_bZ_(locfmt),file$0,line$0,char$1,char$1+6|0,_cd_)}
          if(x[1]===_ce_)
           {var
             match$1=x[2],
             char$2=match$1[3],
             line$1=match$1[2],
             file$1=match$1[1];
            return caml_call_gen5
                    (_bZ_(locfmt),file$1,line$1,char$2,char$2+6|0,_cf_)}
          if(0===caml_obj_tag(x))
           {var constructor=x[1][1];return _g_(constructor,fields(x))}
          return x[1]}}
      return conv(printers[1])}
    function convert_raw_backtrace(rbckt)
     {try
       {var
         _e8_=
          [0,
           _m_
            (function(_e__){return caml_convert_raw_backtrace_slot(_e__)},
             rbckt)];
        return _e8_}
      catch(_e9_)
       {_e9_=caml_wrap_exception(_e9_);if(_e9_[1]===_e_)return 0;throw _e9_}}
    function print_backtrace(outchan)
     {var
       backtrace=
        convert_raw_backtrace(caml_get_exception_raw_backtrace(0));
      if(backtrace)
       {var a=backtrace[1],_e6_=a.length-1-1|0,_e5_=0;
        if(!(_e6_<0))
         {var i=_e5_;
          for(;;)
           {var
             slot=caml_check_bound(a,i)[i+1],
             info=
              function(i)
                {return function(is_raise)
                  {return is_raise?0===i?_cg_:_ch_:0===i?_ci_:_cj_}}
               (i);
            if(0===slot[0])
             var
              endchar=slot[5],
              startchar=slot[4],
              lineno=slot[3],
              filename=slot[2],
              _e3_=info(slot[1]),
              match=
               [0,
                caml_call_gen5
                 (_bZ_(_ck_),_e3_,filename,lineno,startchar,endchar)];
            else
             if(0===slot[1])
              var _e4_=info(0),match=[0,caml_call_gen1(_bZ_(_cl_),_e4_)];
             else
              var match=0;
            if(match){var str=match[1];caml_call_gen1(_bY_(outchan,_cm_),str)}
            var _e7_=i+1|0;
            if(_e6_!==i){var i=_e7_;continue}
            break}}
        return 0}
      return _bY_(outchan,_cn_)}
    function register_printer(fn){printers[1]=[0,fn,printers[1]];return 0}
    32===_L_;
    caml_set_oo_id([num_248,_co_,0]);
    function _cp_(param)
     {var seq=[];caml_update_dummy(seq,[0,seq,seq]);return seq}
    var Canceled=caml_set_oo_id([num_248,_cq_,0]),current_data=[0,0];
    function repr_rec(t)
     {var _e2_=t[1];
      if(3===_e2_[0])
       {var t$0=_e2_[1],t$1=repr_rec(t$0);
        if(t$1!==t$0)t[1]=[3,t$1];
        return t$1}
      return t}
    function repr(t){return repr_rec(t)}
    var
     async_exception_hook=
      [0,
       function(exn)
        {prerr_string(_cr_);
         prerr_string(to_string(exn));
         caml_ml_output_char(stderr,10);
         print_backtrace(stderr);
         caml_ml_flush(stderr);
         do_at_exit(0);
         return caml_sys_exit(2)}];
    function call_unsafe(f,x)
     {try
       {var _e1_=caml_call_gen1(f,x);return _e1_}
      catch(exn)
       {exn=caml_wrap_exception(exn);
        return caml_call_gen1(async_exception_hook[1],exn)}}
    function run_waiters_rec(state,ws,rem)
     {var ws$0=ws,rem$0=rem;
      for(;;)
       if(typeof ws$0==="number")
        return run_waiters_rec_next(state,rem$0);
       else
        switch(ws$0[0])
         {case 0:
           var _e0_=ws$0[1][1];
           return _e0_
                   ?(caml_call_gen1(_e0_[1],state),
                     run_waiters_rec_next(state,rem$0))
                   :run_waiters_rec_next(state,rem$0);
          case 1:
           caml_call_gen1(ws$0[1],state);
           return run_waiters_rec_next(state,rem$0);
          default:
           var rem$1=[0,ws$0[2],rem$0],ws$0=ws$0[1],rem$0=rem$1;continue}}
    function run_waiters_rec_next(state,rem)
     {return rem?run_waiters_rec(state,rem[1],rem[2]):0}
    function run_cancel_handlers_rec(chs,rem)
     {var chs$0=chs,rem$0=rem;
      for(;;)
       if(typeof chs$0==="number")
        return run_cancel_handlers_rec_next(rem$0);
       else
        switch(chs$0[0])
         {case 0:
           var f=chs$0[2];
           current_data[1]=chs$0[1];
           call_unsafe(f,0);
           return run_cancel_handlers_rec_next(rem$0);
          case 1:
           var n=chs$0[1];
           if(n[4]){n[4]=0;n[1][2]=n[2];n[2][1]=n[1]}
           return run_cancel_handlers_rec_next(rem$0);
          default:
           var rem$1=[0,chs$0[2],rem$0],chs$0=chs$0[1],rem$0=rem$1;continue}}
    function run_cancel_handlers_rec_next(rem)
     {return rem?run_cancel_handlers_rec(rem[1],rem[2]):0}
    function unsafe_run_waiters(sleeper,state)
     {var
       switch$0=
        1===state[0]
         ?state[1]===Canceled?(run_cancel_handlers_rec(sleeper[4],0),1):0
         :0;
      return run_waiters_rec(state,sleeper[2],0)}
    var wakening=[0,0],to_wakeup=[0,0,0];
    function wakeup(t$0,v)
     {var state=[0,v],t=repr_rec(t$0),_eZ_=t[1];
      switch(_eZ_[0])
       {case 1:if(_eZ_[1]===Canceled)return 0;break;
        case 2:
         var sleeper=_eZ_[1];
         t[1]=state;
         var
          snapshot=current_data[1],
          already_wakening=wakening[1]?1:(wakening[1]=1,0);
         unsafe_run_waiters(sleeper,state);
         if(already_wakening){current_data[1]=snapshot;return 0}
         for(;;)
          {if(0===to_wakeup[1])
            {wakening[1]=0;current_data[1]=snapshot;return 0}
           if(0===to_wakeup[1])throw _S_;
           to_wakeup[1]=to_wakeup[1]-1|0;
           var tail=to_wakeup[2],head=tail[2];
           if(head===tail)to_wakeup[2]=0;else tail[2]=head[2];
           var _eY_=head[1];
           unsafe_run_waiters(_eY_[1],_eY_[2]);
           continue}
        }
      return invalid_arg(_cs_)}
    function append(l1,l2)
     {return typeof l1==="number"?l2:typeof l2==="number"?l1:[2,l1,l2]}
    function cleanup(ws)
     {if(typeof ws!=="number")
       switch(ws[0])
        {case 0:if(!ws[1][1])return 0;break;
         case 2:
          var l1=ws[1],_eX_=cleanup(ws[2]);return append(cleanup(l1),_eX_)
         }
      return ws}
    function connect(t1,t2)
     {var t1$0=repr(t1),t2$0=repr(t2),_eS_=t1$0[1];
      if(2===_eS_[0])
       {var sleeper1=_eS_[1];
        if(t1$0===t2$0)return 0;
        var _eT_=t2$0[1];
        if(2===_eT_[0])
         {var sleeper2=_eT_[1];
          t2$0[1]=[3,t1$0];
          sleeper1[1]=sleeper2[1];
          var
           waiters=append(sleeper1[2],sleeper2[2]),
           removed=sleeper1[3]+sleeper2[3]|0;
          if(42<removed)
           {sleeper1[3]=0;sleeper1[2]=cleanup(waiters)}
          else
           {sleeper1[3]=removed;sleeper1[2]=waiters}
          var
           _eU_=sleeper2[4],
           _eV_=sleeper1[4],
           _eW_=
            typeof _eV_==="number"
             ?_eU_
             :typeof _eU_==="number"?_eV_:[2,_eV_,_eU_];
          sleeper1[4]=_eW_;
          return 0}
        t1$0[1]=_eT_;
        return unsafe_run_waiters(sleeper1,_eT_)}
      throw [0,_o_,_ct_]}
    function fast_connect(t,state)
     {var t$0=repr(t),_eR_=t$0[1];
      if(2===_eR_[0])
       {var sleeper=_eR_[1];
        t$0[1]=state;
        return unsafe_run_waiters(sleeper,state)}
      throw [0,_o_,_cu_]}
    function fail(e){return [0,[1,e]]}
    function bind(t,f)
     {var t$0=repr(t),_eO_=t$0[1];
      switch(_eO_[0])
       {case 0:return caml_call_gen1(f,_eO_[1]);
        case 1:return [0,_eO_];
        case 2:
         var
          sleeper=_eO_[1],
          res=[0,[2,[0,[0,[0,t$0]],0,0,0]]],
          data=current_data[1],
          waiter$0=
           [1,
            function(state)
             {switch(state[0])
               {case 0:
                 var v=state[1];
                 current_data[1]=data;
                 try
                  {var _eQ_=caml_call_gen1(f,v),_eP_=_eQ_}
                 catch(exn){exn=caml_wrap_exception(exn);var _eP_=fail(exn)}
                 return connect(res,_eP_);
                case 1:return fast_connect(res,state);
                default:throw [0,_o_,_cv_]}}],
          _eN_=sleeper[2],
          waiter=typeof _eN_==="number"?waiter$0:[2,waiter$0,_eN_];
         sleeper[2]=waiter;
         return res;
        default:throw [0,_o_,_cw_]}}
    var
     pause_hook=[0,function(_eM_){return 0}],
     s1=_cp_(0),
     _cx_=[0,0],
     window=joo_global_object,
     no_handler=null;
    function _cy_(param)
     {if(s1[2]===s1){_cx_[1]=0;return 0}
      var seq=_cp_(0);
      seq[1][2]=s1[2];
      s1[2][1]=seq[1];
      seq[1]=s1[1];
      s1[1][2]=seq;
      s1[1]=s1;
      s1[2]=s1;
      _cx_[1]=0;
      var curr=seq[2];
      for(;;)
       {var _eL_=curr!==seq?1:0;
        if(_eL_){if(curr[4])wakeup(curr[3],0);var curr=curr[2];continue}
        return _eL_}}
    var
     jsoo_7bc72a9e=window.Array,
     Error=caml_set_oo_id([num_248,_cz_,0]),
     exn=[0,Error,{}],
     undefined$0=undefined,
     false$0=false,
     slot=caml_obj_tag(exn)===num_248?exn:exn[1];
    caml_register_named_value(caml_new_string(str_jsError),slot);
    (function(exn){throw exn});
    register_printer
     (function(param)
       {return param[1]===Error?[0,caml_js_to_string(param[2].toString())]:0});
    register_printer
     (function(jsoo_self)
       {return jsoo_self instanceof jsoo_7bc72a9e
                ?0
                :[0,caml_js_to_string(jsoo_self.toString())]});
    function _cA_(jsoo_self,jsoo_ad7fbbdd)
     {jsoo_self.appendChild(jsoo_ad7fbbdd);return 0}
    var doc=window.document;
    function opt_iter(x,f){return x?caml_call_gen1(f,x[1]):0}
    function createElement(jsoo_self,name)
     {return jsoo_self.createElement(name.toString())}
    function unsafeCreateElement(doc,name){return createElement(doc,name)}
    var createElementSyntax=[0,num_785140586];
    function unsafeCreateElementEx(type,name,doc$0,elt)
     {for(;;)
       {if(0===type)if(0===name)return createElement(doc$0,elt);
        var _eF_=createElementSyntax[1];
        if(num_785140586===_eF_)
         {try
           {var
             el=doc.createElement('<input name="x">'),
             _eI_=el.tagName.toLowerCase()==="input"?1:0,
             _eJ_=_eI_?el.name===str_x?1:0:_eI_,
             _eG_=_eJ_}
          catch(_eK_){var _eG_=0}
          var _eH_=_eG_?num_982028505:-1003883683;
          createElementSyntax[1]=_eH_;
          continue}
        if(num_982028505<=_eF_)
         {var a=new jsoo_7bc72a9e();
          a.push("<",elt.toString());
          opt_iter
           (type,
            function(t)
             {a.push(' type="',caml_js_html_escape(t),str$1);return 0});
          opt_iter
           (name,
            function(n)
             {a.push(' name="',caml_js_html_escape(n),str$1);return 0});
          a.push(">");
          return doc$0.createElement(a.join(str$7))}
        var res=createElement(doc$0,elt);
        opt_iter(type,function(jsoo_arg){return res.type=jsoo_arg});
        opt_iter(name,function(jsoo_arg){return res.name=jsoo_arg});
        return res}}
    function createDiv(doc){return unsafeCreateElement(doc,_cC_)}
    caml_set_oo_id([num_248,_cH_,0]);
    window.HTMLElement===undefined$0;
    var _cI_=num_2147483e3,jsoo_self=caml_js_get_console(0);
    function sleep(d)
     {var t=[0,[2,[0,1,0,0,0]]],d$0=d*num_1e3,id=[0,0];
      function callback(_eE_){return wakeup(t,_eE_)}
      function loop(d,param)
       {var
         match=num_2147483e3<d?[0,_cI_,d-num_2147483e3]:[0,d,0],
         remain=match[2],
         step=match[1],
         cb=remain==0?callback:function(_eD_){return loop(remain,_eD_)};
        id[1]=[0,window.setTimeout(caml_js_wrap_callback(cb),step)];
        return 0}
      loop(d$0,0);
      function f(param)
       {var _eC_=id[1];
        if(_eC_){var x=_eC_[1];id[1]=0;return window.clearTimeout(x)}
        return 0}
      var _eA_=repr(t)[1];
      switch(_eA_[0])
       {case 1:var switch$0=_eA_[1]===Canceled?(call_unsafe(f,0),1):0;break;
        case 2:
         var
          sleeper=_eA_[1],
          handler=[0,current_data[1],f],
          _eB_=sleeper[4],
          handler$0=typeof _eB_==="number"?handler:[2,handler,_eB_];
         sleeper[4]=handler$0;
         var switch$0=1;
         break;
        default:var switch$0=0}
      return t}
    pause_hook[1]=
    function(param)
     {return 1===param?(window.setTimeout(caml_js_wrap_callback(_cy_),0),0):0};
    function _cJ_(s){return jsoo_self.log(s.toString())}
    async_exception_hook[1]=
    function(exn)
     {_cJ_(_cK_);_cJ_(to_string(exn));return print_backtrace(stderr)};
    function _cL_(c,s)
     {var n=[0,0],_ey_=caml_ml_string_length(s)-1|0,_ex_=0;
      if(!(_ey_<0))
       {var i=_ex_;
        for(;;)
         {if(caml_string_get(s,i)===c)n[1]++;
          var _ez_=i+1|0;
          if(_ey_!==i){var i=_ez_;continue}
          break}}
      return n[1]}
    function _cM_(c,v)
     {var _ev_=c[12];
      if(typeof _ev_!=="number"&&1===_ev_[0]){c[8]=[0,v,c[8]];return 0}
      var _ew_=c[7];
      c[7]=[0,caml_call_gen1(c[1][21],v),_ew_];
      return 0}
    function _cN_(c,s){return _cM_(c,caml_call_gen1(c[1][1],s))}
    function _cO_(c,lexbuf){return _cN_(c,_Q_(lexbuf))}
    function _cP_(c,style,v){return 0===style?(c[3]=v,0):(c[2]=v,0)}
    function _cQ_(c,style,inline,stack)
     {var elt=0===style?c[1][2]:c[1][3],inline$0=c[7];
      c[12]=stack;
      c[7]=inline;
      _cM_(c,caml_call_gen1(elt,_p_(inline$0)));
      return _cP_(c,style,0)}
    function _cR_(c,style)
     {var _et_=0===style?c[3]:c[2];
      if(_et_)
       {var _eu_=c[12];
        if(typeof _eu_!=="number"&&0===_eu_[0])
         {var stack=_eu_[3],inline=_eu_[2];
          if(caml_equal(_eu_[1],style))return _cQ_(c,style,inline,stack)}
        return 0===style?_cN_(c,_cS_):_cN_(c,_cT_)}
      c[12]=[0,style,c[7],c[12]];
      c[7]=0;
      return _cP_(c,style,1)}
    function _cU_(c,addr,stack)
     {c[12]=stack;
      var _er_=c[7],_es_=_p_(c[8]);
      c[7]=[0,caml_call_gen2(c[1][7],addr,_es_),_er_];
      c[8]=0;
      c[5]=0;
      return 0}
    function _cV_(c)
     {var _eo_=c[12];
      if(typeof _eo_!=="number")
       switch(_eo_[0])
        {case 5:
          var _ep_=c[12];c[12]=[6,[0,[0,0,_p_(c[7])],0],_ep_];c[7]=0;return 1;
         case 6:return 1;
         case 7:
          var _eq_=_eo_[2];
          if(typeof _eq_!=="number"&&6===_eq_[0])
           {var stack=_eq_[2],entries=_eq_[1],heading=_eo_[1];
            c[12]=[6,[0,[0,heading,_p_(c[7])],entries],stack];
            c[7]=0;
            return 1}
          break
         }
      return 0}
    function _cW_(c)
     {var _el_=_cV_(c);
      if(_el_)
       {var _em_=c[12];
        if(typeof _em_!=="number")
         switch(_em_[0])
          {case 5:return 1;
           case 6:
            var _en_=_em_[2];
            if(typeof _en_!=="number"&&5===_en_[0])
             {var rows=_en_[1];c[12]=[5,[0,_p_(_em_[1]),rows]];return 1}
            break
           }
        throw [0,_o_,_cX_]}
      return _el_}
    function _cY_(c,lev)
     {for(;;)
       {var _ed_=c[12];
        if(typeof _ed_==="number")
         {if(0!==c[7])
           {var _ee_=c[11],_ef_=_p_(c[7]);
            c[11]=[0,caml_call_gen1(c[1][9],_ef_),_ee_];
            c[7]=0}
          c[12]=0;
          return 0}
        else
         switch(_ed_[0])
          {case 0:_cQ_(c,_ed_[1],_ed_[2],_ed_[3]);continue;
           case 1:_cU_(c,_ed_[1],_ed_[2]);continue;
           case 2:
            var switcher=_ed_[1]-1|0;
            if(4<switcher>>>0)
             var f=c[1][16];
            else
             switch(switcher)
              {case 0:var f=c[1][11];break;
               case 1:var f=c[1][12];break;
               case 2:var f=c[1][13];break;
               case 3:var f=c[1][14];break;
               default:var f=c[1][15]}
            var _eg_=c[11];
            c[11]=[0,caml_call_gen1(f,_p_(c[7])),_eg_];
            c[7]=0;
            c[4]=0;
            c[12]=0;
            return 0;
           case 3:
            var stack=_ed_[1],_eh_=c[10];
            c[10]=[0,[0,_p_(c[7]),0],_eh_];
            c[12]=stack;
            c[7]=0;
            continue;
           case 4:
            var lst=_ed_[2],stack$0=_ed_[3],kind=_ed_[1];
            if(lev<c[6])
             {c[6]=c[6]-1|0;
              var
               elt=0===kind?c[1][17]:c[1][18],
               cur_lst=caml_call_gen1(elt,_p_(c[10]));
              if(0===c[6])
               c[11]=[0,cur_lst,c[11]];
              else
               {if(lst)
                 var
                  _ei_=lst[1],
                  switch$0=
                   _ei_[2]?0:(c[10]=[0,[0,_ei_[1],[0,cur_lst]],lst[2]],1);
                else
                 var switch$0=0;
                if(!switch$0)throw [0,_o_,_cZ_]}
              c[12]=stack$0;
              continue}
            return 0;
           case 5:
            var _ej_=c[11],_ek_=_p_(_ed_[1]);
            c[11]=[0,caml_call_gen1(c[1][20],_ek_),_ej_];
            c[12]=0;
            return 0;
           case 6:throw [0,_o_,_c0_];
           default:_cW_(c);continue}}}
    function _c2_(c,kind,lev)
     {var _ea_=lev===(c[6]+1|0)?1:0;
      if(_ea_)
       var _eb_=_ea_,switch$0=0;
      else
       {var _ec_=lev<=c[6]?1:0;
        if(_ec_)
         {var stack=c[12],n=c[6]-lev|0;
          for(;;)
           {if(typeof stack==="number")
             var switch$1=1;
            else
             switch(stack[0])
              {case 0:var stack=stack[3];continue;
               case 3:var stack=stack[1];continue;
               case 4:
                var stack$0=stack[3],k=stack[1];
                if(0!==n){var stack=stack$0,n=n-1|0;continue}
                var correct=caml_equal(k,kind),switch$0=1,switch$1=0;
                break;
               default:var switch$1=1}
            if(switch$1)throw [0,_o_,_c1_];
            break}}
        else
         var _eb_=_ec_,switch$0=0}
      if(!switch$0)var correct=_eb_;
      if(1!==lev)if(!correct)return 0;
      var lev$0=correct?lev:0;
      _cY_(c,lev$0);
      if(lev===c[6])
       c[12]=[3,c[12]];
      else
       {c[6]=lev;c[12]=[3,[4,kind,c[10],c[12]]];c[10]=0}
      return 1}
    function _c3_(c,heading)
     {if(!_cW_(c)){_cY_(c,0);c[12]=_c4_}
      c[12]=[7,heading,[6,0,c[12]]];
      return 0}
    function _dC_(counter,c,lexbuf)
     {a:
      for(;;)
       {var ocaml_lex_state=0;
        for(;;)
         {var ocaml_lex_state$0=_O_(_c5_,ocaml_lex_state,lexbuf);
          if(8<ocaml_lex_state$0>>>0)
           {caml_call_gen1(lexbuf[1],lexbuf);
            var ocaml_lex_state=ocaml_lex_state$0;
            continue}
          switch(ocaml_lex_state$0)
           {case 0:_cY_(c,0);continue a;
            case 1:
             _cY_(c,0);
             if(0===c[12])
              {c[12]=[2,_cL_(61,_Q_(lexbuf))];
               c[4]=1;
               return counter<50
                       ?_dB_(counter+1|0,c,lexbuf)
                       :caml_trampoline_return(_dB_,[0,c,lexbuf])}
             throw [0,_o_,_c7_];
            case 2:
             var lev=_cL_(42,_Q_(lexbuf));
             if(!_c2_(c,0,lev))
              {var s=_Q_(lexbuf),l=caml_ml_string_length(s)-lev|0;
               if(0<l)_cN_(c,_I_(s,0,l));
               var _d5_=lev/2|0,_d4_=1;
               if(!(_d5_<1))
                {var i=_d4_;
                 for(;;)
                  {_cR_(c,0);
                   var _d6_=i+1|0;
                   if(_d5_!==i){var i=_d6_;continue}
                   break}}
               if(1===(lev&1))_cN_(c,_c8_)}
             return counter<50
                     ?_dB_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dB_,[0,c,lexbuf]);
            case 3:
             if(!_c2_(c,1,_cL_(35,_Q_(lexbuf))))_cO_(c,lexbuf);
             return counter<50
                     ?_dB_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dB_,[0,c,lexbuf]);
            case 4:
             _cY_(c,0);
             var _d7_=c[11];
             c[11]=[0,caml_call_gen1(c[1][19],0),_d7_];
             continue a;
            case 5:
             _cY_(c,0);
             b:
             for(;;)
              {var ocaml_lex_state$1=94;
               for(;;)
                {var ocaml_lex_state$2=_O_(_c5_,ocaml_lex_state$1,lexbuf);
                 if(2<ocaml_lex_state$2>>>0)
                  {caml_call_gen1(lexbuf[1],lexbuf);
                   var ocaml_lex_state$1=ocaml_lex_state$2;
                   continue}
                 switch(ocaml_lex_state$2)
                  {case 0:
                    var s$0=_Q_(lexbuf),_d8_=c[9];
                    c[9]=[0,_I_(s$0,1,caml_ml_string_length(s$0)-1|0),_d8_];
                    break;
                   case 1:
                    var _d9_=c[11],_d__=_p_(c[9]);
                    c[11]=[0,caml_call_gen1(c[1][10],_d__),_d9_];
                    c[9]=0;
                    return counter<50
                            ?_dC_(counter+1|0,c,lexbuf)
                            :caml_trampoline_return(_dC_,[0,c,lexbuf]);
                   default:var _d$_=c[9];c[9]=[0,_Q_(lexbuf),_d$_]}
                 continue b}}
            case 6:
             _c3_(c,0);
             return counter<50
                     ?_dB_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dB_,[0,c,lexbuf]);
            case 7:
             _c3_(c,1);
             return counter<50
                     ?_dB_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dB_,[0,c,lexbuf]);
            default:
             return counter<50
                     ?_dB_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dB_,[0,c,lexbuf])}}}}
    function _dB_(counter,c,lexbuf)
     {a:
      for(;;)
       {var ocaml_lex_state=25;
        for(;;)
         {var ocaml_lex_state$0=_O_(_c5_,ocaml_lex_state,lexbuf);
          if(17<ocaml_lex_state$0>>>0)
           {caml_call_gen1(lexbuf[1],lexbuf);
            var ocaml_lex_state=ocaml_lex_state$0;
            continue}
          switch(ocaml_lex_state$0)
           {case 0:
             if(c[4])_cY_(c,0);else _cO_(c,lexbuf);
             return counter<50
                     ?_dC_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dC_,[0,c,lexbuf]);
            case 1:_cR_(c,0);continue a;
            case 2:_cR_(c,1);continue a;
            case 3:
             if(c[4])_cY_(c,0);else _cO_(c,lexbuf);
             return counter<50
                     ?_dC_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dC_,[0,c,lexbuf]);
            case 4:
             if(c[5])return _cO_(c,lexbuf);
             var
              s=_Q_(lexbuf),
              addr=_I_(s,2,caml_ml_string_length(s)-4|0),
              _dV_=c[7],
              _dW_=[0,caml_call_gen1(c[1][1],addr),0];
             c[7]=[0,caml_call_gen2(c[1][7],addr,_dW_),_dV_];
             continue a;
            case 5:
             if(c[5])return _cO_(c,lexbuf);
             var
              s$0=_Q_(lexbuf),
              addr$0=_I_(s$0,10,caml_ml_string_length(s$0)+num_12|0),
              _dX_=c[7],
              _dY_=[0,caml_call_gen1(c[1][1],addr$0),0];
             c[7]=[0,caml_call_gen2(c[1][8],addr$0,_dY_),_dX_];
             continue a;
            case 6:
             if(c[5])
              _cO_(c,lexbuf);
             else
              {var
                s$1=_Q_(lexbuf),
                addr$1=_I_(s$1,2,caml_ml_string_length(s$1)-3|0);
               c[12]=[1,addr$1,c[12]];
               c[5]=1}
             continue a;
            case 7:
             var
              _dZ_=c[12],
              switch$0=
               typeof _dZ_==="number"
                ?0
                :1===_dZ_[0]?(_cU_(c,_dZ_[1],_dZ_[2]),1):0;
             if(!switch$0)_cO_(c,lexbuf);
             continue a;
            case 8:
             if(c[5])return _cO_(c,lexbuf);
             var
              addr$2=_Q_(lexbuf),
              _d0_=c[7],
              _d1_=[0,caml_call_gen1(c[1][1],addr$2),0];
             c[7]=[0,caml_call_gen2(c[1][7],addr$2,_d1_),_d0_];
             continue a;
            case 9:_cM_(c,caml_call_gen1(c[1][4],0));continue a;
            case 10:
             var s$2=_Q_(lexbuf),i=0,c$0=124,lim=caml_ml_string_length(s$2);
             for(;;)
              {if(lim<=i)throw _s_;
               if(caml_string_unsafe_get(s$2,i)===c$0)
                {var
                  url=_I_(s$2,2,i-2|0),
                  alt=_I_(s$2,i+1|0,(caml_ml_string_length(s$2)-i|0)-3|0);
                 _cM_(c,caml_call_gen2(c[1][5],url,alt));
                 continue a}
               var i=i+1|0;
               continue}
            case 11:
             var
              s$3=_Q_(lexbuf),
              txt=_I_(s$3,3,caml_ml_string_length(s$3)-6|0),
              _d2_=caml_call_gen1(c[1][1],txt),
              _d3_=[0,caml_call_gen1(c[1][21],_d2_),0];
             _cM_(c,caml_call_gen1(c[1][6],_d3_));
             continue a;
            case 12:_cN_(c,_I_(_Q_(lexbuf),1,1));continue a;
            case 13:
             if(!_cW_(c))_cO_(c,lexbuf);
             return counter<50
                     ?_dC_(counter+1|0,c,lexbuf)
                     :caml_trampoline_return(_dC_,[0,c,lexbuf]);
            case 14:
             if(_cV_(c))c[12]=[7,0,c[12]];else _cO_(c,lexbuf);continue a;
            case 15:
             if(_cV_(c))c[12]=[7,1,c[12]];else _cO_(c,lexbuf);continue a;
            case 16:_cO_(c,lexbuf);continue a;
            default:return _cY_(c,0)}}}}
    function _c6_(c,lexbuf){return caml_trampoline(_dC_(0,c,lexbuf))}
    function _c9_(e,l){_r_(function(c){return _cA_(e,c)},l);return e}
    function list_builder(jsoo_self,tag,c)
     {var
       _dS_=
        _q_
         (function(param)
           {var l=param[2],c=param[1],_dT_=l?[0,l[1],0]:0,_dU_=_l_(c,_dT_);
            return _c9_(jsoo_self.createElement("li"),_dU_)},
          c);
      return _c9_(jsoo_self.createElement(tag.toString()),_dS_)}
    function _c__(x){return x}
    function _c$_(rows)
     {var
       rows$0=
        _q_
         (function(entries)
           {var
             _dR_=
              _q_
               (function(param)
                 {var c=param[2],kind=param[1]?_da_:_db_;
                  return _c9_(doc.createElement(kind.toString()),c)},
                entries);
            return _c9_(doc.createElement("tr"),_dR_)},
          rows),
       _dQ_=[0,_c9_(doc.createElement("tbody"),rows$0),0];
      return _c9_(doc.createElement("table"),_dQ_)}
    function _dc_(param){return doc.createElement("hr")}
    function _dd_(s){return list_builder(doc,_de_,s)}
    function _df_(s){return list_builder(doc,_dg_,s)}
    function _dh_(s){return _c9_(doc.createElement("h6"),s)}
    function _di_(s){return _c9_(doc.createElement("h5"),s)}
    function _dj_(s){return _c9_(doc.createElement("h4"),s)}
    function _dk_(s){return _c9_(doc.createElement("h3"),s)}
    function _dl_(s){return _c9_(doc.createElement("h2"),s)}
    function _dm_(s){return _c9_(doc.createElement("h1"),s)}
    function _dn_(s)
     {var p=doc.createElement("pre");
      _cA_(p,doc.createTextNode(_J_(_do_,s).toString()));
      return p}
    function _dp_(s){return _c9_(doc.createElement("p"),s)}
    function _dq_(addr,s)
     {var i=unsafeCreateElement(doc,_cG_);
      i.width="480";
      i.height="360";
      i.src=
      _g_(_dr_,caml_js_to_string(window.encodeURI(addr.toString()))).toString
       ();
      i.frameBorder=str_0;
      return i}
    function _ds_(addr,s)
     {var a=unsafeCreateElement(doc,_cE_);
      a.href=addr.toString();
      return _c9_(a,s)}
    function _dt_(s){return _c9_(doc.createElement("tt"),s)}
    function _du_(addr,alt)
     {var i=unsafeCreateElement(doc,_cF_);
      i.src=addr.toString();
      i.alt=alt.toString();
      return i}
    function _dv_(param){return doc.createElement(str_br)}
    function _dw_(s){return _c9_(doc.createElement("em"),s)}
    function _dx_(s){return _c9_(doc.createElement("strong"),s)}
    var
     b=
      [0,
       function(s){return doc.createTextNode(s.toString())},
       _dx_,
       _dw_,
       _dv_,
       _du_,
       _dt_,
       _ds_,
       _dq_,
       _dp_,
       _dn_,
       _dm_,
       _dl_,
       _dk_,
       _dj_,
       _di_,
       _dh_,
       _df_,
       _dd_,
       _dc_,
       _c$_,
       _c__];
    function _dy_(s)
     {var
       _dH_=[0],
       _dI_=1,
       _dJ_=0,
       _dK_=0,
       _dL_=0,
       _dM_=0,
       _dN_=0,
       _dO_=caml_ml_string_length(s),
       _dG_=_z_(s),
       c=[0,b,0,0,0,0,0,0,0,0,0,0,0];
      _c6_
       (c,
        [0,
         function(lexbuf){lexbuf[9]=1;return 0},
         _dG_,
         _dO_,
         _dN_,
         _dM_,
         _dL_,
         _dK_,
         _dJ_,
         _dI_,
         _dH_,
         _P_,
         _P_]);
      var _dP_=_p_(c[11]);
      return _c9_(createDiv(doc),_dP_)}
    function replace_child(p,n)
     {var c=p.firstChild;if(c!=no_handler)p.removeChild(c);return _cA_(p,n)}
    function f(param)
     {var body=doc.getElementById("wiki_demo");
      if(body==no_handler)throw [0,_o_,_dz_];
      var textbox=unsafeCreateElementEx(0,0,doc,_cB_);
      textbox.rows=20;
      textbox.cols=80;
      textbox.value=
      "\n\n====this is h4\n\n# number list  el 1\n# number list e2 2 //with italic text\n\n\n//with italic\n\n* bullet list el1 ** with bold text\n* bullet list el2 ** with bold // and italic text\n\n<<youtube 1XNTjVScm_8>>\n\n[[http://ya.ru|Link to Yandex]]\n\n[[http://google.com]]\n\n{{http://icons-search.com/img/yellowicon/firefox_win.zip/Firefox_Thunderbird_Win-icons-Firefox.ico-128x128.png|mail icon}}\n\n{{{\n== [[Nowiki]]:\n//**don't** format//\n}}}\n\n\n";
      var preview=createDiv(doc);
      preview.style.border="1px black dashed";
      preview.style.padding="5px";
      _cA_(body,textbox);
      _cA_(body,unsafeCreateElement(doc,_cD_));
      _cA_(body,preview);
      function dyn_preview(old_text,n)
       {var text=caml_js_to_string(textbox.value);
        if(caml_string_notequal(text,old_text))
         {try {replace_child(preview,_dy_(text))}catch(_dF_){}var n$0=20}
        else
         var n$0=max(0,n-1|0);
        function _dD_(param){return dyn_preview(text,n$0)}
        var _dE_=0===n$0?0.5:0.1;
        return bind(sleep(_dE_),_dD_)}
      dyn_preview(_dA_,0);
      return false$0}
    window.onload=
    function(jsoo_self)
     {if(1-(jsoo_self==no_handler?1:0))
       {var res=f(jsoo_self);
        if(!(res|0))jsoo_self.preventDefault();
        return res}
      var jsoo_obj=event,match=f(jsoo_obj);
      if(!(match|0))jsoo_obj.returnValue=match;
      return match};
    do_at_exit(0);
    return}
  (function(){return this}()));

//# sourceMappingURL=wiki.map