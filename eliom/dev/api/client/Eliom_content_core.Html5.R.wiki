=Module <<a_api_type subproject="client" | module Eliom_content_core.Html5.R >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|R>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module Eliom_content_core.Html5.R >><<span class="ocsforge_color_keyword"|end>>>>~Typed interface for building valid ~H~T~M~L~5 tree from
      [[http://erratique.ch/software/react| ~React]] signals~.
      ~H~T~M~L~5~'s trees are automatically updated whenever
      corresponding signals change~.


      <<a_api project="tyxml" | module type Html5_sigs.T >> ~.

----
<<pre id="VALnode" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|node>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  'a <<a_api subproject="client" text="Eliom_content_core.Html5.elt" | type Eliom_content_core.Html5.elt >> <<span class="ocsforge_color_uid"|React>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|signal>> <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<a_api subproject="client" text="Eliom_content_core.Html5.elt" | type Eliom_content_core.Html5.elt >>>>>><<div class="odocwiki_info"|the function <<span class="odocwiki_inlinecode"|node s>> create an ~H~T~M~L~5 <<span class="odocwiki_inlinecode"|elt>> from a signal <<span class="odocwiki_inlinecode"|s>>~.
    ~The resulting ~H~T~M~L~5 <<span class="odocwiki_inlinecode"|elt>> can then be used like anyother ~H~T~M~L~5 <<span class="odocwiki_inlinecode"|elt>>
>>
<<pre id="VALfilter_attrib" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|filter~_attrib>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  'a <<a_api subproject="client" text="Eliom_content_core.Html5.attrib" | type Eliom_content_core.Html5.attrib >> <<span class="ocsforge_color_delimiter"| -> >>\\  bool <<span class="ocsforge_color_uid"|React>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|signal>> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api subproject="client" text="Eliom_content_core.Html5.attrib" | type Eliom_content_core.Html5.attrib >>>>>><<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="client" text="Raw" | module Eliom_content_core.Html5.R.Raw >> <<span class="ocsforge_color_delimiter"|~:>> \\  <<span class="odocwiki_type"|<<span class="ocsforge_color_uid"|Html5_sigs.Make>>(Xml_wed)(<<span class="ocsforge_color_uid"|Svg.R.Raw>>).T>><<span class="odocwiki_type"|  with type (+'a) elt = 'a elt\\          and type (+'a) attrib = 'a attrib>>>><<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api subproject="client" | module Eliom_content_core.Html5.R.Raw >>>>
