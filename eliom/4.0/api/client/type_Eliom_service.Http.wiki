<<code language="ocaml" | sig
  val service :
    ?rt:'rt Eliom_service.rt ->
    ?https:bool ->
    path:Eliom_lib.Url.path ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?priority:int ->
    get_params:('get, [< Eliom_service.suff ] as 'a, 'gn)
               Eliom_parameter.params_type ->
    unit ->
    ('get, unit,
     [> `Attached of
          ([> `Internal of [> `Service ] ], [> `Get ]) Eliom_service.a_s ],
     'a, 'gn, unit, [< Eliom_service.registrable > `Registrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val post_service :
    ?rt:'rt Eliom_service.rt ->
    ?https:bool ->
    fallback:('get, unit,
              [ `Attached of
                  ([ `Internal of [ `Coservice | `Service ] ], [ `Get ])
                  Eliom_service.a_s ],
              [< Eliom_service.suff ] as 'a, 'gn, unit, [< `Registrable ],
              [< Eliom_service.non_ocaml_service ])
             Eliom_service.service ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?priority:int ->
    post_params:('post, [ `WithoutSuffix ], 'pn) Eliom_parameter.params_type ->
    unit ->
    ('get, 'post,
     [> `Attached of
          ([> `Internal of [ `Coservice | `Service ] ], [> `Post ])
          Eliom_service.a_s ],
     'a, 'gn, 'pn, [< Eliom_service.registrable > `Registrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val coservice :
    ?rt:'rt Eliom_service.rt ->
    ?name:string ->
    ?csrf_safe:bool ->
    ?csrf_scope:[< Eliom_common.user_scope ] ->
    ?csrf_secure:bool ->
    ?max_use:int ->
    ?timeout:float ->
    ?https:bool ->
    fallback:(unit, unit,
              [ `Attached of
                  ([ `Internal of [ `Service ] ], [ `Get ]) Eliom_service.a_s ],
              [ `WithoutSuffix ], unit, unit, [< Eliom_service.registrable ],
              [< Eliom_service.non_ocaml_service ])
             Eliom_service.service ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
    unit ->
    ('get, unit,
     [> `Attached of
          ([> `Internal of [> `Coservice ] ], [> `Get ]) Eliom_service.a_s ],
     [ `WithoutSuffix ], 'gn, unit,
     [< Eliom_service.registrable > `Registrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val post_coservice :
    ?rt:'rt Eliom_service.rt ->
    ?name:string ->
    ?csrf_safe:bool ->
    ?csrf_scope:[< Eliom_common.user_scope ] ->
    ?csrf_secure:bool ->
    ?max_use:int ->
    ?timeout:float ->
    ?https:bool ->
    fallback:('get, unit,
              [ `Attached of
                  ([ `Internal of [< `Coservice | `Service ] ], [ `Get ])
                  Eliom_service.a_s ],
              [< Eliom_service.suff ] as 'a, 'gn, unit, [< `Registrable ],
              [< Eliom_service.non_ocaml_service ])
             Eliom_service.service ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    post_params:('post, [ `WithoutSuffix ], 'pn) Eliom_parameter.params_type ->
    unit ->
    ('get, 'post,
     [> `Attached of
          ([> `Internal of [> `Coservice ] ], [> `Post ]) Eliom_service.a_s ],
     'a, 'gn, 'pn, [< Eliom_service.registrable > `Registrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val coservice' :
    ?rt:'rt Eliom_service.rt ->
    ?name:string ->
    ?csrf_safe:bool ->
    ?csrf_scope:[< Eliom_common.user_scope ] ->
    ?csrf_secure:bool ->
    ?max_use:int ->
    ?timeout:float ->
    ?https:bool ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    get_params:('get, [ `WithoutSuffix ], 'gn) Eliom_parameter.params_type ->
    unit ->
    ('get, unit, [> `Nonattached of [> `Get ] Eliom_service.na_s ],
     [ `WithoutSuffix ], 'gn, unit,
     [< Eliom_service.registrable > `Registrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val post_coservice' :
    ?rt:'rt Eliom_service.rt ->
    ?name:string ->
    ?csrf_safe:bool ->
    ?csrf_scope:[< Eliom_common.user_scope ] ->
    ?csrf_secure:bool ->
    ?max_use:int ->
    ?timeout:float ->
    ?https:bool ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?keep_get_na_params:bool ->
    post_params:('post, [ `WithoutSuffix ], 'pn) Eliom_parameter.params_type ->
    unit ->
    (unit, 'post, [> `Nonattached of [> `Post ] Eliom_service.na_s ],
     [ `WithoutSuffix ], unit, 'pn,
     [< Eliom_service.registrable > `Registrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val external_service :
    prefix:string ->
    path:Eliom_lib.Url.path ->
    ?rt:'rt Eliom_service.rt ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    get_params:('get, [< Eliom_service.suff ] as 'a, 'gn)
               Eliom_parameter.params_type ->
    unit ->
    ('get, unit,
     [> `Attached of ([> `External ], [> `Get ]) Eliom_service.a_s ], 'a,
     'gn, unit, [< Eliom_service.registrable > `Unregistrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
  val external_post_service :
    prefix:string ->
    path:Eliom_lib.Url.path ->
    ?rt:'rt Eliom_service.rt ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    get_params:('get, [< Eliom_service.suff ] as 'a, 'gn)
               Eliom_parameter.params_type ->
    post_params:('post, [ `WithoutSuffix ], 'pn) Eliom_parameter.params_type ->
    unit ->
    ('get, 'post,
     [> `Attached of ([> `External ], [> `Post ]) Eliom_service.a_s ], 'a,
     'gn, 'pn, [< Eliom_service.registrable > `Unregistrable ],
     [> Eliom_service.http_service ])
    Eliom_service.service
end >>