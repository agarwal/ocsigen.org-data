=Module <<a_api_type subproject="client" | module Eliom_pervasives.Regexp >> =
<<div class="code"|<<span class="keyword"|module>> Regexp: <<span class='code'|sig>><<a_api subproject="client" text=".." | module Eliom_pervasives.Regexp >><<span class='code'|end>>>>
----
<<div class="code" id="TYPEt"|<<span class="keyword"|type>> t>>

<<div class="code" id="TYPEflag"|<<span class="keyword"|type>> flag = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Global_search>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Case_insensitive>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Multi_line>>|>>

<<div id="VALlast_index" class="code"|<<span class="keyword"|val>> last~_index : <<span class="code type"|<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> -> int>>>><<div id="VALmake" class="code"|<<span class="keyword"|val>> make : <<span class="code type"|\\{{{   }}}?global:bool ->\\{{{   }}}  ?case_insensitive:bool ->\\{{{   }}}  ?multi_line:bool -> string -> <<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >>>>>><<div id="VALtest" class="code"|<<span class="keyword"|val>> test : <<span class="code type"|<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> -> string -> bool>>>><<div id="VALexec" class="code"|<<span class="keyword"|val>> exec : <<span class="code type"|<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> -> string -> string array>>>><<div id="VALindex" class="code"|<<span class="keyword"|val>> index : <<span class="code type"|<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> -> string -> int>>>><<div id="VALreplace" class="code"|<<span class="keyword"|val>> replace : <<span class="code type"|<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> -> string -> string -> string>>>><<div id="VALreplace_fun" class="code"|<<span class="keyword"|val>> replace~_fun : <<span class="code type"|\\{{{   }}}<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> ->\\{{{   }}}  (int -> string array -> string) -> string -> string>>>><<div id="VALsplit" class="code"|<<span class="keyword"|val>> split : <<span class="code type"|<<a_api subproject="client" text="t" | type Eliom_pervasives.Regexp.t >> -> string -> string array>>>>