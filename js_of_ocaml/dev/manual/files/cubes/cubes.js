
// Generated by js_of_ocaml 2.7
(function(joo_global_object)
   {"use strict";
    var
     num_254=254,
     num_255=255,
     num_360=360,
     num_224=224,
     str_i$0="i",
     str_Invalid_argument="Invalid_argument",
     str$2='"',
     num_16777215=16777215,
     str$13="@[",
     str_function="function",
     str_characters=", characters ",
     num_250=250,
     num_1024=1024,
     num_0_5=0.5,
     str_o="o",
     str_jsError="jsError",
     str_Program_not_lin_abr=
      "(Program not linked with -g, cannot print stack backtrace)\n",
     num_512=512,
     str_End_of_file="End_of_file",
     num_120=120,
     num_2147483e3=2147483e3,
     str_Failure="Failure",
     num_10=-10,
     str$9="% ",
     str_Stack_overflow="Stack_overflow",
     str$8="",
     num_128=128,
     num_100=100,
     str_0="0",
     num_248=248,
     str_Not_found="Not_found",
     str$12="%#",
     str_Sys_blocked_io="Sys_blocked_io",
     str_fd="fd ",
     str_Match_failure="Match_failure",
     str_camlinternalForm_abr="camlinternalFormat.ml",
     str_Division_by_zero="Division_by_zero",
     num_1e3=1e3,
     str_src_core_lwt_ml="src/core/lwt.ml",
     str_x="x",
     str_Sys_error="Sys_error",
     str$7=".",
     str$6="+",
     num_65535=65535,
     num_1073741823=1073741823,
     str_u="%u",
     str_d="%d",
     num_110=110,
     num_57343=57343,
     num_252=252,
     str$1="'",
     num_127=127,
     str$11="@{",
     str$0=" ",
     str_e="e",
     str_Undefined_recurs_abr="Undefined_recursive_module",
     str_d$0="d",
     str_X="X",
     str$10="-",
     str_nan="nan",
     str_line='", line ',
     num_240=240,
     num_2048=2048,
     str_12g="%.12g",
     num_56320=56320,
     str_file_already_abr=" : file already exists",
     str$5="%+",
     str$3="%",
     str_Assert_failure="Assert_failure",
     str$4="/",
     str_i="%i",
     str_Out_of_memory="Out_of_memory",
     str_index_out_of_bounds="index out of bounds";
    function raw_array_sub(a,i,l)
     {var b=new Array(l);for(var j=0;j<l;j++)b[j]=a[i+j];return b}
    function caml_subarray_to_string(a,i,len)
     {var f=String.fromCharCode;
      if(i==0&&len<=4096&&len==a.length)return f.apply(null,a);
      var s=str$8;
      for(;0<len;i+=num_1024,len-=num_1024)
       s+=f.apply(null,raw_array_sub(a,i,Math.min(len,num_1024)));
      return s}
    function caml_convert_string_to_array(s)
     {var a=new Array(s.l),b=s.c,l=b.length,i=0;
      for(;i<l;i++)a[i]=b.charCodeAt(i);
      for(l=s.l;i<l;i++)a[i]=0;
      s.c=a;
      s.t=4;
      return a}
    function caml_blit_string(s1,i1,s2,i2,len)
     {if(len==0)return 0;
      if(i2==0&&(len>=s2.l||s2.t==2&&len>=s2.c.length))
       {s2.c=
        s1.t==4
         ?caml_subarray_to_string(s1.c,i1,len)
         :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
        s2.t=s2.c.length==s2.l?0:2}
      else
       if(s2.t==2&&i2==s2.c.length)
        {s2.c+=
         s1.t==4
          ?caml_subarray_to_string(s1.c,i1,len)
          :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
         s2.t=s2.c.length==s2.l?0:2}
       else
        {if(s2.t!=4)caml_convert_string_to_array(s2);
         var c1=s1.c,c2=s2.c;
         if(s1.t==4)
          for(var i=0;i<len;i++)c2[i2+i]=c1[i1+i];
         else
          {var l=Math.min(len,c1.length-i1);
           for(var i=0;i<l;i++)c2[i2+i]=c1.charCodeAt(i1+i);
           for(;i<len;i++)c2[i2+i]=0}}
      return 0}
    function raw_array_append_one(a,x)
     {var l=a.length,b=new Array(l+1),i=0;
      for(;i<l;i++)b[i]=a[i];
      b[i]=x;
      return b}
    function caml_call_gen(f,args)
     {if(f.fun)return caml_call_gen(f.fun,args);
      var n=f.length,argsLen=args.length,d=n-argsLen;
      if(d==0)
       return f.apply(null,args);
      else
       if(d<0)
        return caml_call_gen
                (f.apply(null,raw_array_sub(args,0,n)),
                 raw_array_sub(args,n,argsLen-n));
       else
        return function(x)
         {return caml_call_gen(f,raw_array_append_one(args,x))}}
    function caml_raise_with_arg(tag,arg){throw [0,tag,arg]}
    function caml_str_repeat(n,s)
     {if(s.repeat)return s.repeat(n);
      var r=str$8,l=0;
      if(n==0)return r;
      for(;;)
       {if(n&1)r+=s;n>>=1;if(n==0)return r;s+=s;l++;if(l==9)s.slice(0,1)}}
    function caml_convert_string_to_bytes(s)
     {if(s.t==2)
       s.c+=caml_str_repeat(s.l-s.c.length,"\0");
      else
       s.c=caml_subarray_to_string(s.c,0,s.c.length);
      s.t=0}
    function caml_is_ascii(s)
     {if(s.length<24)
       {for(var i=0;i<s.length;i++)if(s.charCodeAt(i)>num_127)return false;
        return true}
      else
       return !/[^\x00-\x7f]/.test(s)}
    function caml_utf16_of_utf8(s)
     {for(var b=str$8,t=str$8,c,c1,c2,v,i=0,l=s.length;i<l;i++)
       {c1=s.charCodeAt(i);
        if(c1<num_128)
         {for(var j=i+1;j<l&&(c1=s.charCodeAt(j))<num_128;j++);
          if(j-i>num_512)
           {t.substr(0,1);b+=t;t=str$8;b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        v=1;
        if(++i<l&&((c2=s.charCodeAt(i))&-64)==num_128)
         {c=c2+(c1<<6);
          if(c1<num_224)
           {v=c-12416;if(v<num_128)v=1}
          else
           {v=2;
            if(++i<l&&((c2=s.charCodeAt(i))&-64)==num_128)
             {c=c2+(c<<6);
              if(c1<num_240)
               {v=c-925824;if(v<num_2048||v>=55295&&v<57344)v=2}
              else
               {v=3;
                if(++i<l&&((c2=s.charCodeAt(i))&-64)==num_128&&c1<245)
                 {v=c2-63447168+(c<<6);if(v<65536||v>1114111)v=3}}}}}
        if(v<4)
         {i-=v;t+="\ufffd"}
        else
         if(v>num_65535)
          t+=String.fromCharCode(55232+(v>>10),num_56320+(v&1023));
         else
          t+=String.fromCharCode(v);
        if(t.length>num_1024){t.substr(0,1);b+=t;t=str$8}}
      return b+t}
    function caml_to_js_string(s)
     {switch(s.t)
       {case 9:return s.c;
        default:caml_convert_string_to_bytes(s);case 0:
         if(caml_is_ascii(s.c)){s.t=9;return s.c}s.t=8;
        case 8:return caml_utf16_of_utf8(s.c)
        }}
    function MlString(tag,contents,length)
     {this.t=tag;this.c=contents;this.l=length}
    MlString.prototype.toString=function(){return caml_to_js_string(this)};
    function caml_new_string(s){return new MlString(0,s,s.length)}
    function caml_raise_with_string(tag,msg)
     {caml_raise_with_arg(tag,caml_new_string(msg))}
    var caml_global_data=[0];
    function caml_invalid_argument(msg)
     {caml_raise_with_string(caml_global_data.Invalid_argument,msg)}
    function caml_array_bound_error()
     {caml_invalid_argument(str_index_out_of_bounds)}
    function caml_check_bound(array,index)
     {if(index>>>0>=array.length-1)caml_array_bound_error();return array}
    function caml_classify_float(x)
     {if(isFinite(x))
       {if(Math.abs(x)>=2.22507385850720138e-308)return 0;
        if(x!=0)return 1;
        return 2}
      return isNaN(x)?4:3}
    function caml_failwith(msg)
     {caml_raise_with_string(caml_global_data.Failure,msg)}
    function caml_convert_raw_backtrace_slot()
     {caml_failwith("caml_convert_raw_backtrace_slot")}
    function caml_create_string(len)
     {if(len<0)caml_invalid_argument("String.create");
      return new MlString(len?2:9,str$8,len)}
    function caml_fill_string(s,i,l,c)
     {if(l>0)
       if(i==0&&(l>=s.l||s.t==2&&l>=s.c.length))
        if(c==0)
         {s.c=str$8;s.t=2}
        else
         {s.c=caml_str_repeat(l,String.fromCharCode(c));s.t=l==s.l?0:2}
       else
        {if(s.t!=4)caml_convert_string_to_array(s);for(l+=i;i<l;i++)s.c[i]=c}
      return 0}
    function caml_bytes_of_string(s)
     {if((s.t&6)!=0)caml_convert_string_to_bytes(s);return s.c}
    function caml_parse_format(fmt)
     {fmt=caml_bytes_of_string(fmt);
      var len=fmt.length;
      if(len>31)caml_invalid_argument("format_int: format too long");
      var
       f=
        {justify:str$6,
         signstyle:str$10,
         filler:str$0,
         alternate:false,
         base:0,
         signedconv:false,
         width:0,
         uppercase:false,
         sign:1,
         prec:-1,
         conv:"f"};
      for(var i=0;i<len;i++)
       {var c=fmt.charAt(i);
        switch(c)
         {case "-":f.justify=str$10;break;
          case "+":
          case " ":f.signstyle=c;break;
          case "0":f.filler=str_0;break;
          case "#":f.alternate=true;break;
          case "1":
          case "2":
          case "3":
          case "4":
          case "5":
          case "6":
          case "7":
          case "8":
          case "9":
           f.width=0;
           while(c=fmt.charCodeAt(i)-48,c>=0&&c<=9){f.width=f.width*10+c;i++}
           i--;
           break;
          case ".":
           f.prec=0;
           i++;
           while(c=fmt.charCodeAt(i)-48,c>=0&&c<=9){f.prec=f.prec*10+c;i++}
           i--;
          case "d":
          case "i":f.signedconv=true;
          case "u":f.base=10;break;
          case "x":f.base=16;break;
          case "X":f.base=16;f.uppercase=true;break;
          case "o":f.base=8;break;
          case "e":
          case "f":
          case "g":f.signedconv=true;f.conv=c;break;
          case "E":
          case "F":
          case "G":
           f.signedconv=true;f.uppercase=true;f.conv=c.toLowerCase();break
          }}
      return f}
    function caml_finish_formatting(f,rawbuffer)
     {if(f.uppercase)rawbuffer=rawbuffer.toUpperCase();
      var len=rawbuffer.length;
      if(f.signedconv&&(f.sign<0||f.signstyle!=str$10))len++;
      if(f.alternate){if(f.base==8)len+=1;if(f.base==16)len+=2}
      var buffer=str$8;
      if(f.justify==str$6&&f.filler==str$0)
       for(var i=len;i<f.width;i++)buffer+=str$0;
      if(f.signedconv)
       if(f.sign<0)
        buffer+=str$10;
       else
        if(f.signstyle!=str$10)buffer+=f.signstyle;
      if(f.alternate&&f.base==8)buffer+=str_0;
      if(f.alternate&&f.base==16)buffer+="0x";
      if(f.justify==str$6&&f.filler==str_0)
       for(var i=len;i<f.width;i++)buffer+=str_0;
      buffer+=rawbuffer;
      if(f.justify==str$10)for(var i=len;i<f.width;i++)buffer+=str$0;
      return caml_new_string(buffer)}
    function caml_format_float(fmt,x)
     {var s,f=caml_parse_format(fmt),prec=f.prec<0?6:f.prec;
      if(x<0||x==0&&1/x==-Infinity){f.sign=-1;x=-x}
      if(isNaN(x))
       {s=str_nan;f.filler=str$0}
      else
       if(!isFinite(x))
        {s="inf";f.filler=str$0}
       else
        switch(f.conv)
         {case "e":
           var s=x.toExponential(prec),i=s.length;
           if(s.charAt(i-3)==str_e)s=s.slice(0,i-1)+str_0+s.slice(i-1);
           break;
          case "f":s=x.toFixed(prec);break;
          case "g":
           prec=prec?prec:1;
           s=x.toExponential(prec-1);
           var j=s.indexOf(str_e),exp=+s.slice(j+1);
           if(exp<-4||x>=1e+21||x.toFixed(0).length>prec)
            {var i=j-1;
             while(s.charAt(i)==str_0)i--;
             if(s.charAt(i)==str$7)i--;
             s=s.slice(0,i+1)+s.slice(j);
             i=s.length;
             if(s.charAt(i-3)==str_e)s=s.slice(0,i-1)+str_0+s.slice(i-1);
             break}
           else
            {var p=prec;
             if(exp<0)
              {p-=exp+1;s=x.toFixed(p)}
             else
              while(s=x.toFixed(p),s.length>prec+1)p--;
             if(p)
              {var i=s.length-1;
               while(s.charAt(i)==str_0)i--;
               if(s.charAt(i)==str$7)i--;
               s=s.slice(0,i+1)}}
           break
          }
      return caml_finish_formatting(f,s)}
    function caml_format_int(fmt,i)
     {if(caml_bytes_of_string(fmt)==str_d)return caml_new_string(str$8+i);
      var f=caml_parse_format(fmt);
      if(i<0)if(f.signedconv){f.sign=-1;i=-i}else i>>>=0;
      var s=i.toString(f.base);
      if(f.prec>=0)
       {f.filler=str$0;
        var n=f.prec-s.length;
        if(n>0)s=caml_str_repeat(n,str_0)+s}
      return caml_finish_formatting(f,s)}
    function caml_get_exception_raw_backtrace(){return [0]}
    function caml_int64_compare(x,y)
     {var x3=x[3]<<16,y3=y[3]<<16;
      if(x3>y3)return 1;
      if(x3<y3)return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int_compare(a,b){if(a<b)return -1;if(a==b)return 0;return 1}
    function caml_string_compare(s1,s2)
     {s1.t&6&&caml_convert_string_to_bytes(s1);
      s2.t&6&&caml_convert_string_to_bytes(s2);
      return s1.c<s2.c?-1:s1.c>s2.c?1:0}
    function caml_compare_val(a,b,total)
     {var stack=[];
      for(;;)
       {if(!(total&&a===b))
         if(a instanceof MlString)
          if(b instanceof MlString)
           {if(a!==b){var x=caml_string_compare(a,b);if(x!=0)return x}}
          else
           return 1;
         else
          if(a instanceof Array&&a[0]===(a[0]|0))
           {var ta=a[0];
            if(ta===num_254)ta=0;
            if(ta===num_250)
             {a=a[1];continue}
            else
             if(b instanceof Array&&b[0]===(b[0]|0))
              {var tb=b[0];
               if(tb===num_254)tb=0;
               if(tb===num_250)
                {b=b[1];continue}
               else
                if(ta!=tb)
                 return ta<tb?-1:1;
                else
                 switch(ta)
                  {case 248:
                    var x=caml_int_compare(a[2],b[2]);if(x!=0)return x;break;
                   case 251:caml_invalid_argument("equal: abstract value");
                   case 255:
                    var x=caml_int64_compare(a,b);if(x!=0)return x;break;
                   default:
                    if(a.length!=b.length)return a.length<b.length?-1:1;
                    if(a.length>1)stack.push(a,b,1)}}
             else
              return 1}
          else
           if(b instanceof MlString||b instanceof Array&&b[0]===(b[0]|0))
            return -1;
           else
            if(typeof a!="number"&&a&&a.compare)
             return a.compare(b,total);
            else
             if(typeof a==str_function)
              caml_invalid_argument("equal: functional value");
             else
              {if(a<b)return -1;
               if(a>b)return 1;
               if(a!=b)
                {if(!total)return NaN;if(a==a)return 1;if(b==b)return -1}}
        if(stack.length==0)return 0;
        var i=stack.pop();
        b=stack.pop();
        a=stack.pop();
        if(i+1<a.length)stack.push(a,b,i+1);
        a=a[i];
        b=b[i]}}
    function caml_greaterequal(x,y){return +(caml_compare_val(x,y,false)>=0)}
    function caml_int64_is_zero(x){return (x[3]|x[2]|x[1])==0}
    function caml_int64_of_int32(x)
     {return [num_255,x&num_16777215,x>>24&num_16777215,x>>31&num_65535]}
    function caml_obj_dup(x)
     {var l=x.length,a=new Array(l);for(var i=0;i<l;i++)a[i]=x[i];return a}
    function caml_int64_sub(x,y)
     {var z1=x[1]-y[1],z2=x[2]-y[2]+(z1>>24),z3=x[3]-y[3]+(z2>>24);
      return [num_255,z1&num_16777215,z2&num_16777215,z3&num_65535]}
    function caml_int64_ucompare(x,y)
     {if(x[3]>y[3])return 1;
      if(x[3]<y[3])return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int64_lsl1(x)
     {x[3]=x[3]<<1|x[2]>>23;
      x[2]=(x[2]<<1|x[1]>>23)&num_16777215;
      x[1]=x[1]<<1&num_16777215}
    function caml_int64_lsr1(x)
     {x[1]=(x[1]>>>1|x[2]<<23)&num_16777215;
      x[2]=(x[2]>>>1|x[3]<<23)&num_16777215;
      x[3]=x[3]>>>1}
    function caml_int64_udivmod(x,y)
     {var
       offset=0,
       modulus=caml_obj_dup(x),
       divisor=caml_obj_dup(y),
       quotient=[num_255,0,0,0];
      while(caml_int64_ucompare(modulus,divisor)>0)
       {offset++;caml_int64_lsl1(divisor)}
      while(offset>=0)
       {offset--;
        caml_int64_lsl1(quotient);
        if(caml_int64_ucompare(modulus,divisor)>=0)
         {quotient[1]++;modulus=caml_int64_sub(modulus,divisor)}
        caml_int64_lsr1(divisor)}
      return [0,quotient,modulus]}
    function caml_int64_to_int32(x){return x[1]|x[2]<<24}
    function caml_int64_is_negative(x){return x[3]<<16<0}
    function caml_int64_neg(x)
     {var y1=-x[1],y2=-x[2]+(y1>>24),y3=-x[3]+(y2>>24);
      return [num_255,y1&num_16777215,y2&num_16777215,y3&num_65535]}
    function caml_int64_format(fmt,x)
     {var f=caml_parse_format(fmt);
      if(f.signedconv&&caml_int64_is_negative(x))
       {f.sign=-1;x=caml_int64_neg(x)}
      var
       buffer=str$8,
       wbase=caml_int64_of_int32(f.base),
       cvtbl="0123456789abcdef";
      do
       {var p=caml_int64_udivmod(x,wbase);
        x=p[1];
        buffer=cvtbl.charAt(caml_int64_to_int32(p[2]))+buffer}
      while
       (!caml_int64_is_zero(x));
      if(f.prec>=0)
       {f.filler=str$0;
        var n=f.prec-buffer.length;
        if(n>0)buffer=caml_str_repeat(n,str_0)+buffer}
      return caml_finish_formatting(f,buffer)}
    function caml_is_printable(c){return +(c>31&&c<num_127)}
    function caml_js_get_console()
     {var
       c=joo_global_object.console?joo_global_object.console:{},
       m=
        ["log",
         "debug",
         "info",
         "warn",
         "error",
         "assert",
         "dir",
         "dirxml",
         "trace",
         "group",
         "groupCollapsed",
         "groupEnd",
         "time",
         "timeEnd"];
      function f(){}
      for(var i=0;i<m.length;i++)if(!c[m[i]])c[m[i]]=f;
      return c}
    function caml_utf8_of_utf16(s)
     {for(var b=str$8,t=b,c,d,i=0,l=s.length;i<l;i++)
       {c=s.charCodeAt(i);
        if(c<num_128)
         {for(var j=i+1;j<l&&(c=s.charCodeAt(j))<num_128;j++);
          if(j-i>num_512)
           {t.substr(0,1);b+=t;t=str$8;b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        if(c<num_2048)
         {t+=String.fromCharCode(192|c>>6);
          t+=String.fromCharCode(num_128|c&63)}
        else
         if(c<55296||c>=num_57343)
          t+=String.fromCharCode(num_224|c>>12,num_128|c>>6&63,num_128|c&63);
         else
          if(c>=56319||i+1==l||(d=s.charCodeAt(i+1))<num_56320||d>num_57343)
           t+="\xef\xbf\xbd";
          else
           {i++;
            c=(c<<10)+d-56613888;
            t+=
            String.fromCharCode
             (num_240|c>>18,num_128|c>>12&63,num_128|c>>6&63,num_128|c&63)}
        if(t.length>num_1024){t.substr(0,1);b+=t;t=str$8}}
      return b+t}
    function caml_js_to_string(s)
     {var tag=9;
      if(!caml_is_ascii(s))tag=8,s=caml_utf8_of_utf16(s);
      return new MlString(tag,s,s.length)}
    function raw_array_copy(a)
     {var l=a.length,b=new Array(l);for(var i=0;i<l;i++)b[i]=a[i];return b}
    function caml_js_wrap_callback(f)
     {return function()
       {return arguments.length>0
                ?caml_call_gen(f,raw_array_copy(arguments))
                :caml_call_gen(f,[undefined])}}
    function caml_make_vect(len,init)
     {var len=len+1|0,b=new Array(len);
      b[0]=0;
      for(var i=1;i<len;i++)b[i]=init;
      return b}
    function caml_string_of_array(a){return new MlString(4,a,a.length)}
    var
     caml_md5_string=
      function()
        {function add(x,y){return x+y|0}
         function xx(q,a,b,x,s,t)
          {a=add(add(a,q),add(x,t));return add(a<<s|a>>>32-s,b)}
         function ff(a,b,c,d,x,s,t){return xx(b&c|~b&d,a,b,x,s,t)}
         function gg(a,b,c,d,x,s,t){return xx(b&d|c&~d,a,b,x,s,t)}
         function hh(a,b,c,d,x,s,t){return xx(b^c^d,a,b,x,s,t)}
         function ii(a,b,c,d,x,s,t){return xx(c^(b|~d),a,b,x,s,t)}
         function md5(buffer,length)
          {var i=length;
           buffer[i>>2]|=num_128<<8*(i&3);
           for(i=(i&~3)+8;(i&63)<60;i+=4)buffer[(i>>2)-1]=0;
           buffer[(i>>2)-1]=length<<3;
           buffer[i>>2]=length>>29&536870911;
           var w=[1732584193,4023233417,2562383102,271733878];
           for(i=0;i<buffer.length;i+=16)
            {var a=w[0],b=w[1],c=w[2],d=w[3];
             a=ff(a,b,c,d,buffer[i+0],7,3614090360);
             d=ff(d,a,b,c,buffer[i+1],12,3905402710);
             c=ff(c,d,a,b,buffer[i+2],17,606105819);
             b=ff(b,c,d,a,buffer[i+3],22,3250441966);
             a=ff(a,b,c,d,buffer[i+4],7,4118548399);
             d=ff(d,a,b,c,buffer[i+5],12,1200080426);
             c=ff(c,d,a,b,buffer[i+6],17,2821735955);
             b=ff(b,c,d,a,buffer[i+7],22,4249261313);
             a=ff(a,b,c,d,buffer[i+8],7,1770035416);
             d=ff(d,a,b,c,buffer[i+9],12,2336552879);
             c=ff(c,d,a,b,buffer[i+10],17,4294925233);
             b=ff(b,c,d,a,buffer[i+11],22,2304563134);
             a=ff(a,b,c,d,buffer[i+12],7,1804603682);
             d=ff(d,a,b,c,buffer[i+13],12,4254626195);
             c=ff(c,d,a,b,buffer[i+14],17,2792965006);
             b=ff(b,c,d,a,buffer[i+15],22,1236535329);
             a=gg(a,b,c,d,buffer[i+1],5,4129170786);
             d=gg(d,a,b,c,buffer[i+6],9,3225465664);
             c=gg(c,d,a,b,buffer[i+11],14,643717713);
             b=gg(b,c,d,a,buffer[i+0],20,3921069994);
             a=gg(a,b,c,d,buffer[i+5],5,3593408605);
             d=gg(d,a,b,c,buffer[i+10],9,38016083);
             c=gg(c,d,a,b,buffer[i+15],14,3634488961);
             b=gg(b,c,d,a,buffer[i+4],20,3889429448);
             a=gg(a,b,c,d,buffer[i+9],5,568446438);
             d=gg(d,a,b,c,buffer[i+14],9,3275163606);
             c=gg(c,d,a,b,buffer[i+3],14,4107603335);
             b=gg(b,c,d,a,buffer[i+8],20,1163531501);
             a=gg(a,b,c,d,buffer[i+13],5,2850285829);
             d=gg(d,a,b,c,buffer[i+2],9,4243563512);
             c=gg(c,d,a,b,buffer[i+7],14,1735328473);
             b=gg(b,c,d,a,buffer[i+12],20,2368359562);
             a=hh(a,b,c,d,buffer[i+5],4,4294588738);
             d=hh(d,a,b,c,buffer[i+8],11,2272392833);
             c=hh(c,d,a,b,buffer[i+11],16,1839030562);
             b=hh(b,c,d,a,buffer[i+14],23,4259657740);
             a=hh(a,b,c,d,buffer[i+1],4,2763975236);
             d=hh(d,a,b,c,buffer[i+4],11,1272893353);
             c=hh(c,d,a,b,buffer[i+7],16,4139469664);
             b=hh(b,c,d,a,buffer[i+10],23,3200236656);
             a=hh(a,b,c,d,buffer[i+13],4,681279174);
             d=hh(d,a,b,c,buffer[i+0],11,3936430074);
             c=hh(c,d,a,b,buffer[i+3],16,3572445317);
             b=hh(b,c,d,a,buffer[i+6],23,76029189);
             a=hh(a,b,c,d,buffer[i+9],4,3654602809);
             d=hh(d,a,b,c,buffer[i+12],11,3873151461);
             c=hh(c,d,a,b,buffer[i+15],16,530742520);
             b=hh(b,c,d,a,buffer[i+2],23,3299628645);
             a=ii(a,b,c,d,buffer[i+0],6,4096336452);
             d=ii(d,a,b,c,buffer[i+7],10,1126891415);
             c=ii(c,d,a,b,buffer[i+14],15,2878612391);
             b=ii(b,c,d,a,buffer[i+5],21,4237533241);
             a=ii(a,b,c,d,buffer[i+12],6,1700485571);
             d=ii(d,a,b,c,buffer[i+3],10,2399980690);
             c=ii(c,d,a,b,buffer[i+10],15,4293915773);
             b=ii(b,c,d,a,buffer[i+1],21,2240044497);
             a=ii(a,b,c,d,buffer[i+8],6,1873313359);
             d=ii(d,a,b,c,buffer[i+15],10,4264355552);
             c=ii(c,d,a,b,buffer[i+6],15,2734768916);
             b=ii(b,c,d,a,buffer[i+13],21,1309151649);
             a=ii(a,b,c,d,buffer[i+4],6,4149444226);
             d=ii(d,a,b,c,buffer[i+11],10,3174756917);
             c=ii(c,d,a,b,buffer[i+2],15,718787259);
             b=ii(b,c,d,a,buffer[i+9],21,3951481745);
             w[0]=add(a,w[0]);
             w[1]=add(b,w[1]);
             w[2]=add(c,w[2]);
             w[3]=add(d,w[3])}
           var t=new Array(16);
           for(var i=0;i<4;i++)for(var j=0;j<4;j++)t[i*4+j]=w[i]>>8*j&num_255;
           return t}
         return function(s,ofs,len)
          {var buf=[];
           switch(s.t&6)
            {default:caml_convert_string_to_bytes(s);case 0:
              var b=s.c;
              for(var i=0;i<len;i+=4)
               {var j=i+ofs;
                buf[i>>2]=
                b.charCodeAt(j)|
                b.charCodeAt(j+1)<<
                8|
                b.charCodeAt(j+2)<<
                16|
                b.charCodeAt(j+3)<<
                24}
              for(;i<len;i++)buf[i>>2]|=b.charCodeAt(i+ofs)<<8*(i&3);
              break;
             case 4:
              var a=s.c;
              for(var i=0;i<len;i+=4)
               {var j=i+ofs;buf[i>>2]=a[j]|a[j+1]<<8|a[j+2]<<16|a[j+3]<<24}
              for(;i<len;i++)buf[i>>2]|=a[i+ofs]<<8*(i&3)
             }
           return caml_string_of_array(md5(buf,len))}}
       ();
    function caml_raise_sys_error(msg)
     {caml_raise_with_string(caml_global_data.Sys_error,msg)}
    function caml_ml_flush(oc)
     {if(!oc.opened)caml_raise_sys_error("Cannot flush a closed channel");
      if(oc.buffer==str$8)return 0;
      if(oc.output)
       switch(oc.output.length)
        {case 2:oc.output(oc,oc.buffer);break;default:oc.output(oc.buffer)}
      oc.buffer=str$8;
      return 0}
    var file_inode=0;
    function unix_gettimeofday(){return new Date().getTime()/num_1e3}
    function unix_time(){return Math.floor(unix_gettimeofday())}
    function MlFile(content)
     {this.data=content;
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlFile.prototype=
    {truncate:function(){this.data=caml_create_string(0);this.modified()},
     modified:function(){var now=unix_time();this.atime=now;this.mtime=now}};
    function caml_ml_string_length(s){return s.l}
    function caml_raise_no_such_file(name)
     {name=name instanceof MlString?name.toString():name;
      caml_raise_sys_error(name+": No such file or directory")}
    var caml_current_dir=str$4;
    function caml_make_path(name)
     {name=name instanceof MlString?name.toString():name;
      if(name.charCodeAt(0)!=47)name=caml_current_dir+name;
      var comp=name.split(str$4),ncomp=[];
      for(var i=0;i<comp.length;i++)
       switch(comp[i])
        {case "..":if(ncomp.length>1)ncomp.pop();break;
         case ".":break;
         case "":if(ncomp.length==0)ncomp.push(str$8);break;
         default:ncomp.push(comp[i]);break}
      ncomp.orig=name;
      return ncomp}
    function MlDir()
     {this.content={};
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlDir.prototype=
    {exists:function(name){return this.content[name]?1:0},
     mk:function(name,c){this.content[name]=c},
     get:function(name){return this.content[name]},
     list:function(){var a=[];for(var n in this.content)a.push(n);return a},
     remove:function(name){delete this.content[name]}};
    var caml_root_dir=new MlDir();
    caml_root_dir.mk(str$8,new MlDir());
    function caml_fs_content(path)
     {var dir=caml_root_dir;
      for(var i=0;i<path.length;i++)
       {if(!(dir.exists&&dir.exists(path[i])))
         caml_raise_no_such_file(path.orig);
        dir=dir.get(path[i])}
      return dir}
    function caml_sys_is_directory(name)
     {var path=caml_make_path(name),dir=caml_fs_content(path);
      return dir instanceof MlDir?1:0}
    function caml_array_of_string(s)
     {if(s.t!=4)caml_convert_string_to_array(s);return s.c}
    function caml_fs_register(name,content)
     {var path=caml_make_path(name),dir=caml_root_dir;
      for(var i=0;i<path.length-1;i++)
       {var d=path[i];
        if(!dir.exists(d))dir.mk(d,new MlDir());
        dir=dir.get(d);
        if(!(dir instanceof MlDir))
         caml_raise_sys_error(path.orig+str_file_already_abr)}
      var d=path[path.length-1];
      if(dir.exists(d))caml_raise_sys_error(path.orig+str_file_already_abr);
      if(content instanceof MlDir)
       dir.mk(d,content);
      else
       if(content instanceof MlFile)
        dir.mk(d,content);
       else
        if(content instanceof MlString)
         dir.mk(d,new MlFile(content));
        else
         if(content instanceof Array)
          dir.mk(d,new MlFile(caml_string_of_array(content)));
         else
          if(content.toString)
           dir.mk(d,new MlFile(caml_new_string(content.toString())));
          else
           caml_invalid_argument("caml_fs_register");
      return 0}
    function caml_sys_file_exists(name)
     {var dir=caml_root_dir,path=caml_make_path(name),auto_load,pos;
      for(var i=0;i<path.length;i++)
       {if(dir.auto){auto_load=dir.auto;pos=i}
        if(!(dir.exists&&dir.exists(path[i])))
         return auto_load?auto_load(path,pos):0;
        dir=dir.get(path[i])}
      return 1}
    function caml_sys_open_internal(idx,file,flags)
     {if(caml_global_data.fds===undefined)caml_global_data.fds=new Array();
      flags=flags?flags:{};
      var info={};
      info.file=file;
      info.offset=flags.append?caml_ml_string_length(file.data):0;
      info.flags=flags;
      caml_global_data.fds[idx]=info;
      caml_global_data.fd_last_idx=idx;
      return idx}
    function caml_sys_open(name,flags,_perms)
     {var f={};
      while(flags)
       {switch(flags[1])
         {case 0:f.rdonly=1;break;
          case 1:f.wronly=1;break;
          case 2:f.append=1;break;
          case 3:f.create=1;break;
          case 4:f.truncate=1;break;
          case 5:f.excl=1;break;
          case 6:f.binary=1;break;
          case 7:f.text=1;break;
          case 8:f.nonblock=1;break
          }
        flags=flags[2]}
      var name2=name.toString(),path=caml_make_path(name);
      if(f.rdonly&&f.wronly)
       caml_raise_sys_error
        (name2+" : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text&&f.binary)
       caml_raise_sys_error
        (name2+" : flags Open_text and Open_binary are not compatible");
      if(caml_sys_file_exists(name))
       {if(caml_sys_is_directory(name))
         caml_raise_sys_error(name2+" : is a directory");
        if(f.create&&f.excl)caml_raise_sys_error(name2+str_file_already_abr);
        var
         idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0,
         file=caml_fs_content(path);
        if(f.truncate)file.truncate();
        return caml_sys_open_internal(idx+1,file,f)}
      else
       if(f.create)
        {var idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;
         caml_fs_register(name,caml_create_string(0));
         var file=caml_fs_content(path);
         return caml_sys_open_internal(idx+1,file,f)}
       else
        caml_raise_no_such_file(name)}
    caml_sys_open_internal(0,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(1,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(2,new MlFile(caml_create_string(0)));
    function caml_ml_open_descriptor_in(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.wronly)caml_raise_sys_error(str_fd+fd+" is writeonly");
      return {file:data.file,offset:data.offset,fd:fd,opened:true,refill:null}}
    function js_print_stderr(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stderr.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.error&&v.error(s)}}
    function js_print_stdout(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stdout.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.log&&v.log(s)}}
    var caml_ml_out_channels=new Array();
    function caml_std_output(chan,s)
     {var
       str=caml_new_string(s),
       slen=caml_ml_string_length(str),
       clen=caml_ml_string_length(chan.file.data),
       offset=chan.offset;
      if(offset+slen>=clen)
       {var new_str=caml_create_string(offset+slen);
        caml_blit_string(chan.file.data,0,new_str,0,clen);
        caml_blit_string(str,0,new_str,offset,slen);
        chan.file.data=new_str}
      chan.offset+=slen;
      chan.file.modified();
      return 0}
    function caml_ml_open_descriptor_out(fd)
     {var output;
      switch(fd)
       {case 1:output=js_print_stdout;break;
        case 2:output=js_print_stderr;break;
        default:output=caml_std_output}
      var data=caml_global_data.fds[fd];
      if(data.flags.rdonly)caml_raise_sys_error(str_fd+fd+" is readonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         buffer:str$8,
         output:output};
      caml_ml_out_channels[channel.fd]=channel;
      return channel}
    function caml_ml_out_channels_list()
     {var l=0;
      for(var c in caml_ml_out_channels)
       if(caml_ml_out_channels[c].opened)l=[0,caml_ml_out_channels[c],l];
      return l}
    function caml_ml_output(oc,buffer,offset,len)
     {if(!oc.opened)caml_raise_sys_error("Cannot output to a closed channel");
      var string;
      if(offset==0&&caml_ml_string_length(buffer)==len)
       string=buffer;
      else
       {string=caml_create_string(len);
        caml_blit_string(buffer,offset,string,0,len)}
      var jsstring=string.toString(),id=jsstring.lastIndexOf("\n");
      if(id<0)
       oc.buffer+=jsstring;
      else
       {oc.buffer+=jsstring.substr(0,id+1);
        caml_ml_flush(oc);
        oc.buffer+=jsstring.substr(id+1)}
      return 0}
    function caml_ml_output_char(oc,c)
     {var s=caml_new_string(String.fromCharCode(c));
      caml_ml_output(oc,s,0,1);
      return 0}
    function caml_raise_constant(tag){throw tag}
    function caml_raise_zero_divide()
     {caml_raise_constant(caml_global_data.Division_by_zero)}
    function caml_mod(x,y){if(y==0)caml_raise_zero_divide();return x%y}
    if(!Math.imul)
     Math.imul=function(x,y){y|=0;return ((x>>16)*y<<16)+(x&num_65535)*y|0};
    var caml_mul=Math.imul;
    function caml_notequal(x,y){return +(caml_compare_val(x,y,false)!=0)}
    function caml_obj_is_block(x){return +(x instanceof Array)}
    function caml_obj_tag(x)
     {return x instanceof Array?x[0]:x instanceof MlString?num_252:num_1e3}
    function caml_register_global(n,v,name_opt)
     {caml_global_data[n+1]=v;if(name_opt)caml_global_data[name_opt]=v}
    var caml_named_values={};
    function caml_register_named_value(nm,v)
     {caml_named_values[caml_bytes_of_string(nm)]=v;return 0}
    var caml_oo_last_id=0;
    function caml_set_oo_id(b){b[2]=caml_oo_last_id++;return b}
    function caml_string_bound_error()
     {caml_invalid_argument(str_index_out_of_bounds)}
    function caml_string_unsafe_get(s,i)
     {switch(s.t&6)
       {default:if(i>=s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function caml_string_get(s,i)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_get(s,i)}
    function caml_string_unsafe_set(s,i,c)
     {c&=num_255;
      if(s.t!=4)
       {if(i==s.c.length)
         {s.c+=String.fromCharCode(c);if(i+1==s.l)s.t=0;return 0}
        caml_convert_string_to_array(s)}
      s.c[i]=c;
      return 0}
    function caml_string_set(s,i,c)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_set(s,i,c)}
    function caml_sys_const_word_size(){return 32}
    function caml_sys_exit(code)
     {var g=joo_global_object;
      if(g.quit)g.quit(code);
      if(g.process&&g.process.exit)g.process.exit(code);
      caml_invalid_argument("Function 'exit' not implemented")}
    function caml_sys_random_seed()
     {var x=new Date()^4294967295*Math.random();return [0,x]}
    function caml_update_dummy(x,y)
     {if(typeof y===str_function){x.fun=y;return 0}
      if(y.fun){x.fun=y.fun;return 0}
      var i=y.length;
      while(i--)x[i]=y[i];
      return 0}
    function caml_return_exn_constant(tag){return tag}
    function caml_named_value(nm){return caml_named_values[nm]}
    function caml_wrap_exception(e)
     {if(e instanceof Array)return e;
      if
       (joo_global_object.RangeError&&
        e instanceof joo_global_object.RangeError&&
        e.message&&
        e.message.match(/maximum call stack/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if
       (joo_global_object.InternalError&&
        e instanceof joo_global_object.InternalError&&
        e.message&&
        e.message.match(/too much recursion/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if(e instanceof joo_global_object.Error)
       return [0,caml_named_value(str_jsError),e];
      return [0,caml_global_data.Failure,caml_js_to_string(String(e))]}
    function caml_call_gen1(fun,var0)
     {return fun.length==1?fun(var0):caml_call_gen(fun,[var0])}
    function caml_call_gen2(fun,var0,var1)
     {return fun.length==2?fun(var0,var1):caml_call_gen(fun,[var0,var1])}
    function caml_call_gen5(fun,var0,var1,var2,var3,var4)
     {return fun.length==5
              ?fun(var0,var1,var2,var3,var4)
              :caml_call_gen(fun,[var0,var1,var2,var3,var4])}
    var
     _b1_=[num_248,caml_new_string(str_Out_of_memory),-1],
     _e_=[num_248,caml_new_string(str_Failure),-3],
     _d_=[num_248,caml_new_string(str_Invalid_argument),-4],
     _b5_=[num_248,caml_new_string(str_Match_failure),-8],
     _b3_=[num_248,caml_new_string(str_Stack_overflow),-9],
     _p_=[num_248,caml_new_string(str_Assert_failure),-11],
     _b8_=[num_248,caml_new_string(str_Undefined_recurs_abr),-12],
     locfmt=
      [0,
       [11,
        caml_new_string('File "'),
        [2,
         0,
         [11,
          caml_new_string(str_line),
          [4,
           0,
           0,
           0,
           [11,
            caml_new_string(str_characters),
            [4,0,0,0,[12,45,[4,0,0,0,[11,caml_new_string(": "),[2,0,0]]]]]]]]]],
       caml_new_string('File "%s", line %d, characters %d-%d: %s')];
    caml_register_global(11,_b8_,str_Undefined_recurs_abr);
    caml_register_global(10,_p_,str_Assert_failure);
    caml_register_global
     (9,
      [num_248,caml_new_string(str_Sys_blocked_io),num_10],
      str_Sys_blocked_io);
    caml_register_global(8,_b3_,str_Stack_overflow);
    caml_register_global(7,_b5_,str_Match_failure);
    caml_register_global
     (6,[num_248,caml_new_string(str_Not_found),-7],str_Not_found);
    caml_register_global
     (5,
      [num_248,caml_new_string(str_Division_by_zero),-6],
      str_Division_by_zero);
    caml_register_global
     (4,[num_248,caml_new_string(str_End_of_file),-5],str_End_of_file);
    caml_register_global(3,_d_,str_Invalid_argument);
    caml_register_global(2,_e_,str_Failure);
    caml_register_global
     (1,[num_248,caml_new_string(str_Sys_error),-2],str_Sys_error);
    caml_register_global(0,_b1_,str_Out_of_memory);
    var
     _k_=caml_new_string(str_12g),
     _j_=caml_new_string(str$7),
     _h_=caml_new_string("true"),
     _i_=caml_new_string("false"),
     _f_=caml_new_string("Pervasives.Exit"),
     _m_=caml_new_string("Array.init"),
     _o_=caml_new_string("Array.Bottom"),
     _t_=caml_new_string("\\b"),
     _u_=caml_new_string("\\t"),
     _v_=caml_new_string("\\n"),
     _w_=caml_new_string("\\r"),
     _s_=caml_new_string("\\\\"),
     _r_=caml_new_string("\\'"),
     _C_=caml_new_string("String.blit / Bytes.blit_string"),
     _A_=caml_new_string("Bytes.blit"),
     _x_=caml_new_string("String.sub / Bytes.sub"),
     _F_=caml_new_string(str$8),
     _I_=caml_new_string("Sys.Break"),
     _J_=caml_new_string("Queue.Empty"),
     _L_=caml_new_string("CamlinternalLazy.Undefined"),
     s=caml_new_string("Buffer.add: cannot grow buffer"),
     _ac_=caml_new_string("%c"),
     _ad_=caml_new_string("%s"),
     _ae_=caml_new_string(str_i),
     _af_=caml_new_string("%li"),
     _ag_=caml_new_string("%ni"),
     _ah_=caml_new_string("%Li"),
     _ai_=caml_new_string("%f"),
     _aj_=caml_new_string("%B"),
     _ak_=caml_new_string("%{"),
     _al_=caml_new_string("%}"),
     _am_=caml_new_string("%("),
     _an_=caml_new_string("%)"),
     _ao_=caml_new_string("%a"),
     _ap_=caml_new_string("%t"),
     _aq_=caml_new_string("%?"),
     _ar_=caml_new_string("%r"),
     _as_=caml_new_string("%_r"),
     _aw_=[0,caml_new_string(str_camlinternalForm_abr),816,23],
     _aH_=[0,caml_new_string(str_camlinternalForm_abr),780,21],
     _az_=[0,caml_new_string(str_camlinternalForm_abr),781,21],
     _aI_=[0,caml_new_string(str_camlinternalForm_abr),784,21],
     _aA_=[0,caml_new_string(str_camlinternalForm_abr),785,21],
     _aJ_=[0,caml_new_string(str_camlinternalForm_abr),788,19],
     _aB_=[0,caml_new_string(str_camlinternalForm_abr),789,19],
     _aK_=[0,caml_new_string(str_camlinternalForm_abr),792,22],
     _aC_=[0,caml_new_string(str_camlinternalForm_abr),793,22],
     _aL_=[0,caml_new_string(str_camlinternalForm_abr),797,30],
     _aD_=[0,caml_new_string(str_camlinternalForm_abr),798,30],
     _aF_=[0,caml_new_string(str_camlinternalForm_abr),802,26],
     _ax_=[0,caml_new_string(str_camlinternalForm_abr),803,26],
     _aG_=[0,caml_new_string(str_camlinternalForm_abr),812,28],
     _ay_=[0,caml_new_string(str_camlinternalForm_abr),813,28],
     _aE_=[0,caml_new_string(str_camlinternalForm_abr),817,23],
     _bF_=caml_new_string(str_u),
     _bD_=[0,caml_new_string(str_camlinternalForm_abr),1449,4],
     _bE_=caml_new_string("Printf: bad conversion %["),
     _bG_=[0,caml_new_string(str_camlinternalForm_abr),1517,39],
     _bH_=[0,caml_new_string(str_camlinternalForm_abr),1540,31],
     _bI_=[0,caml_new_string(str_camlinternalForm_abr),1541,31],
     _bJ_=caml_new_string("Printf: bad conversion %_"),
     _bL_=caml_new_string(str$11),
     _bM_=caml_new_string(str$13),
     _bO_=caml_new_string(str$11),
     _bP_=caml_new_string(str$13),
     _bw_=[0,caml_new_string(str$1),[0,caml_new_string(str$1),0]],
     _bu_=caml_new_string(str_nan),
     _bv_=caml_new_string(str$7),
     _bs_=caml_new_string("neg_infinity"),
     _bt_=caml_new_string("infinity"),
     _bm_=caml_new_string(str_12g),
     _a$_=[0,caml_new_string(str$3),[0,caml_new_string(str_d$0),0]],
     _ba_=[0,caml_new_string(str$5),[0,caml_new_string(str_d$0),0]],
     _bb_=[0,caml_new_string(str$9),[0,caml_new_string(str_d$0),0]],
     _bc_=[0,caml_new_string(str$3),[0,caml_new_string(str_i$0),0]],
     _bd_=[0,caml_new_string(str$5),[0,caml_new_string(str_i$0),0]],
     _be_=[0,caml_new_string(str$9),[0,caml_new_string(str_i$0),0]],
     _bf_=[0,caml_new_string(str$3),[0,caml_new_string(str_x),0]],
     _bg_=[0,caml_new_string(str$12),[0,caml_new_string(str_x),0]],
     _bh_=[0,caml_new_string(str$3),[0,caml_new_string(str_X),0]],
     _bi_=[0,caml_new_string(str$12),[0,caml_new_string(str_X),0]],
     _bj_=[0,caml_new_string(str$3),[0,caml_new_string(str_o),0]],
     _bk_=[0,caml_new_string(str$12),[0,caml_new_string(str_o),0]],
     _bl_=[0,caml_new_string(str$3),[0,caml_new_string("u"),0]],
     _aX_=caml_new_string(str_d),
     _aY_=caml_new_string("%+d"),
     _aZ_=caml_new_string("% d"),
     _a0_=caml_new_string(str_i),
     _a1_=caml_new_string("%+i"),
     _a2_=caml_new_string("% i"),
     _a3_=caml_new_string("%x"),
     _a4_=caml_new_string("%#x"),
     _a5_=caml_new_string("%X"),
     _a6_=caml_new_string("%#X"),
     _a7_=caml_new_string("%o"),
     _a8_=caml_new_string("%#o"),
     _a9_=caml_new_string(str_u),
     _aW_=[0,caml_new_string(str$2),[0,caml_new_string(str$2),0]],
     _V_=caml_new_string("@]"),
     _W_=caml_new_string("@}"),
     _X_=caml_new_string("@?"),
     _Y_=caml_new_string("@\n"),
     _Z_=caml_new_string("@."),
     ___=caml_new_string("@@"),
     _$_=caml_new_string("@%"),
     _aa_=caml_new_string("@"),
     _aM_=caml_new_string("CamlinternalFormat.Type_mismatch"),
     _bV_=caml_new_string(str$8),
     _bW_=
      [0,[11,caml_new_string(", "),[2,0,[2,0,0]]],caml_new_string(", %s%s")],
     _ce_=[0,[2,0,[12,10,0]],caml_new_string("%s\n")],
     _cf_=
      [0,
       [11,caml_new_string(str_Program_not_lin_abr),0],
       caml_new_string(str_Program_not_lin_abr)],
     _b__=caml_new_string("Raised at"),
     _b$_=caml_new_string("Re-raised at"),
     _ca_=caml_new_string("Raised by primitive operation at"),
     _cb_=caml_new_string("Called from"),
     _cc_=
      [0,
       [2,
        0,
        [11,
         caml_new_string(' file "'),
         [2,
          0,
          [11,
           caml_new_string(str_line),
           [4,
            0,
            0,
            0,
            [11,caml_new_string(str_characters),[4,0,0,0,[12,45,[4,0,0,0,0]]]]]]]]],
       caml_new_string('%s file "%s", line %d, characters %d-%d')],
     _cd_=
      [0,
       [2,0,[11,caml_new_string(" unknown location"),0]],
       caml_new_string("%s unknown location")],
     _b2_=caml_new_string("Out of memory"),
     _b4_=caml_new_string("Stack overflow"),
     _b6_=caml_new_string("Pattern matching failed"),
     _b7_=caml_new_string("Assertion failed"),
     _b9_=caml_new_string("Undefined recursive module"),
     _bX_=[0,[12,40,[2,0,[2,0,[12,41,0]]]],caml_new_string("(%s%s)")],
     _bY_=caml_new_string(str$8),
     _bZ_=caml_new_string(str$8),
     _b0_=[0,[12,40,[2,0,[12,41,0]]],caml_new_string("(%s)")],
     _bU_=[0,[4,0,0,0,0],caml_new_string(str_d)],
     _bS_=[0,[3,0,0],caml_new_string("%S")],
     _bT_=caml_new_string("_"),
     _co_=caml_new_string("Random.int"),
     _ch_=caml_new_string(str_x),
     _cp_=
      [0,
       987910699,
       495797812,
       364182224,
       414272206,
       318284740,
       990407751,
       383018966,
       270373319,
       840823159,
       24560019,
       536292337,
       512266505,
       189156120,
       730249596,
       143776328,
       51606627,
       140166561,
       366354223,
       1003410265,
       700563762,
       981890670,
       913149062,
       526082594,
       1021425055,
       784300257,
       667753350,
       630144451,
       949649812,
       48546892,
       415514493,
       258888527,
       511570777,
       89983870,
       283659902,
       308386020,
       242688715,
       482270760,
       865188196,
       1027664170,
       207196989,
       193777847,
       619708188,
       671350186,
       149669678,
       257044018,
       87658204,
       558145612,
       183450813,
       28133145,
       901332182,
       710253903,
       510646120,
       652377910,
       409934019,
       801085050],
     _cr_=caml_new_string("Lwt_sequence.Empty"),
     _cy_=[0,caml_new_string(str_src_core_lwt_ml),655,20],
     _cz_=[0,caml_new_string(str_src_core_lwt_ml),658,8],
     _cx_=[0,caml_new_string(str_src_core_lwt_ml),498,8],
     _cw_=[0,caml_new_string(str_src_core_lwt_ml),487,9],
     _cv_=caml_new_string("Lwt.wakeup_result"),
     _cu_=caml_new_string("Fatal error: exception "),
     _ct_=caml_new_string("Lwt.Canceled"),
     _cD_=caml_new_string("Js.Error"),
     _cE_=caml_new_string("Dom_html.Canvas_not_available"),
     _cH_=caml_new_string("Exception during Lwt.async: ");
    function _a_(param)
     {if(typeof param==="number")
       return 0;
      else
       switch(param[0])
        {case 0:return [0,_a_(param[1])];
         case 1:return [1,_a_(param[1])];
         case 2:return [2,_a_(param[1])];
         case 3:return [3,_a_(param[1])];
         case 4:return [4,_a_(param[1])];
         case 5:return [5,_a_(param[1])];
         case 6:return [6,_a_(param[1])];
         case 7:return [7,_a_(param[1])];
         case 8:var ty=param[1];return [8,ty,_a_(param[2])];
         case 9:var ty1=param[1];return [9,ty1,ty1,_a_(param[3])];
         case 10:return [10,_a_(param[1])];
         case 11:return [11,_a_(param[1])];
         case 12:return [12,_a_(param[1])];
         case 13:return [13,_a_(param[1])];
         default:return [14,_a_(param[1])]}}
    function _b_(fmtty1,fmtty2)
     {if(typeof fmtty1==="number")
       return fmtty2;
      else
       switch(fmtty1[0])
        {case 0:return [0,_b_(fmtty1[1],fmtty2)];
         case 1:return [1,_b_(fmtty1[1],fmtty2)];
         case 2:return [2,_b_(fmtty1[1],fmtty2)];
         case 3:return [3,_b_(fmtty1[1],fmtty2)];
         case 4:return [4,_b_(fmtty1[1],fmtty2)];
         case 5:return [5,_b_(fmtty1[1],fmtty2)];
         case 6:return [6,_b_(fmtty1[1],fmtty2)];
         case 7:return [7,_b_(fmtty1[1],fmtty2)];
         case 8:var ty=fmtty1[1];return [8,ty,_b_(fmtty1[2],fmtty2)];
         case 9:
          var ty2=fmtty1[2],ty1=fmtty1[1];
          return [9,ty1,ty2,_b_(fmtty1[3],fmtty2)];
         case 10:return [10,_b_(fmtty1[1],fmtty2)];
         case 11:return [11,_b_(fmtty1[1],fmtty2)];
         case 12:return [12,_b_(fmtty1[1],fmtty2)];
         case 13:return [13,_b_(fmtty1[1],fmtty2)];
         default:return [14,_b_(fmtty1[1],fmtty2)]}}
    function _c_(fmt1,fmt2)
     {if(typeof fmt1==="number")
       return fmt2;
      else
       switch(fmt1[0])
        {case 0:return [0,_c_(fmt1[1],fmt2)];
         case 1:return [1,_c_(fmt1[1],fmt2)];
         case 2:var pad=fmt1[1];return [2,pad,_c_(fmt1[2],fmt2)];
         case 3:var pad$0=fmt1[1];return [3,pad$0,_c_(fmt1[2],fmt2)];
         case 4:
          var prec=fmt1[3],pad$1=fmt1[2],iconv=fmt1[1];
          return [4,iconv,pad$1,prec,_c_(fmt1[4],fmt2)];
         case 5:
          var prec$0=fmt1[3],pad$2=fmt1[2],iconv$0=fmt1[1];
          return [5,iconv$0,pad$2,prec$0,_c_(fmt1[4],fmt2)];
         case 6:
          var prec$1=fmt1[3],pad$3=fmt1[2],iconv$1=fmt1[1];
          return [6,iconv$1,pad$3,prec$1,_c_(fmt1[4],fmt2)];
         case 7:
          var prec$2=fmt1[3],pad$4=fmt1[2],iconv$2=fmt1[1];
          return [7,iconv$2,pad$4,prec$2,_c_(fmt1[4],fmt2)];
         case 8:
          var prec$3=fmt1[3],pad$5=fmt1[2],fconv=fmt1[1];
          return [8,fconv,pad$5,prec$3,_c_(fmt1[4],fmt2)];
         case 9:return [9,_c_(fmt1[1],fmt2)];
         case 10:return [10,_c_(fmt1[1],fmt2)];
         case 11:var str=fmt1[1];return [11,str,_c_(fmt1[2],fmt2)];
         case 12:var chr=fmt1[1];return [12,chr,_c_(fmt1[2],fmt2)];
         case 13:
          var fmtty=fmt1[2],pad$6=fmt1[1];
          return [13,pad$6,fmtty,_c_(fmt1[3],fmt2)];
         case 14:
          var fmtty$0=fmt1[2],pad$7=fmt1[1];
          return [14,pad$7,fmtty$0,_c_(fmt1[3],fmt2)];
         case 15:return [15,_c_(fmt1[1],fmt2)];
         case 16:return [16,_c_(fmt1[1],fmt2)];
         case 17:
          var fmting_lit=fmt1[1];return [17,fmting_lit,_c_(fmt1[2],fmt2)];
         case 18:
          var fmting_gen=fmt1[1];return [18,fmting_gen,_c_(fmt1[2],fmt2)];
         case 19:return [19,_c_(fmt1[1],fmt2)];
         case 20:
          var char_set=fmt1[2],width_opt=fmt1[1];
          return [20,width_opt,char_set,_c_(fmt1[3],fmt2)];
         case 21:var counter=fmt1[1];return [21,counter,_c_(fmt1[2],fmt2)];
         case 22:return [22,_c_(fmt1[1],fmt2)];
         case 23:var ign=fmt1[1];return [23,ign,_c_(fmt1[2],fmt2)];
         default:
          var f=fmt1[2],arity=fmt1[1];return [24,arity,f,_c_(fmt1[3],fmt2)]}}
    function invalid_arg(s){throw [0,_d_,s]}
    caml_set_oo_id([num_248,_f_,0]);
    function max(x,y){return caml_greaterequal(x,y)?x:y}
    function abs(x){return 0<=x?x:-x|0}
    function _g_(s1,s2)
     {var
       l1=caml_ml_string_length(s1),
       l2=caml_ml_string_length(s2),
       s=caml_create_string(l1+l2|0);
      caml_blit_string(s1,0,s,0,l1);
      caml_blit_string(s2,0,s,l1,l2);
      return s}
    caml_ml_open_descriptor_in(0);
    caml_ml_open_descriptor_out(1);
    var stderr=caml_ml_open_descriptor_out(2);
    function output_string(oc,s)
     {return caml_ml_output(oc,s,0,caml_ml_string_length(s))}
    function prerr_string(s){return output_string(stderr,s)}
    function do_at_exit(param)
     {function iter(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var l=param$0[2],a=param$0[1];
            try {caml_ml_flush(a)}catch(_fr_){}
            var param$0=l;
            continue}
          return 0}}
      return iter(caml_ml_out_channels_list(0))}
    function _l_(l,f)
     {if(0===l)return [0];
      if(0<=l)
       {var res=caml_make_vect(l,caml_call_gen1(f,0)),_fp_=l-1|0,_fo_=1;
        if(!(_fp_<1))
         {var i=_fo_;
          for(;;)
           {res[i+1]=caml_call_gen1(f,i);
            var _fq_=i+1|0;
            if(_fp_!==i){var i=_fq_;continue}
            break}}
        return res}
      return invalid_arg(_m_)}
    function _n_(f,a)
     {var l=a.length-1;
      if(0===l)return [0];
      var r=caml_make_vect(l,caml_call_gen1(f,a[1])),_fm_=l-1|0,_fl_=1;
      if(!(_fm_<1))
       {var i=_fl_;
        for(;;)
         {r[i+1]=caml_call_gen1(f,a[i+1]);
          var _fn_=i+1|0;
          if(_fm_!==i){var i=_fn_;continue}
          break}}
      return r}
    caml_set_oo_id([num_248,_o_,0]);
    function _q_(f,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2];
          caml_call_gen1(f,param$0[1]);
          var param$0=l;
          continue}
        return 0}}
    function make(n,c)
     {var s=caml_create_string(n);caml_fill_string(s,0,n,c);return s}
    function _y_(b,ofs,len)
     {if(0<=ofs)
       if(0<=len)
        if(!((caml_ml_string_length(b)-len|0)<ofs))
         {var r=caml_create_string(len);
          caml_blit_string(b,ofs,r,0,len);
          return r}
      return invalid_arg(_x_)}
    function _z_(s1,ofs1,s2,ofs2,len)
     {if(0<=len)
       if(0<=ofs1)
        if(!((caml_ml_string_length(s1)-len|0)<ofs1))
         if(0<=ofs2)
          if(!((caml_ml_string_length(s2)-len|0)<ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_A_)}
    function _B_(s1,ofs1,s2,ofs2,len)
     {if(0<=len)
       if(0<=ofs1)
        if(!((caml_ml_string_length(s1)-len|0)<ofs1))
         if(0<=ofs2)
          if(!((caml_ml_string_length(s2)-len|0)<ofs2))
           return caml_blit_string(s1,ofs1,s2,ofs2,len);
      return invalid_arg(_C_)}
    function _D_(n,c){return make(n,c)}
    function _E_(sep,l)
     {if(l)
       {var hd=l[1],num=[0,0],len=[0,0],tl=l[2];
        _q_
         (function(s)
           {num[1]++;len[1]=len[1]+caml_ml_string_length(s)|0;return 0},
          l);
        var
         r=
          caml_create_string
           (len[1]+caml_mul(caml_ml_string_length(sep),num[1]-1|0)|0);
        caml_blit_string(hd,0,r,0,caml_ml_string_length(hd));
        var pos=[0,caml_ml_string_length(hd)];
        _q_
         (function(s)
           {caml_blit_string(sep,0,r,pos[1],caml_ml_string_length(sep));
            pos[1]=pos[1]+caml_ml_string_length(sep)|0;
            caml_blit_string(s,0,r,pos[1],caml_ml_string_length(s));
            pos[1]=pos[1]+caml_ml_string_length(s)|0;
            return 0},
          tl);
        return r}
      return _F_}
    var
     _G_=caml_sys_const_word_size(0),
     _H_=caml_mul(_G_/8|0,(1<<(_G_+num_10|0))-1|0)-1|0;
    caml_set_oo_id([num_248,_I_,0]);
    var _K_=caml_set_oo_id([num_248,_J_,0]);
    caml_set_oo_id([num_248,_L_,0]);
    function _M_(b,more)
     {var new_len=[0,b[3]];
      for(;;)
       {if(new_len[1]<(b[2]+more|0)){new_len[1]=2*new_len[1]|0;continue}
        if(_H_<new_len[1])
         {if(!((b[2]+more|0)<=_H_))throw [0,_e_,s];new_len[1]=_H_}
        var new_buffer=caml_create_string(new_len[1]);
        _z_(b[1],0,new_buffer,0,b[2]);
        b[1]=new_buffer;
        b[3]=new_len[1];
        return 0}}
    function _N_(b,s)
     {var len=caml_ml_string_length(s),new_position=b[2]+len|0;
      if(b[3]<new_position)_M_(b,len);
      _B_(s,0,b[1],b[2],len);
      b[2]=new_position;
      return 0}
    var _O_=6;
    function _P_(init_size){return [0,0,caml_create_string(init_size)]}
    function _Q_(buf,overhead)
     {var
       len=caml_ml_string_length(buf[2]),
       min_len=buf[1]+overhead|0,
       _fj_=len<min_len?1:0;
      if(_fj_)
       {var new_str=caml_create_string(max(len*2|0,min_len));
        _z_(buf[2],0,new_str,0,len);
        buf[2]=new_str;
        var _fk_=0}
      else
       var _fk_=_fj_;
      return _fk_}
    function _R_(buf,c)
     {_Q_(buf,1);caml_string_set(buf[2],buf[1],c);buf[1]=buf[1]+1|0;return 0}
    function _S_(buf,s)
     {var str_len=caml_ml_string_length(s);
      _Q_(buf,str_len);
      _B_(s,0,buf[2],buf[1],str_len);
      buf[1]=buf[1]+str_len|0;
      return 0}
    function _T_(buf){return _y_(buf[2],0,buf[1])}
    function _U_(formatting_lit)
     {if(typeof formatting_lit==="number")
       switch(formatting_lit)
        {case 0:return _V_;
         case 1:return _W_;
         case 2:return _X_;
         case 3:return _Y_;
         case 4:return _Z_;
         case 5:return ___;
         default:return _$_}
      else
       switch(formatting_lit[0])
        {case 0:return formatting_lit[1];
         case 1:return formatting_lit[1];
         default:return _g_(_aa_,_D_(1,formatting_lit[1]))}}
    function _ab_(buf,fmtty)
     {var fmtty$0=fmtty;
      for(;;)
       if(typeof fmtty$0==="number")
        return 0;
       else
        switch(fmtty$0[0])
         {case 0:var rest=fmtty$0[1];_S_(buf,_ac_);var fmtty$0=rest;continue;
          case 1:
           var rest$0=fmtty$0[1];_S_(buf,_ad_);var fmtty$0=rest$0;continue;
          case 2:
           var rest$1=fmtty$0[1];_S_(buf,_ae_);var fmtty$0=rest$1;continue;
          case 3:
           var rest$2=fmtty$0[1];_S_(buf,_af_);var fmtty$0=rest$2;continue;
          case 4:
           var rest$3=fmtty$0[1];_S_(buf,_ag_);var fmtty$0=rest$3;continue;
          case 5:
           var rest$4=fmtty$0[1];_S_(buf,_ah_);var fmtty$0=rest$4;continue;
          case 6:
           var rest$5=fmtty$0[1];_S_(buf,_ai_);var fmtty$0=rest$5;continue;
          case 7:
           var rest$6=fmtty$0[1];_S_(buf,_aj_);var fmtty$0=rest$6;continue;
          case 8:
           var rest$7=fmtty$0[2],sub_fmtty=fmtty$0[1];
           _S_(buf,_ak_);
           _ab_(buf,sub_fmtty);
           _S_(buf,_al_);
           var fmtty$0=rest$7;
           continue;
          case 9:
           var rest$8=fmtty$0[3],sub_fmtty$0=fmtty$0[1];
           _S_(buf,_am_);
           _ab_(buf,sub_fmtty$0);
           _S_(buf,_an_);
           var fmtty$0=rest$8;
           continue;
          case 10:
           var rest$9=fmtty$0[1];_S_(buf,_ao_);var fmtty$0=rest$9;continue;
          case 11:
           var rest$10=fmtty$0[1];_S_(buf,_ap_);var fmtty$0=rest$10;continue;
          case 12:
           var rest$11=fmtty$0[1];_S_(buf,_aq_);var fmtty$0=rest$11;continue;
          case 13:
           var rest$12=fmtty$0[1];_S_(buf,_ar_);var fmtty$0=rest$12;continue;
          default:
           var rest$13=fmtty$0[1];_S_(buf,_as_);var fmtty$0=rest$13;continue}}
    function _at_(param)
     {if(typeof param==="number")
       return 0;
      else
       switch(param[0])
        {case 0:return [0,_at_(param[1])];
         case 1:return [1,_at_(param[1])];
         case 2:return [2,_at_(param[1])];
         case 3:return [3,_at_(param[1])];
         case 4:return [4,_at_(param[1])];
         case 5:return [5,_at_(param[1])];
         case 6:return [6,_at_(param[1])];
         case 7:return [7,_at_(param[1])];
         case 8:var ty=param[1];return [8,ty,_at_(param[2])];
         case 9:
          var ty2=param[2],ty1=param[1];return [9,ty2,ty1,_at_(param[3])];
         case 10:return [10,_at_(param[1])];
         case 11:return [11,_at_(param[1])];
         case 12:return [12,_at_(param[1])];
         case 13:return [13,_at_(param[1])];
         default:return [14,_at_(param[1])]}}
    function _au_(param)
     {if(typeof param==="number")
       {var
         _eX_=function(param){return 0},
         _eY_=function(param){return 0},
         _eZ_=function(param){return 0};
        return [0,function(param){return 0},_eZ_,_eY_,_eX_]}
      else
       switch(param[0])
        {case 0:
          var
           match=_au_(param[1]),
           de=match[4],
           ed=match[3],
           af=match[2],
           fa=match[1],
           _e0_=function(param){caml_call_gen1(af,0);return 0};
          return [0,function(param){caml_call_gen1(fa,0);return 0},_e0_,ed,de];
         case 1:
          var
           match$0=_au_(param[1]),
           de$0=match$0[4],
           ed$0=match$0[3],
           af$0=match$0[2],
           fa$0=match$0[1],
           _e1_=function(param){caml_call_gen1(af$0,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$0,0);return 0},
                  _e1_,
                  ed$0,
                  de$0];
         case 2:
          var
           match$1=_au_(param[1]),
           de$1=match$1[4],
           ed$1=match$1[3],
           af$1=match$1[2],
           fa$1=match$1[1],
           _e2_=function(param){caml_call_gen1(af$1,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$1,0);return 0},
                  _e2_,
                  ed$1,
                  de$1];
         case 3:
          var
           match$2=_au_(param[1]),
           de$2=match$2[4],
           ed$2=match$2[3],
           af$2=match$2[2],
           fa$2=match$2[1],
           _e3_=function(param){caml_call_gen1(af$2,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$2,0);return 0},
                  _e3_,
                  ed$2,
                  de$2];
         case 4:
          var
           match$3=_au_(param[1]),
           de$3=match$3[4],
           ed$3=match$3[3],
           af$3=match$3[2],
           fa$3=match$3[1],
           _e4_=function(param){caml_call_gen1(af$3,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$3,0);return 0},
                  _e4_,
                  ed$3,
                  de$3];
         case 5:
          var
           match$4=_au_(param[1]),
           de$4=match$4[4],
           ed$4=match$4[3],
           af$4=match$4[2],
           fa$4=match$4[1],
           _e5_=function(param){caml_call_gen1(af$4,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$4,0);return 0},
                  _e5_,
                  ed$4,
                  de$4];
         case 6:
          var
           match$5=_au_(param[1]),
           de$5=match$5[4],
           ed$5=match$5[3],
           af$5=match$5[2],
           fa$5=match$5[1],
           _e6_=function(param){caml_call_gen1(af$5,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$5,0);return 0},
                  _e6_,
                  ed$5,
                  de$5];
         case 7:
          var
           match$6=_au_(param[1]),
           de$6=match$6[4],
           ed$6=match$6[3],
           af$6=match$6[2],
           fa$6=match$6[1],
           _e7_=function(param){caml_call_gen1(af$6,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$6,0);return 0},
                  _e7_,
                  ed$6,
                  de$6];
         case 8:
          var
           match$7=_au_(param[2]),
           de$7=match$7[4],
           ed$7=match$7[3],
           af$7=match$7[2],
           fa$7=match$7[1],
           _e8_=function(param){caml_call_gen1(af$7,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$7,0);return 0},
                  _e8_,
                  ed$7,
                  de$7];
         case 9:
          var
           ty2=param[2],
           ty1=param[1],
           match$8=_au_(param[3]),
           de$8=match$8[4],
           ed$8=match$8[3],
           af$8=match$8[2],
           fa$8=match$8[1],
           match$9=_au_(_av_(_at_(ty1),ty2)),
           jd=match$9[4],
           dj=match$9[3],
           ga=match$9[2],
           ag=match$9[1],
           _e9_=
            function(param)
             {caml_call_gen1(jd,0);caml_call_gen1(de$8,0);return 0},
           _e__=
            function(param)
             {caml_call_gen1(ed$8,0);caml_call_gen1(dj,0);return 0},
           _e$_=
            function(param)
             {caml_call_gen1(ga,0);caml_call_gen1(af$8,0);return 0};
          return [0,
                  function(param)
                   {caml_call_gen1(fa$8,0);caml_call_gen1(ag,0);return 0},
                  _e$_,
                  _e__,
                  _e9_];
         case 10:
          var
           match$10=_au_(param[1]),
           de$9=match$10[4],
           ed$9=match$10[3],
           af$9=match$10[2],
           fa$9=match$10[1],
           _fa_=function(param){caml_call_gen1(af$9,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$9,0);return 0},
                  _fa_,
                  ed$9,
                  de$9];
         case 11:
          var
           match$11=_au_(param[1]),
           de$10=match$11[4],
           ed$10=match$11[3],
           af$10=match$11[2],
           fa$10=match$11[1],
           _fb_=function(param){caml_call_gen1(af$10,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$10,0);return 0},
                  _fb_,
                  ed$10,
                  de$10];
         case 12:
          var
           match$12=_au_(param[1]),
           de$11=match$12[4],
           ed$11=match$12[3],
           af$11=match$12[2],
           fa$11=match$12[1],
           _fc_=function(param){caml_call_gen1(af$11,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$11,0);return 0},
                  _fc_,
                  ed$11,
                  de$11];
         case 13:
          var
           match$13=_au_(param[1]),
           de$12=match$13[4],
           ed$12=match$13[3],
           af$12=match$13[2],
           fa$12=match$13[1],
           _fd_=function(param){caml_call_gen1(de$12,0);return 0},
           _fe_=function(param){caml_call_gen1(ed$12,0);return 0},
           _ff_=function(param){caml_call_gen1(af$12,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$12,0);return 0},
                  _ff_,
                  _fe_,
                  _fd_];
         default:
          var
           match$14=_au_(param[1]),
           de$13=match$14[4],
           ed$13=match$14[3],
           af$13=match$14[2],
           fa$13=match$14[1],
           _fg_=function(param){caml_call_gen1(de$13,0);return 0},
           _fh_=function(param){caml_call_gen1(ed$13,0);return 0},
           _fi_=function(param){caml_call_gen1(af$13,0);return 0};
          return [0,
                  function(param){caml_call_gen1(fa$13,0);return 0},
                  _fi_,
                  _fh_,
                  _fg_]}}
    function _av_(ty1,match)
     {if(typeof ty1==="number")
       if(typeof match==="number")
        return 0;
       else
        switch(match[0])
         {case 10:var switch$0=0;break;
          case 11:var switch$0=1;break;
          case 12:var switch$0=2;break;
          case 13:var switch$0=3;break;
          case 14:var switch$0=4;break;
          case 8:var switch$0=5;break;
          case 9:var switch$0=6;break;
          default:throw [0,_p_,_aw_]}
      else
       switch(ty1[0])
        {case 0:
          var _eE_=ty1[1];
          if(typeof match==="number")
           var switch$1=1;
          else
           switch(match[0])
            {case 0:return [0,_av_(_eE_,match[1])];
             case 8:var switch$0=5,switch$1=0;break;
             case 9:var switch$0=6,switch$1=0;break;
             case 10:var switch$0=0,switch$1=0;break;
             case 11:var switch$0=1,switch$1=0;break;
             case 12:var switch$0=2,switch$1=0;break;
             case 13:var switch$0=3,switch$1=0;break;
             case 14:var switch$0=4,switch$1=0;break;
             default:var switch$1=1}
          if(switch$1)var switch$0=7;
          break;
         case 1:
          var _eF_=ty1[1];
          if(typeof match==="number")
           var switch$2=1;
          else
           switch(match[0])
            {case 1:return [1,_av_(_eF_,match[1])];
             case 8:var switch$0=5,switch$2=0;break;
             case 9:var switch$0=6,switch$2=0;break;
             case 10:var switch$0=0,switch$2=0;break;
             case 11:var switch$0=1,switch$2=0;break;
             case 12:var switch$0=2,switch$2=0;break;
             case 13:var switch$0=3,switch$2=0;break;
             case 14:var switch$0=4,switch$2=0;break;
             default:var switch$2=1}
          if(switch$2)var switch$0=7;
          break;
         case 2:
          var _eG_=ty1[1];
          if(typeof match==="number")
           var switch$3=1;
          else
           switch(match[0])
            {case 2:return [2,_av_(_eG_,match[1])];
             case 8:var switch$0=5,switch$3=0;break;
             case 9:var switch$0=6,switch$3=0;break;
             case 10:var switch$0=0,switch$3=0;break;
             case 11:var switch$0=1,switch$3=0;break;
             case 12:var switch$0=2,switch$3=0;break;
             case 13:var switch$0=3,switch$3=0;break;
             case 14:var switch$0=4,switch$3=0;break;
             default:var switch$3=1}
          if(switch$3)var switch$0=7;
          break;
         case 3:
          var _eH_=ty1[1];
          if(typeof match==="number")
           var switch$4=1;
          else
           switch(match[0])
            {case 3:return [3,_av_(_eH_,match[1])];
             case 8:var switch$0=5,switch$4=0;break;
             case 9:var switch$0=6,switch$4=0;break;
             case 10:var switch$0=0,switch$4=0;break;
             case 11:var switch$0=1,switch$4=0;break;
             case 12:var switch$0=2,switch$4=0;break;
             case 13:var switch$0=3,switch$4=0;break;
             case 14:var switch$0=4,switch$4=0;break;
             default:var switch$4=1}
          if(switch$4)var switch$0=7;
          break;
         case 4:
          var _eI_=ty1[1];
          if(typeof match==="number")
           var switch$5=1;
          else
           switch(match[0])
            {case 4:return [4,_av_(_eI_,match[1])];
             case 8:var switch$0=5,switch$5=0;break;
             case 9:var switch$0=6,switch$5=0;break;
             case 10:var switch$0=0,switch$5=0;break;
             case 11:var switch$0=1,switch$5=0;break;
             case 12:var switch$0=2,switch$5=0;break;
             case 13:var switch$0=3,switch$5=0;break;
             case 14:var switch$0=4,switch$5=0;break;
             default:var switch$5=1}
          if(switch$5)var switch$0=7;
          break;
         case 5:
          var _eJ_=ty1[1];
          if(typeof match==="number")
           var switch$6=1;
          else
           switch(match[0])
            {case 5:return [5,_av_(_eJ_,match[1])];
             case 8:var switch$0=5,switch$6=0;break;
             case 9:var switch$0=6,switch$6=0;break;
             case 10:var switch$0=0,switch$6=0;break;
             case 11:var switch$0=1,switch$6=0;break;
             case 12:var switch$0=2,switch$6=0;break;
             case 13:var switch$0=3,switch$6=0;break;
             case 14:var switch$0=4,switch$6=0;break;
             default:var switch$6=1}
          if(switch$6)var switch$0=7;
          break;
         case 6:
          var _eK_=ty1[1];
          if(typeof match==="number")
           var switch$7=1;
          else
           switch(match[0])
            {case 6:return [6,_av_(_eK_,match[1])];
             case 8:var switch$0=5,switch$7=0;break;
             case 9:var switch$0=6,switch$7=0;break;
             case 10:var switch$0=0,switch$7=0;break;
             case 11:var switch$0=1,switch$7=0;break;
             case 12:var switch$0=2,switch$7=0;break;
             case 13:var switch$0=3,switch$7=0;break;
             case 14:var switch$0=4,switch$7=0;break;
             default:var switch$7=1}
          if(switch$7)var switch$0=7;
          break;
         case 7:
          var _eL_=ty1[1];
          if(typeof match==="number")
           var switch$8=1;
          else
           switch(match[0])
            {case 7:return [7,_av_(_eL_,match[1])];
             case 8:var switch$0=5,switch$8=0;break;
             case 9:var switch$0=6,switch$8=0;break;
             case 10:var switch$0=0,switch$8=0;break;
             case 11:var switch$0=1,switch$8=0;break;
             case 12:var switch$0=2,switch$8=0;break;
             case 13:var switch$0=3,switch$8=0;break;
             case 14:var switch$0=4,switch$8=0;break;
             default:var switch$8=1}
          if(switch$8)var switch$0=7;
          break;
         case 8:
          var _eM_=ty1[2],_eN_=ty1[1];
          if(typeof match==="number")
           var switch$9=1;
          else
           switch(match[0])
            {case 8:
              var ty2=match[1],_eO_=_av_(_eM_,match[2]);
              return [8,_av_(_eN_,ty2),_eO_];
             case 10:var switch$0=0,switch$9=0;break;
             case 11:var switch$0=1,switch$9=0;break;
             case 12:var switch$0=2,switch$9=0;break;
             case 13:var switch$0=3,switch$9=0;break;
             case 14:var switch$0=4,switch$9=0;break;
             default:var switch$9=1}
          if(switch$9)throw [0,_p_,_aF_];
          break;
         case 9:
          var _eP_=ty1[3],_eQ_=ty1[2],_eR_=ty1[1];
          if(typeof match==="number")
           var switch$10=1;
          else
           switch(match[0])
            {case 8:var switch$0=5,switch$10=0;break;
             case 9:
              var
               rest2=match[3],
               ty22=match[2],
               ty21=match[1],
               match$0=_au_(_av_(_at_(_eQ_),ty21)),
               f4=match$0[4];
              caml_call_gen1(match$0[2],0);
              caml_call_gen1(f4,0);
              return [9,_eR_,ty22,_av_(_eP_,rest2)];
             case 10:var switch$0=0,switch$10=0;break;
             case 11:var switch$0=1,switch$10=0;break;
             case 12:var switch$0=2,switch$10=0;break;
             case 13:var switch$0=3,switch$10=0;break;
             case 14:var switch$0=4,switch$10=0;break;
             default:var switch$10=1}
          if(switch$10)throw [0,_p_,_aG_];
          break;
         case 10:
          var _eS_=ty1[1];
          if(typeof match!=="number"&&10===match[0])
           return [10,_av_(_eS_,match[1])];
          throw [0,_p_,_aH_];
         case 11:
          var _eT_=ty1[1];
          if(typeof match==="number")
           var switch$11=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$11=0;break;
             case 11:return [11,_av_(_eT_,match[1])];
             default:var switch$11=1}
          if(switch$11)throw [0,_p_,_aI_];
          break;
         case 12:
          var _eU_=ty1[1];
          if(typeof match==="number")
           var switch$12=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$12=0;break;
             case 11:var switch$0=1,switch$12=0;break;
             case 12:return [12,_av_(_eU_,match[1])];
             default:var switch$12=1}
          if(switch$12)throw [0,_p_,_aJ_];
          break;
         case 13:
          var _eV_=ty1[1];
          if(typeof match==="number")
           var switch$13=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$13=0;break;
             case 11:var switch$0=1,switch$13=0;break;
             case 12:var switch$0=2,switch$13=0;break;
             case 13:return [13,_av_(_eV_,match[1])];
             default:var switch$13=1}
          if(switch$13)throw [0,_p_,_aK_];
          break;
         default:
          var _eW_=ty1[1];
          if(typeof match==="number")
           var switch$14=1;
          else
           switch(match[0])
            {case 10:var switch$0=0,switch$14=0;break;
             case 11:var switch$0=1,switch$14=0;break;
             case 12:var switch$0=2,switch$14=0;break;
             case 13:var switch$0=3,switch$14=0;break;
             case 14:return [14,_av_(_eW_,match[1])];
             default:var switch$14=1}
          if(switch$14)throw [0,_p_,_aL_]}
      switch(switch$0)
       {case 0:throw [0,_p_,_az_];
        case 1:throw [0,_p_,_aA_];
        case 2:throw [0,_p_,_aB_];
        case 3:throw [0,_p_,_aC_];
        case 4:throw [0,_p_,_aD_];
        case 5:throw [0,_p_,_ax_];
        case 6:throw [0,_p_,_ay_];
        default:throw [0,_p_,_aE_]}}
    var _aN_=caml_set_oo_id([num_248,_aM_,0]);
    function _aO_(pad,match)
     {if(typeof pad==="number")
       return [0,0,match];
      else
       {if(0===pad[0])return [0,[0,pad[1],pad[2]],match];
        if(typeof match!=="number"&&2===match[0])
         return [0,[1,pad[1]],match[1]];
        throw _aN_}}
    function _aP_(pad,prec,fmtty)
     {var match=_aO_(pad,fmtty);
      if(typeof prec==="number")
       {if(0===prec)return [0,match[1],0,match[2]];
        var _eD_=match[2];
        if(typeof _eD_!=="number"&&2===_eD_[0])return [0,match[1],1,_eD_[1]];
        throw _aN_}
      return [0,match[1],[0,prec[1]],match[2]]}
    function _aQ_(fmt,fmtty)
     {if(typeof fmt==="number")
       return [0,0,fmtty];
      else
       switch(fmt[0])
        {case 0:
          if(typeof fmtty!=="number"&&0===fmtty[0])
           {var match=_aQ_(fmt[1],fmtty[1]);return [0,[0,match[1]],match[2]]}
          break;
         case 1:
          if(typeof fmtty!=="number"&&0===fmtty[0])
           {var match$0=_aQ_(fmt[1],fmtty[1]);
            return [0,[1,match$0[1]],match$0[2]]}
          break;
         case 2:
          var
           fmt_rest=fmt[2],
           _eb_=_aO_(fmt[1],fmtty),
           _ec_=_eb_[2],
           _ed_=_eb_[1];
          if(typeof _ec_!=="number"&&1===_ec_[0])
           {var match$1=_aQ_(fmt_rest,_ec_[1]);
            return [0,[2,_ed_,match$1[1]],match$1[2]]}
          throw _aN_;
         case 3:
          var
           fmt_rest$0=fmt[2],
           _ee_=_aO_(fmt[1],fmtty),
           _ef_=_ee_[2],
           _eg_=_ee_[1];
          if(typeof _ef_!=="number"&&1===_ef_[0])
           {var match$2=_aQ_(fmt_rest$0,_ef_[1]);
            return [0,[3,_eg_,match$2[1]],match$2[2]]}
          throw _aN_;
         case 4:
          var
           fmt_rest$1=fmt[4],
           iconv=fmt[1],
           _eh_=_aP_(fmt[2],fmt[3],fmtty),
           _ei_=_eh_[3],
           _ej_=_eh_[2],
           _ek_=_eh_[1];
          if(typeof _ei_!=="number"&&2===_ei_[0])
           {var match$3=_aQ_(fmt_rest$1,_ei_[1]);
            return [0,[4,iconv,_ek_,_ej_,match$3[1]],match$3[2]]}
          throw _aN_;
         case 5:
          var
           fmt_rest$2=fmt[4],
           iconv$0=fmt[1],
           _el_=_aP_(fmt[2],fmt[3],fmtty),
           _em_=_el_[3],
           _en_=_el_[2],
           _eo_=_el_[1];
          if(typeof _em_!=="number"&&3===_em_[0])
           {var match$4=_aQ_(fmt_rest$2,_em_[1]);
            return [0,[5,iconv$0,_eo_,_en_,match$4[1]],match$4[2]]}
          throw _aN_;
         case 6:
          var
           fmt_rest$3=fmt[4],
           iconv$1=fmt[1],
           _ep_=_aP_(fmt[2],fmt[3],fmtty),
           _eq_=_ep_[3],
           _er_=_ep_[2],
           _es_=_ep_[1];
          if(typeof _eq_!=="number"&&4===_eq_[0])
           {var match$5=_aQ_(fmt_rest$3,_eq_[1]);
            return [0,[6,iconv$1,_es_,_er_,match$5[1]],match$5[2]]}
          throw _aN_;
         case 7:
          var
           fmt_rest$4=fmt[4],
           iconv$2=fmt[1],
           _et_=_aP_(fmt[2],fmt[3],fmtty),
           _eu_=_et_[3],
           _ev_=_et_[2],
           _ew_=_et_[1];
          if(typeof _eu_!=="number"&&5===_eu_[0])
           {var match$6=_aQ_(fmt_rest$4,_eu_[1]);
            return [0,[7,iconv$2,_ew_,_ev_,match$6[1]],match$6[2]]}
          throw _aN_;
         case 8:
          var
           fmt_rest$5=fmt[4],
           fconv=fmt[1],
           _ex_=_aP_(fmt[2],fmt[3],fmtty),
           _ey_=_ex_[3],
           _ez_=_ex_[2],
           _eA_=_ex_[1];
          if(typeof _ey_!=="number"&&6===_ey_[0])
           {var match$7=_aQ_(fmt_rest$5,_ey_[1]);
            return [0,[8,fconv,_eA_,_ez_,match$7[1]],match$7[2]]}
          throw _aN_;
         case 9:
          if(typeof fmtty!=="number"&&7===fmtty[0])
           {var match$8=_aQ_(fmt[1],fmtty[1]);
            return [0,[9,match$8[1]],match$8[2]]}
          break;
         case 10:
          var match$9=_aQ_(fmt[1],fmtty);
          return [0,[10,match$9[1]],match$9[2]];
         case 11:
          var str=fmt[1],match$10=_aQ_(fmt[2],fmtty);
          return [0,[11,str,match$10[1]],match$10[2]];
         case 12:
          var chr=fmt[1],match$11=_aQ_(fmt[2],fmtty);
          return [0,[12,chr,match$11[1]],match$11[2]];
         case 13:
          if(typeof fmtty!=="number"&&8===fmtty[0])
           {var
             sub_fmtty=fmtty[1],
             fmtty_rest=fmtty[2],
             fmt_rest$6=fmt[3],
             pad_opt=fmt[1];
            if(caml_notequal([0,fmt[2]],[0,sub_fmtty]))throw _aN_;
            var match$12=_aQ_(fmt_rest$6,fmtty_rest);
            return [0,[13,pad_opt,sub_fmtty,match$12[1]],match$12[2]]}
          break;
         case 14:
          if(typeof fmtty!=="number"&&9===fmtty[0])
           {var
             sub_fmtty1=fmtty[1],
             fmtty_rest$0=fmtty[3],
             fmt_rest$7=fmt[3],
             sub_fmtty$0=fmt[2],
             pad_opt$0=fmt[1],
             _eB_=[0,_a_(sub_fmtty1)];
            if(caml_notequal([0,_a_(sub_fmtty$0)],_eB_))throw _aN_;
            var match$13=_aQ_(fmt_rest$7,_a_(fmtty_rest$0));
            return [0,[14,pad_opt$0,sub_fmtty1,match$13[1]],match$13[2]]}
          break;
         case 15:
          if(typeof fmtty!=="number"&&10===fmtty[0])
           {var match$14=_aQ_(fmt[1],fmtty[1]);
            return [0,[15,match$14[1]],match$14[2]]}
          break;
         case 16:
          if(typeof fmtty!=="number"&&11===fmtty[0])
           {var match$15=_aQ_(fmt[1],fmtty[1]);
            return [0,[16,match$15[1]],match$15[2]]}
          break;
         case 17:
          var formatting_lit=fmt[1],match$16=_aQ_(fmt[2],fmtty);
          return [0,[17,formatting_lit,match$16[1]],match$16[2]];
         case 18:
          var fmt_rest$8=fmt[2],formatting_gen=fmt[1];
          if(0===formatting_gen[0])
           {var
             match$20=formatting_gen[1],
             str$0=match$20[2],
             match$21=_aQ_(match$20[1],fmtty),
             fmt2=match$21[1],
             match$22=_aQ_(fmt_rest$8,match$21[2]);
            return [0,[18,[0,[0,fmt2,str$0]],match$22[1]],match$22[2]]}
          var
           match$23=formatting_gen[1],
           str$1=match$23[2],
           match$24=_aQ_(match$23[1],fmtty),
           fmt2$0=match$24[1],
           match$25=_aQ_(fmt_rest$8,match$24[2]);
          return [0,[18,[1,[0,fmt2$0,str$1]],match$25[1]],match$25[2]];
         case 19:
          if(typeof fmtty!=="number"&&13===fmtty[0])
           {var match$17=_aQ_(fmt[1],fmtty[1]);
            return [0,[19,match$17[1]],match$17[2]]}
          break;
         case 20:
          if(typeof fmtty!=="number"&&1===fmtty[0])
           {var
             char_set=fmt[2],
             width_opt=fmt[1],
             match$18=_aQ_(fmt[3],fmtty[1]);
            return [0,[20,width_opt,char_set,match$18[1]],match$18[2]]}
          break;
         case 21:
          if(typeof fmtty!=="number"&&2===fmtty[0])
           {var counter=fmt[1],match$19=_aQ_(fmt[2],fmtty[1]);
            return [0,[21,counter,match$19[1]],match$19[2]]}
          break;
         case 23:
          var rest=fmt[2],ign=fmt[1];
          if(typeof ign==="number")
           switch(ign)
            {case 0:return _aR_(ign,rest,fmtty);
             case 1:return _aR_(ign,rest,fmtty);
             case 2:return _aR_(ign,rest,fmtty);
             case 3:
              if(typeof fmtty!=="number"&&14===fmtty[0])
               {var match$26=_aQ_(rest,fmtty[1]);
                return [0,[23,3,match$26[1]],match$26[2]]}
              throw _aN_;
             default:return _aR_(ign,rest,fmtty)}
          else
           switch(ign[0])
            {case 0:return _aR_(ign,rest,fmtty);
             case 1:return _aR_(ign,rest,fmtty);
             case 2:return _aR_(ign,rest,fmtty);
             case 3:return _aR_(ign,rest,fmtty);
             case 4:return _aR_(ign,rest,fmtty);
             case 5:return _aR_(ign,rest,fmtty);
             case 6:return _aR_(ign,rest,fmtty);
             case 7:return _aR_([7,ign[1],ign[2]],rest,fmtty);
             case 8:
              var
               pad_opt$1=ign[1],
               _eC_=_aS_(ign[2],rest,fmtty),
               match$27=_eC_[2];
              return [0,[23,[8,pad_opt$1,_eC_[1]],match$27[1]],match$27[2]];
             case 9:return _aR_(ign,rest,fmtty);
             default:return _aR_(ign,rest,fmtty)}
         }
      throw _aN_}
    function _aR_(ign,fmt,fmtty)
     {var match=_aQ_(fmt,fmtty);return [0,[23,ign,match[1]],match[2]]}
    function _aS_(sub_fmtty,fmt,match)
     {if(typeof sub_fmtty==="number")
       return [0,0,_aQ_(fmt,match)];
      else
       switch(sub_fmtty[0])
        {case 0:
          if(typeof match!=="number"&&0===match[0])
           {var match$0=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[0,match$0[1]],match$0[2]]}
          break;
         case 1:
          if(typeof match!=="number"&&1===match[0])
           {var match$1=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[1,match$1[1]],match$1[2]]}
          break;
         case 2:
          if(typeof match!=="number"&&2===match[0])
           {var match$2=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[2,match$2[1]],match$2[2]]}
          break;
         case 3:
          if(typeof match!=="number"&&3===match[0])
           {var match$3=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[3,match$3[1]],match$3[2]]}
          break;
         case 4:
          if(typeof match!=="number"&&4===match[0])
           {var match$4=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[4,match$4[1]],match$4[2]]}
          break;
         case 5:
          if(typeof match!=="number"&&5===match[0])
           {var match$5=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[5,match$5[1]],match$5[2]]}
          break;
         case 6:
          if(typeof match!=="number"&&6===match[0])
           {var match$6=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[6,match$6[1]],match$6[2]]}
          break;
         case 7:
          if(typeof match!=="number"&&7===match[0])
           {var match$7=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[7,match$7[1]],match$7[2]]}
          break;
         case 8:
          if(typeof match!=="number"&&8===match[0])
           {var
             sub2_fmtty=match[1],
             fmtty_rest=match[2],
             sub_fmtty_rest=sub_fmtty[2];
            if(caml_notequal([0,sub_fmtty[1]],[0,sub2_fmtty]))throw _aN_;
            var match$8=_aS_(sub_fmtty_rest,fmt,fmtty_rest);
            return [0,[8,sub2_fmtty,match$8[1]],match$8[2]]}
          break;
         case 9:
          if(typeof match!=="number"&&9===match[0])
           {var
             sub2_fmtty$0=match[2],
             sub1_fmtty=match[1],
             fmtty_rest$0=match[3],
             sub_fmtty_rest$0=sub_fmtty[3],
             sub2_fmtty$1=sub_fmtty[2],
             sub1_fmtty$0=sub_fmtty[1],
             _d$_=[0,_a_(sub1_fmtty)];
            if(caml_notequal([0,_a_(sub1_fmtty$0)],_d$_))throw _aN_;
            var _ea_=[0,_a_(sub2_fmtty$0)];
            if(caml_notequal([0,_a_(sub2_fmtty$1)],_ea_))throw _aN_;
            var
             match$9=_au_(_av_(_at_(sub1_fmtty),sub2_fmtty$0)),
             f4=match$9[4];
            caml_call_gen1(match$9[2],0);
            caml_call_gen1(f4,0);
            var
             match$10=_aS_(_a_(sub_fmtty_rest$0),fmt,fmtty_rest$0),
             fmt$0=match$10[2];
            return [0,[9,sub1_fmtty,sub2_fmtty$0,_at_(match$10[1])],fmt$0]}
          break;
         case 10:
          if(typeof match!=="number"&&10===match[0])
           {var match$11=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[10,match$11[1]],match$11[2]]}
          break;
         case 11:
          if(typeof match!=="number"&&11===match[0])
           {var match$12=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[11,match$12[1]],match$12[2]]}
          break;
         case 13:
          if(typeof match!=="number"&&13===match[0])
           {var match$13=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[13,match$13[1]],match$13[2]]}
          break;
         case 14:
          if(typeof match!=="number"&&14===match[0])
           {var match$14=_aS_(sub_fmtty[1],fmt,match[1]);
            return [0,[14,match$14[1]],match$14[2]]}
          break
         }
      throw _aN_}
    function _aT_(padty,width,str)
     {var
       len=caml_ml_string_length(str),
       padty$0=0<=width?padty:0,
       width$0=abs(width);
      if(width$0<=len)return str;
      var _d__=2===padty$0?48:32,res=make(width$0,_d__);
      switch(padty$0)
       {case 0:_B_(str,0,res,0,len);break;
        case 1:_B_(str,0,res,width$0-len|0,len);break;
        default:
         if(0<len)
          {if(43===caml_string_get(str,0))
            var switch$1=1;
           else
            if(45===caml_string_get(str,0))
             var switch$1=1;
            else
             if(32===caml_string_get(str,0))
              var switch$1=1;
             else
              var switch$0=0,switch$1=0;
           if(switch$1)
            {caml_string_set(res,0,caml_string_get(str,0));
             _B_(str,1,res,(width$0-len|0)+1|0,len-1|0);
             var switch$0=1}}
         else
          var switch$0=0;
         if(!switch$0)
          {if(1<len)
            if(48===caml_string_get(str,0))
             {if(num_120===caml_string_get(str,1))
               var switch$3=1;
              else
               if(88===caml_string_get(str,1))
                var switch$3=1;
               else
                var switch$2=0,switch$3=0;
              if(switch$3)
               {caml_string_set(res,1,caml_string_get(str,1));
                _B_(str,2,res,(width$0-len|0)+2|0,len-2|0);
                var switch$2=1}}
            else
             var switch$2=0;
           else
            var switch$2=0;
           if(!switch$2)_B_(str,0,res,width$0-len|0,len)}}
      return res}
    function _aU_(prec,str)
     {var
       prec$0=abs(prec),
       len=caml_ml_string_length(str),
       c=caml_string_get(str,0);
      if(58<=c)
       var switch$0=71<=c?5<(c-97|0)>>>0?1:0:65<=c?0:1;
      else
       {if(32===c)
         var switch$1=1;
        else
         if(43<=c)
          switch(c-43|0)
           {case 5:
             if(len<(prec$0+2|0))
              if(1<len)
               {var
                 switch$2=
                  num_120===caml_string_get(str,1)
                   ?0
                   :88===caml_string_get(str,1)?0:1;
                if(!switch$2)
                 {var res$1=make(prec$0+2|0,48);
                  caml_string_set(res$1,1,caml_string_get(str,1));
                  _B_(str,2,res$1,(prec$0-len|0)+4|0,len-2|0);
                  return res$1}}
             var switch$0=0,switch$1=0;
             break;
            case 0:
            case 2:var switch$1=1;break;
            case 1:
            case 3:
            case 4:var switch$0=1,switch$1=0;break;
            default:var switch$0=0,switch$1=0}
         else
          var switch$0=1,switch$1=0;
        if(switch$1)
         {if(len<(prec$0+1|0))
           {var res$0=make(prec$0+1|0,48);
            caml_string_set(res$0,0,c);
            _B_(str,1,res$0,(prec$0-len|0)+2|0,len-1|0);
            return res$0}
          var switch$0=1}}
      if(!switch$0)
       if(len<prec$0)
        {var res=make(prec$0,48);_B_(str,0,res,prec$0-len|0,len);return res}
      return str}
    function _aV_(str)
     {var i$1=0;
      for(;;)
       {if(caml_ml_string_length(str)<=i$1)
         var _d7_=0;
        else
         {var
           c$1=caml_string_unsafe_get(str,i$1),
           switch$0=
            14<=c$1?34===c$1?1:92===c$1?1:0:11<=c$1?13<=c$1?1:0:8<=c$1?1:0;
          if(switch$0)
           var _d7_=1;
          else
           {if(caml_is_printable(c$1)){var i$1=i$1+1|0;continue}var _d7_=1}}
        if(_d7_)
         {var n=[0,0],_d0_=caml_ml_string_length(str)-1|0,_dZ_=0;
          if(!(_d0_<0))
           {var i$0=_dZ_;
            for(;;)
             {var
               c$0=caml_string_unsafe_get(str,i$0),
               switch$1=
                14<=c$0?34===c$0?1:92===c$0?1:0:11<=c$0?13<=c$0?1:0:8<=c$0?1:0,
               _d5_=switch$1?2:caml_is_printable(c$0)?1:4;
              n[1]=n[1]+_d5_|0;
              var _d6_=i$0+1|0;
              if(_d0_!==i$0){var i$0=_d6_;continue}
              break}}
          if(n[1]===caml_ml_string_length(str))
           {var len=caml_ml_string_length(str),r=caml_create_string(len);
            caml_blit_string(str,0,r,0,len);
            var _d8_=r}
          else
           {var s=caml_create_string(n[1]);
            n[1]=0;
            var _d2_=caml_ml_string_length(str)-1|0,_d1_=0;
            if(!(_d2_<0))
             {var i=_d1_;
              for(;;)
               {var c=caml_string_unsafe_get(str,i),_d3_=c-34|0;
                if(58<_d3_>>>0)
                 if(-20<=_d3_)
                  var switch$2=1;
                 else
                  {switch(_d3_+34|0)
                    {case 8:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],98);
                      var switch$3=1;
                      break;
                     case 9:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],116);
                      var switch$3=1;
                      break;
                     case 10:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],num_110);
                      var switch$3=1;
                      break;
                     case 13:
                      caml_string_unsafe_set(s,n[1],92);
                      n[1]++;
                      caml_string_unsafe_set(s,n[1],114);
                      var switch$3=1;
                      break;
                     default:var switch$2=1,switch$3=0}
                   if(switch$3)var switch$2=0}
                else
                 var
                  switch$2=
                   56<(_d3_-1|0)>>>0
                    ?(caml_string_unsafe_set(s,n[1],92),
                      n[1]++,
                      caml_string_unsafe_set(s,n[1],c),
                      0)
                    :1;
                if(switch$2)
                 if(caml_is_printable(c))
                  caml_string_unsafe_set(s,n[1],c);
                 else
                  {caml_string_unsafe_set(s,n[1],92);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+(c/num_100|0)|0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+((c/10|0)%10|0)|0);
                   n[1]++;
                   caml_string_unsafe_set(s,n[1],48+(c%10|0)|0)}
                n[1]++;
                var _d4_=i+1|0;
                if(_d2_!==i){var i=_d4_;continue}
                break}}
            var _d8_=s}
          var _d9_=_d8_}
        else
         var _d9_=str;
        return _E_(_d9_,_aW_)}}
    function _a__(iconv,c)
     {switch(iconv)
       {case 0:var seps=_a$_;break;
        case 1:var seps=_ba_;break;
        case 2:var seps=_bb_;break;
        case 3:var seps=_bc_;break;
        case 4:var seps=_bd_;break;
        case 5:var seps=_be_;break;
        case 6:var seps=_bf_;break;
        case 7:var seps=_bg_;break;
        case 8:var seps=_bh_;break;
        case 9:var seps=_bi_;break;
        case 10:var seps=_bj_;break;
        case 11:var seps=_bk_;break;
        default:var seps=_bl_}
      return _E_(_D_(1,c),seps)}
    function _bn_(iconv,n)
     {switch(iconv)
       {case 0:var _dY_=_aX_;break;
        case 1:var _dY_=_aY_;break;
        case 2:var _dY_=_aZ_;break;
        case 3:var _dY_=_a0_;break;
        case 4:var _dY_=_a1_;break;
        case 5:var _dY_=_a2_;break;
        case 6:var _dY_=_a3_;break;
        case 7:var _dY_=_a4_;break;
        case 8:var _dY_=_a5_;break;
        case 9:var _dY_=_a6_;break;
        case 10:var _dY_=_a7_;break;
        case 11:var _dY_=_a8_;break;
        default:var _dY_=_a9_}
      return caml_format_int(_dY_,n)}
    function _bo_(iconv,n){return caml_format_int(_a__(iconv,108),n)}
    function _bp_(iconv,n){return caml_format_int(_a__(iconv,num_110),n)}
    function _bq_(iconv,n){return caml_int64_format(_a__(iconv,76),n)}
    function _br_(fconv,prec$0,x)
     {var prec$1=abs(prec$0);
      if(15===fconv)
       var _dV_=_bm_;
      else
       {var prec=abs(prec$1);
        switch(fconv)
         {case 15:var symb=70;break;
          case 0:
          case 1:
          case 2:var symb=102;break;
          case 3:
          case 4:
          case 5:var symb=101;break;
          case 6:
          case 7:
          case 8:var symb=69;break;
          case 9:
          case 10:
          case 11:var symb=103;break;
          default:var symb=71}
        var buf=_P_(16);
        _R_(buf,37);
        switch(fconv)
         {case 1:
          case 4:
          case 7:
          case 10:
          case 13:_R_(buf,43);break;
          case 2:
          case 5:
          case 8:
          case 11:
          case 14:_R_(buf,32);break
          }
        _R_(buf,46);
        _S_(buf,caml_new_string(str$8+prec));
        _R_(buf,symb);
        var _dV_=_T_(buf)}
      var str=caml_format_float(_dV_,x);
      if(15===fconv)
       {var match=caml_classify_float(x),len=caml_ml_string_length(str);
        if(3===match)return x<0?_bs_:_bt_;
        if(4<=match)return _bu_;
        var i=0;
        for(;;)
         {if(i===len)
           var _dX_=0;
          else
           {var
             _dW_=caml_string_get(str,i)-46|0,
             switch$0=23<_dW_>>>0?55===_dW_?1:0:21<(_dW_-1|0)>>>0?1:0;
            if(!switch$0){var i=i+1|0;continue}
            var _dX_=1}
          return _dX_?str:_g_(str,_bv_)}}
      return str}
    function _bx_(k,o,acc,fmt)
     {var k$0=k,acc$0=acc,fmt$0=fmt;
      for(;;)
       if(typeof fmt$0==="number")
        return caml_call_gen2(k$0,o,acc$0);
       else
        switch(fmt$0[0])
         {case 0:
           var rest=fmt$0[1];
           return function(c){return _bx_(k$0,o,[5,acc$0,c],rest)};
          case 1:
           var rest$0=fmt$0[1];
           return function(c)
            {if(39===c)
              var _dU_=_r_;
             else
              if(92===c)
               var _dU_=_s_;
              else
               {if(14<=c)
                 var switch$0=0;
                else
                 switch(c)
                  {case 8:var _dU_=_t_,switch$0=1;break;
                   case 9:var _dU_=_u_,switch$0=1;break;
                   case 10:var _dU_=_v_,switch$0=1;break;
                   case 13:var _dU_=_w_,switch$0=1;break;
                   default:var switch$0=0}
                if(!switch$0)
                 if(caml_is_printable(c))
                  {var s=caml_create_string(1);
                   caml_string_unsafe_set(s,0,c);
                   var _dU_=s}
                 else
                  {var s$0=caml_create_string(4);
                   caml_string_unsafe_set(s$0,0,92);
                   caml_string_unsafe_set(s$0,1,48+(c/num_100|0)|0);
                   caml_string_unsafe_set(s$0,2,48+((c/10|0)%10|0)|0);
                   caml_string_unsafe_set(s$0,3,48+(c%10|0)|0);
                   var _dU_=s$0}}
             return _bx_(k$0,o,[4,acc$0,_E_(_dU_,_bw_)],rest$0)};
          case 2:
           var rest$1=fmt$0[2],pad=fmt$0[1];
           return _bA_(k$0,o,acc$0,rest$1,pad,function(str){return str});
          case 3:return _bA_(k$0,o,acc$0,fmt$0[2],fmt$0[1],_aV_);
          case 4:
           return _bB_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bn_,fmt$0[1]);
          case 5:
           return _bB_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bo_,fmt$0[1]);
          case 6:
           return _bB_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bp_,fmt$0[1]);
          case 7:
           return _bB_(k$0,o,acc$0,fmt$0[4],fmt$0[2],fmt$0[3],_bq_,fmt$0[1]);
          case 8:
           var rest$2=fmt$0[4],prec=fmt$0[3],pad$0=fmt$0[2],fconv=fmt$0[1];
           if(typeof pad$0==="number")
            {if(typeof prec==="number")
              return 0===prec
                      ?function(x)
                        {return _bx_(k$0,o,[4,acc$0,_br_(fconv,_O_,x)],rest$2)}
                      :function(p,x)
                        {return _bx_(k$0,o,[4,acc$0,_br_(fconv,p,x)],rest$2)};
             var p=prec[1];
             return function(x)
              {return _bx_(k$0,o,[4,acc$0,_br_(fconv,p,x)],rest$2)}}
           else
            {if(0===pad$0[0])
              {var _dP_=pad$0[2],_dQ_=pad$0[1];
               if(typeof prec==="number")
                return 0===prec
                        ?function(x)
                          {return _bx_
                                   (k$0,o,[4,acc$0,_aT_(_dQ_,_dP_,_br_(fconv,_O_,x))],rest$2)}
                        :function(p,x)
                          {return _bx_
                                   (k$0,o,[4,acc$0,_aT_(_dQ_,_dP_,_br_(fconv,p,x))],rest$2)};
               var p$0=prec[1];
               return function(x)
                {return _bx_
                         (k$0,o,[4,acc$0,_aT_(_dQ_,_dP_,_br_(fconv,p$0,x))],rest$2)}}
             var _dR_=pad$0[1];
             if(typeof prec==="number")
              return 0===prec
                      ?function(w,x)
                        {return _bx_
                                 (k$0,o,[4,acc$0,_aT_(_dR_,w,_br_(fconv,_O_,x))],rest$2)}
                      :function(w,p,x)
                        {return _bx_
                                 (k$0,o,[4,acc$0,_aT_(_dR_,w,_br_(fconv,p,x))],rest$2)};
             var p$1=prec[1];
             return function(w,x)
              {return _bx_
                       (k$0,o,[4,acc$0,_aT_(_dR_,w,_br_(fconv,p$1,x))],rest$2)}}
          case 9:
           var rest$3=fmt$0[1];
           return function(b)
            {var _dT_=b?_h_:_i_;return _bx_(k$0,o,[4,acc$0,_dT_],rest$3)};
          case 10:var acc$0=[7,acc$0],fmt$0=fmt$0[1];continue;
          case 11:var acc$0=[2,acc$0,fmt$0[1]],fmt$0=fmt$0[2];continue;
          case 12:var acc$0=[3,acc$0,fmt$0[1]],fmt$0=fmt$0[2];continue;
          case 13:
           var rest$4=fmt$0[3],sub_fmtty=fmt$0[2],buf=_P_(16);
           _ab_(buf,sub_fmtty);
           var ty=_T_(buf);
           return function(str){return _bx_(k$0,o,[4,acc$0,ty],rest$4)};
          case 14:
           var rest$5=fmt$0[3],fmtty=fmt$0[2];
           return function(param)
            {var fmt=param[1],_dS_=_aQ_(fmt,_a_(_at_(fmtty)));
             if(typeof _dS_[2]==="number")
              return _bx_(k$0,o,acc$0,_c_(_dS_[1],rest$5));
             throw _aN_};
          case 15:
           var rest$6=fmt$0[1];
           return function(f,x)
            {return _bx_
                     (k$0,
                      o,
                      [6,acc$0,function(o){return caml_call_gen2(f,o,x)}],
                      rest$6)};
          case 16:
           var rest$7=fmt$0[1];
           return function(f){return _bx_(k$0,o,[6,acc$0,f],rest$7)};
          case 17:var acc$0=[0,acc$0,fmt$0[1]],fmt$0=fmt$0[2];continue;
          case 18:
           var _dO_=fmt$0[1];
           if(0===_dO_[0])
            {var
              rest$8=fmt$0[2],
              fmt$1=_dO_[1][1],
              acc$1=0,
              k$0=
               function(acc,k,rest)
                 {return function(koc,kacc)
                   {return _bx_(k,koc,[1,acc,[0,kacc]],rest)}}
                (acc$0,k$0,rest$8),
              acc$0=acc$1,
              fmt$0=fmt$1;
             continue}
           var
            rest$9=fmt$0[2],
            fmt$2=_dO_[1][1],
            acc$2=0,
            k$0=
             function(acc,k,rest)
               {return function(koc,kacc)
                 {return _bx_(k,koc,[1,acc,[1,kacc]],rest)}}
              (acc$0,k$0,rest$9),
            acc$0=acc$2,
            fmt$0=fmt$2;
           continue;
          case 19:throw [0,_p_,_bD_];
          case 20:
           var rest$10=fmt$0[3],new_acc=[8,acc$0,_bE_];
           return function(param){return _bx_(k$0,o,new_acc,rest$10)};
          case 21:
           var rest$11=fmt$0[2];
           return function(n)
            {return _bx_(k$0,o,[4,acc$0,caml_format_int(_bF_,n)],rest$11)};
          case 22:
           var rest$12=fmt$0[1];
           return function(c){return _bx_(k$0,o,[5,acc$0,c],rest$12)};
          case 23:
           var rest$13=fmt$0[2],ign=fmt$0[1];
           if(typeof ign==="number")
            switch(ign)
             {case 0:return _bz_(k$0,o,acc$0,rest$13);
              case 1:return _bz_(k$0,o,acc$0,rest$13);
              case 2:return _bz_(k$0,o,acc$0,rest$13);
              case 3:throw [0,_p_,_bG_];
              default:return _bz_(k$0,o,acc$0,rest$13)}
           else
            switch(ign[0])
             {case 0:return _bz_(k$0,o,acc$0,rest$13);
              case 1:return _bz_(k$0,o,acc$0,rest$13);
              case 2:return _bz_(k$0,o,acc$0,rest$13);
              case 3:return _bz_(k$0,o,acc$0,rest$13);
              case 4:return _bz_(k$0,o,acc$0,rest$13);
              case 5:return _bz_(k$0,o,acc$0,rest$13);
              case 6:return _bz_(k$0,o,acc$0,rest$13);
              case 7:return _bz_(k$0,o,acc$0,rest$13);
              case 8:return _by_(k$0,o,acc$0,ign[2],rest$13);
              case 9:return _bz_(k$0,o,acc$0,rest$13);
              default:return _bz_(k$0,o,acc$0,rest$13)}
          default:
           var rest$14=fmt$0[3],arity=fmt$0[1];
           return _bC_(k$0,o,acc$0,rest$14,arity,caml_call_gen1(fmt$0[2],0))}}
    function _by_(k,o,acc,fmtty,fmt)
     {if(typeof fmtty==="number")
       return _bz_(k,o,acc,fmt);
      else
       switch(fmtty[0])
        {case 0:
          var rest=fmtty[1];
          return function(param){return _by_(k,o,acc,rest,fmt)};
         case 1:
          var rest$0=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$0,fmt)};
         case 2:
          var rest$1=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$1,fmt)};
         case 3:
          var rest$2=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$2,fmt)};
         case 4:
          var rest$3=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$3,fmt)};
         case 5:
          var rest$4=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$4,fmt)};
         case 6:
          var rest$5=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$5,fmt)};
         case 7:
          var rest$6=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$6,fmt)};
         case 8:
          var rest$7=fmtty[2];
          return function(param){return _by_(k,o,acc,rest$7,fmt)};
         case 9:
          var rest$8=fmtty[3],ty2=fmtty[2],ty=_av_(_at_(fmtty[1]),ty2);
          return function(param){return _by_(k,o,acc,_b_(ty,rest$8),fmt)};
         case 10:
          var rest$9=fmtty[1];
          return function(param,_dN_){return _by_(k,o,acc,rest$9,fmt)};
         case 11:
          var rest$10=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$10,fmt)};
         case 12:
          var rest$11=fmtty[1];
          return function(param){return _by_(k,o,acc,rest$11,fmt)};
         case 13:throw [0,_p_,_bH_];
         default:throw [0,_p_,_bI_]}}
    function _bz_(k,o,acc,fmt){return _bx_(k,o,[8,acc,_bJ_],fmt)}
    function _bA_(k,o,acc,fmt,pad,trans)
     {if(typeof pad==="number")
       return function(x)
        {return _bx_(k,o,[4,acc,caml_call_gen1(trans,x)],fmt)};
      else
       {if(0===pad[0])
         {var width=pad[2],padty=pad[1];
          return function(x)
           {return _bx_
                    (k,o,[4,acc,_aT_(padty,width,caml_call_gen1(trans,x))],fmt)}}
        var padty$0=pad[1];
        return function(w,x)
         {return _bx_(k,o,[4,acc,_aT_(padty$0,w,caml_call_gen1(trans,x))],fmt)}}}
    function _bB_(k,o,acc,fmt,pad,match,trans,iconv)
     {if(typeof pad==="number")
       {if(typeof match==="number")
         return 0===match
                 ?function(x)
                   {return _bx_(k,o,[4,acc,caml_call_gen2(trans,iconv,x)],fmt)}
                 :function(p,x)
                   {return _bx_
                            (k,o,[4,acc,_aU_(p,caml_call_gen2(trans,iconv,x))],fmt)};
        var p=match[1];
        return function(x)
         {return _bx_(k,o,[4,acc,_aU_(p,caml_call_gen2(trans,iconv,x))],fmt)}}
      else
       {if(0===pad[0])
         {var _dK_=pad[2],_dL_=pad[1];
          if(typeof match==="number")
           return 0===match
                   ?function(x)
                     {return _bx_
                              (k,
                               o,
                               [4,acc,_aT_(_dL_,_dK_,caml_call_gen2(trans,iconv,x))],
                               fmt)}
                   :function(p,x)
                     {return _bx_
                              (k,
                               o,
                               [4,
                                acc,
                                _aT_(_dL_,_dK_,_aU_(p,caml_call_gen2(trans,iconv,x)))],
                               fmt)};
          var p$0=match[1];
          return function(x)
           {return _bx_
                    (k,
                     o,
                     [4,
                      acc,
                      _aT_(_dL_,_dK_,_aU_(p$0,caml_call_gen2(trans,iconv,x)))],
                     fmt)}}
        var _dM_=pad[1];
        if(typeof match==="number")
         return 0===match
                 ?function(w,x)
                   {return _bx_
                            (k,o,[4,acc,_aT_(_dM_,w,caml_call_gen2(trans,iconv,x))],fmt)}
                 :function(w,p,x)
                   {return _bx_
                            (k,
                             o,
                             [4,acc,_aT_(_dM_,w,_aU_(p,caml_call_gen2(trans,iconv,x)))],
                             fmt)};
        var p$1=match[1];
        return function(w,x)
         {return _bx_
                  (k,
                   o,
                   [4,acc,_aT_(_dM_,w,_aU_(p$1,caml_call_gen2(trans,iconv,x)))],
                   fmt)}}}
    function _bC_(k,o,acc,rest,arity,f)
     {if(arity)
       {var arity$0=arity[1];
        return function(x)
         {return _bC_(k,o,acc,rest,arity$0,caml_call_gen1(f,x))}}
      return _bx_(k,o,[4,acc,f],rest)}
    function _bK_(o,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0==="number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:
           var p=acc$0[1],s=_U_(acc$0[2]);_bK_(o,p);return output_string(o,s);
          case 1:
           var _dI_=acc$0[2],_dJ_=acc$0[1];
           if(0===_dI_[0])
            {var acc$1=_dI_[1];
             _bK_(o,_dJ_);
             output_string(o,_bL_);
             var acc$0=acc$1;
             continue}
           var acc$2=_dI_[1];
           _bK_(o,_dJ_);
           output_string(o,_bM_);
           var acc$0=acc$2;
           continue;
          case 6:var f=acc$0[2];_bK_(o,acc$0[1]);return caml_call_gen1(f,o);
          case 7:_bK_(o,acc$0[1]);return caml_ml_flush(o);
          case 8:var msg=acc$0[2];_bK_(o,acc$0[1]);return invalid_arg(msg);
          case 2:
          case 4:
           var s$0=acc$0[2];_bK_(o,acc$0[1]);return output_string(o,s$0);
          default:
           var c=acc$0[2];_bK_(o,acc$0[1]);return caml_ml_output_char(o,c)}}
    function _bN_(b,acc)
     {var acc$0=acc;
      for(;;)
       if(typeof acc$0==="number")
        return 0;
       else
        switch(acc$0[0])
         {case 0:var p=acc$0[1],s=_U_(acc$0[2]);_bN_(b,p);return _N_(b,s);
          case 1:
           var _dG_=acc$0[2],_dH_=acc$0[1];
           if(0===_dG_[0])
            {var acc$1=_dG_[1];
             _bN_(b,_dH_);
             _N_(b,_bO_);
             var acc$0=acc$1;
             continue}
           var acc$2=_dG_[1];
           _bN_(b,_dH_);
           _N_(b,_bP_);
           var acc$0=acc$2;
           continue;
          case 6:
           var f=acc$0[2];_bN_(b,acc$0[1]);return _N_(b,caml_call_gen1(f,0));
          case 7:var acc$0=acc$0[1];continue;
          case 8:var msg=acc$0[2];_bN_(b,acc$0[1]);return invalid_arg(msg);
          case 2:
          case 4:var s$0=acc$0[2];_bN_(b,acc$0[1]);return _N_(b,s$0);
          default:
           var c=acc$0[2];
           _bN_(b,acc$0[1]);
           var pos=b[2];
           if(b[3]<=pos)_M_(b,1);
           caml_string_unsafe_set(b[1],pos,c);
           b[2]=pos+1|0;
           return 0}}
    function _bQ_(oc,fmt$0)
     {var fmt=fmt$0[1],_dF_=0;
      return _bx_(function(o,acc){_bK_(o,acc);return 0},oc,_dF_,fmt)}
    function _bR_(fmt$0)
     {var fmt=fmt$0[1];
      return _bx_
              (function(param,acc)
                {var
                  n$1=64,
                  n=1<=64?n$1:1,
                  n$0=_H_<n?_H_:n,
                  s=caml_create_string(n$0),
                  buf=[0,s,0,n$0,s];
                 _bN_(buf,acc);
                 return _y_(buf[1],0,buf[2])},
               0,
               0,
               fmt)}
    var printers=[0,0];
    function field(x,i$0)
     {var f=x[i$0+1];
      if(caml_obj_is_block(f))
       {if(caml_obj_tag(f)===num_252)return caml_call_gen1(_bR_(_bS_),f);
        if(caml_obj_tag(f)===253)
         {var s=caml_format_float(_k_,f),i=0,l=caml_ml_string_length(s);
          for(;;)
           {if(l<=i)return _g_(s,_j_);
            var
             match=caml_string_get(s,i),
             switch$0=48<=match?58<=match?0:1:45===match?1:0;
            if(switch$0){var i=i+1|0;continue}
            return s}}
        return _bT_}
      return caml_call_gen1(_bR_(_bU_),f)}
    function other_fields(x,i)
     {if(x.length-1<=i)return _bV_;
      var _dD_=other_fields(x,i+1|0),_dE_=field(x,i);
      return caml_call_gen2(_bR_(_bW_),_dE_,_dD_)}
    function fields(x)
     {var n=x.length-1;
      if(2<n>>>0)
       {var _dA_=other_fields(x,2),_dB_=field(x,1);
        return caml_call_gen2(_bR_(_bX_),_dB_,_dA_)}
      switch(n)
       {case 0:return _bY_;
        case 1:return _bZ_;
        default:var _dC_=field(x,1);return caml_call_gen1(_bR_(_b0_),_dC_)}}
    function to_string(x)
     {function conv(param)
       {var param$0=param;
        for(;;)
         {if(param$0)
           {var tl=param$0[2],hd=param$0[1];
            try
             {var _dy_=caml_call_gen1(hd,x),_dx_=_dy_}
            catch(_dz_){var _dx_=0}
            if(_dx_)return _dx_[1];
            var param$0=tl;
            continue}
          if(x===_b1_)return _b2_;
          if(x===_b3_)return _b4_;
          if(x[1]===_b5_)
           {var match=x[2],char$0=match[3],line=match[2],file=match[1];
            return caml_call_gen5
                    (_bR_(locfmt),file,line,char$0,char$0+5|0,_b6_)}
          if(x[1]===_p_)
           {var
             match$0=x[2],
             char$1=match$0[3],
             line$0=match$0[2],
             file$0=match$0[1];
            return caml_call_gen5
                    (_bR_(locfmt),file$0,line$0,char$1,char$1+6|0,_b7_)}
          if(x[1]===_b8_)
           {var
             match$1=x[2],
             char$2=match$1[3],
             line$1=match$1[2],
             file$1=match$1[1];
            return caml_call_gen5
                    (_bR_(locfmt),file$1,line$1,char$2,char$2+6|0,_b9_)}
          if(0===caml_obj_tag(x))
           {var constructor=x[1][1];return _g_(constructor,fields(x))}
          return x[1]}}
      return conv(printers[1])}
    function convert_raw_backtrace(rbckt)
     {try
       {var
         _du_=
          [0,
           _n_
            (function(_dw_){return caml_convert_raw_backtrace_slot(_dw_)},
             rbckt)];
        return _du_}
      catch(_dv_)
       {_dv_=caml_wrap_exception(_dv_);if(_dv_[1]===_e_)return 0;throw _dv_}}
    function print_backtrace(outchan)
     {var
       backtrace=
        convert_raw_backtrace(caml_get_exception_raw_backtrace(0));
      if(backtrace)
       {var a=backtrace[1],_ds_=a.length-1-1|0,_dr_=0;
        if(!(_ds_<0))
         {var i=_dr_;
          for(;;)
           {var
             slot=caml_check_bound(a,i)[i+1],
             info=
              function(i)
                {return function(is_raise)
                  {return is_raise?0===i?_b__:_b$_:0===i?_ca_:_cb_}}
               (i);
            if(0===slot[0])
             var
              endchar=slot[5],
              startchar=slot[4],
              lineno=slot[3],
              filename=slot[2],
              _dp_=info(slot[1]),
              match=
               [0,
                caml_call_gen5
                 (_bR_(_cc_),_dp_,filename,lineno,startchar,endchar)];
            else
             if(0===slot[1])
              var _dq_=info(0),match=[0,caml_call_gen1(_bR_(_cd_),_dq_)];
             else
              var match=0;
            if(match){var str=match[1];caml_call_gen1(_bQ_(outchan,_ce_),str)}
            var _dt_=i+1|0;
            if(_ds_!==i){var i=_dt_;continue}
            break}}
        return 0}
      return _bQ_(outchan,_cf_)}
    function register_printer(fn){printers[1]=[0,fn,printers[1]];return 0}
    32===_G_;
    var s$0=[0,_cp_.slice(),0];
    function _cq_(bound)
     {if(!(num_1073741823<bound))
       if(0<bound)
        for(;;)
         {s$0[2]=(s$0[2]+1|0)%55|0;
          var
           _dm_=s$0[2],
           curval=caml_check_bound(s$0[1],_dm_)[_dm_+1],
           _dn_=(s$0[2]+24|0)%55|0,
           r=
            (caml_check_bound(s$0[1],_dn_)[_dn_+1]+
             (curval^(curval>>>25|0)&31)|
             0)&
            num_1073741823,
           _do_=s$0[2];
          caml_check_bound(s$0[1],_do_)[_do_+1]=r;
          var v=caml_mod(r,bound);
          if(((num_1073741823-bound|0)+1|0)<(r-v|0))continue;
          return v}
      return invalid_arg(_co_)}
    caml_set_oo_id([num_248,_cr_,0]);
    function _cs_(param)
     {var seq=[];caml_update_dummy(seq,[0,seq,seq]);return seq}
    var Canceled=caml_set_oo_id([num_248,_ct_,0]),current_data=[0,0];
    function repr_rec(t)
     {var _dl_=t[1];
      if(3===_dl_[0])
       {var t$0=_dl_[1],t$1=repr_rec(t$0);
        if(t$1!==t$0)t[1]=[3,t$1];
        return t$1}
      return t}
    function repr(t){return repr_rec(t)}
    var
     async_exception_hook=
      [0,
       function(exn)
        {prerr_string(_cu_);
         prerr_string(to_string(exn));
         caml_ml_output_char(stderr,10);
         print_backtrace(stderr);
         caml_ml_flush(stderr);
         do_at_exit(0);
         return caml_sys_exit(2)}];
    function call_unsafe(f,x)
     {try
       {var _dk_=caml_call_gen1(f,x);return _dk_}
      catch(exn)
       {exn=caml_wrap_exception(exn);
        return caml_call_gen1(async_exception_hook[1],exn)}}
    function run_waiters_rec(state,ws,rem)
     {var ws$0=ws,rem$0=rem;
      for(;;)
       if(typeof ws$0==="number")
        return run_waiters_rec_next(state,rem$0);
       else
        switch(ws$0[0])
         {case 0:
           var _dj_=ws$0[1][1];
           return _dj_
                   ?(caml_call_gen1(_dj_[1],state),
                     run_waiters_rec_next(state,rem$0))
                   :run_waiters_rec_next(state,rem$0);
          case 1:
           caml_call_gen1(ws$0[1],state);
           return run_waiters_rec_next(state,rem$0);
          default:
           var rem$1=[0,ws$0[2],rem$0],ws$0=ws$0[1],rem$0=rem$1;continue}}
    function run_waiters_rec_next(state,rem)
     {return rem?run_waiters_rec(state,rem[1],rem[2]):0}
    function run_cancel_handlers_rec(chs,rem)
     {var chs$0=chs,rem$0=rem;
      for(;;)
       if(typeof chs$0==="number")
        return run_cancel_handlers_rec_next(rem$0);
       else
        switch(chs$0[0])
         {case 0:
           var f=chs$0[2];
           current_data[1]=chs$0[1];
           call_unsafe(f,0);
           return run_cancel_handlers_rec_next(rem$0);
          case 1:
           var n=chs$0[1];
           if(n[4]){n[4]=0;n[1][2]=n[2];n[2][1]=n[1]}
           return run_cancel_handlers_rec_next(rem$0);
          default:
           var rem$1=[0,chs$0[2],rem$0],chs$0=chs$0[1],rem$0=rem$1;continue}}
    function run_cancel_handlers_rec_next(rem)
     {return rem?run_cancel_handlers_rec(rem[1],rem[2]):0}
    function unsafe_run_waiters(sleeper,state)
     {var
       switch$0=
        1===state[0]
         ?state[1]===Canceled?(run_cancel_handlers_rec(sleeper[4],0),1):0
         :0;
      return run_waiters_rec(state,sleeper[2],0)}
    var wakening=[0,0],to_wakeup=[0,0,0];
    function wakeup(t$0,v)
     {var state=[0,v],t=repr_rec(t$0),_di_=t[1];
      switch(_di_[0])
       {case 1:if(_di_[1]===Canceled)return 0;break;
        case 2:
         var sleeper=_di_[1];
         t[1]=state;
         var
          snapshot=current_data[1],
          already_wakening=wakening[1]?1:(wakening[1]=1,0);
         unsafe_run_waiters(sleeper,state);
         if(already_wakening){current_data[1]=snapshot;return 0}
         for(;;)
          {if(0===to_wakeup[1])
            {wakening[1]=0;current_data[1]=snapshot;return 0}
           if(0===to_wakeup[1])throw _K_;
           to_wakeup[1]=to_wakeup[1]-1|0;
           var tail=to_wakeup[2],head=tail[2];
           if(head===tail)to_wakeup[2]=0;else tail[2]=head[2];
           var _dh_=head[1];
           unsafe_run_waiters(_dh_[1],_dh_[2]);
           continue}
        }
      return invalid_arg(_cv_)}
    function append(l1,l2)
     {return typeof l1==="number"?l2:typeof l2==="number"?l1:[2,l1,l2]}
    function cleanup(ws)
     {if(typeof ws!=="number")
       switch(ws[0])
        {case 0:if(!ws[1][1])return 0;break;
         case 2:
          var l1=ws[1],_dg_=cleanup(ws[2]);return append(cleanup(l1),_dg_)
         }
      return ws}
    function connect(t1,t2)
     {var t1$0=repr(t1),t2$0=repr(t2),_db_=t1$0[1];
      if(2===_db_[0])
       {var sleeper1=_db_[1];
        if(t1$0===t2$0)return 0;
        var _dc_=t2$0[1];
        if(2===_dc_[0])
         {var sleeper2=_dc_[1];
          t2$0[1]=[3,t1$0];
          sleeper1[1]=sleeper2[1];
          var
           waiters=append(sleeper1[2],sleeper2[2]),
           removed=sleeper1[3]+sleeper2[3]|0;
          if(42<removed)
           {sleeper1[3]=0;sleeper1[2]=cleanup(waiters)}
          else
           {sleeper1[3]=removed;sleeper1[2]=waiters}
          var
           _dd_=sleeper2[4],
           _de_=sleeper1[4],
           _df_=
            typeof _de_==="number"
             ?_dd_
             :typeof _dd_==="number"?_de_:[2,_de_,_dd_];
          sleeper1[4]=_df_;
          return 0}
        t1$0[1]=_dc_;
        return unsafe_run_waiters(sleeper1,_dc_)}
      throw [0,_p_,_cw_]}
    function fast_connect(t,state)
     {var t$0=repr(t),_da_=t$0[1];
      if(2===_da_[0])
       {var sleeper=_da_[1];
        t$0[1]=state;
        return unsafe_run_waiters(sleeper,state)}
      throw [0,_p_,_cx_]}
    function fail(e){return [0,[1,e]]}
    var
     pause_hook=[0,function(_c$_){return 0}],
     s1=_cs_(0),
     _cA_=[0,0],
     window=joo_global_object;
    function _cB_(param)
     {if(s1[2]===s1){_cA_[1]=0;return 0}
      var seq=_cs_(0);
      seq[1][2]=s1[2];
      s1[2][1]=seq[1];
      seq[1]=s1[1];
      s1[1][2]=seq;
      s1[1]=s1;
      s1[2]=s1;
      _cA_[1]=0;
      var curr=seq[2];
      for(;;)
       {var _c__=curr!==seq?1:0;
        if(_c__){if(curr[4])wakeup(curr[3],0);var curr=curr[2];continue}
        return _c__}}
    var no_handler=null,undefined$0=undefined;
    function _cC_(x){return 1-(x==no_handler?1:0)}
    var
     jsoo_7bc72a9e=window.Array,
     Error=caml_set_oo_id([num_248,_cD_,0]),
     exn=[0,Error,{}],
     false$0=false,
     slot=caml_obj_tag(exn)===num_248?exn:exn[1];
    caml_register_named_value(caml_new_string(str_jsError),slot);
    (function(exn){throw exn});
    register_printer
     (function(param)
       {return param[1]===Error?[0,caml_js_to_string(param[2].toString())]:0});
    register_printer
     (function(jsoo_self)
       {return jsoo_self instanceof jsoo_7bc72a9e
                ?0
                :[0,caml_js_to_string(jsoo_self.toString())]});
    var
     jsoo_ebd11ba6="2d",
     Canvas_not_available=caml_set_oo_id([num_248,_cE_,0]);
    window.HTMLElement===undefined$0;
    var _cF_=num_2147483e3,jsoo_self=caml_js_get_console(0);
    pause_hook[1]=
    function(param)
     {return 1===param?(window.setTimeout(caml_js_wrap_callback(_cB_),0),0):0};
    function _cG_(s){return jsoo_self.log(s.toString())}
    async_exception_hook[1]=
    function(exn)
     {_cG_(_cH_);_cG_(to_string(exn));return print_backtrace(stderr)};
    var
     seed$0=caml_sys_random_seed(0),
     n=12,
     jsoo_d761558f=17,
     seed=0===seed$0.length-1?[0,0]:seed$0,
     l=seed.length-1,
     i$0=0;
    for(;;)
     {caml_check_bound(s$0[1],i$0)[i$0+1]=i$0;
      var _cn_=i$0+1|0;
      if(54!==i$0){var i$0=_cn_;continue}
      var accu=[0,_ch_],_cj_=54+max(55,l)|0,_ci_=0;
      if(!(_cj_<0))
       {var i=_ci_;
        for(;;)
         {var
           j=i%55|0,
           k=caml_mod(i,l),
           x=caml_check_bound(seed,k)[k+1],
           str=_g_(accu[1],caml_new_string(str$8+x));
          accu[1]=caml_md5_string(str,0,caml_ml_string_length(str));
          var
           _ck_=accu[1],
           _cg_=
            ((caml_string_get(_ck_,0)+(caml_string_get(_ck_,1)<<8)|0)+
             (caml_string_get(_ck_,2)<<16)|
             0)+
            (caml_string_get(_ck_,3)<<24)|
            0,
           _cl_=(caml_check_bound(s$0[1],j)[j+1]^_cg_)&num_1073741823;
          caml_check_bound(s$0[1],j)[j+1]=_cl_;
          var _cm_=i+1|0;
          if(_cj_!==i){var i=_cm_;continue}
          break}}
      s$0[2]=0;
      var
       get=
        function(a,i,j,k)
         {var _c3_=i<0?1:0;
          if(_c3_)
           var _c4_=_c3_;
          else
           {var _c5_=j<0?1:0;
            if(_c5_)
             var _c4_=_c5_;
            else
             {var _c6_=k<0?1:0;
              if(_c6_)
               var _c4_=_c6_;
              else
               {var _c7_=i<12?1:0;
                if(_c7_)
                 {var _c8_=j<12?1:0;
                  if(_c8_)
                   var
                    _c9_=k<12?1:0,
                    _c4_=
                     _c9_
                      ?caml_check_bound
                         (caml_check_bound(caml_check_bound(a,i)[i+1],j)[j+1],k)
                        [k+1]
                      :_c9_;
                  else
                   var _c4_=_c8_}
                else
                 var _c4_=_c7_}}}
          return _c4_},
       top="#a8a8f6",
       left="#d9d9d9",
       right="#767676",
       on_cube=
        function(jsoo_self,i,j,k,f)
         {jsoo_self.save();
          jsoo_self.translate
           ((((i-k|0)+12|0)-1|0)*jsoo_d761558f,(11-j|0)*20+(i+k|0)*20/2);
          caml_call_gen1(f,jsoo_self);
          return jsoo_self.restore()},
       draw_top=
        function(jsoo_self)
         {jsoo_self.fillStyle=top;
          jsoo_self.beginPath();
          jsoo_self.moveTo(jsoo_d761558f,0);
          jsoo_self.lineTo(2*jsoo_d761558f,10);
          jsoo_self.lineTo(jsoo_d761558f,20);
          jsoo_self.lineTo(0,10);
          return jsoo_self.fill()},
       top_edges=
        function(jsoo_self)
         {jsoo_self.beginPath();
          jsoo_self.moveTo(0,10);
          jsoo_self.lineTo(jsoo_d761558f,0);
          jsoo_self.lineTo(2*jsoo_d761558f,10);
          return jsoo_self.stroke()},
       draw_right=
        function(jsoo_self)
         {jsoo_self.fillStyle=right;
          jsoo_self.beginPath();
          jsoo_self.moveTo(jsoo_d761558f,20);
          jsoo_self.lineTo(jsoo_d761558f,40);
          jsoo_self.lineTo(2*jsoo_d761558f,30);
          jsoo_self.lineTo(2*jsoo_d761558f,10);
          return jsoo_self.fill()},
       right_edges=
        function(jsoo_self)
         {jsoo_self.beginPath();
          jsoo_self.moveTo(jsoo_d761558f,40);
          jsoo_self.lineTo(jsoo_d761558f,20);
          jsoo_self.lineTo(2*jsoo_d761558f,10);
          return jsoo_self.stroke()},
       draw_left=
        function(jsoo_self)
         {jsoo_self.fillStyle=left;
          jsoo_self.beginPath();
          jsoo_self.moveTo(jsoo_d761558f,20);
          jsoo_self.lineTo(jsoo_d761558f,40);
          jsoo_self.lineTo(0,30);
          jsoo_self.lineTo(0,10);
          return jsoo_self.fill()},
       left_edges=
        function(jsoo_self)
         {jsoo_self.beginPath();
          jsoo_self.moveTo(jsoo_d761558f,20);
          jsoo_self.lineTo(0,10);
          jsoo_self.lineTo(0,30);
          return jsoo_self.stroke()},
       tile=
        function(c,a,param)
         {var i$1=0,left=param[3],right=param[2],top=param[1];
          a:
          for(;;)
           {var j$1=[0,11],k$1=0;
            b:
            for(;;)
             for(;;)
              {if(0<=j$1[1])
                {var _c1_=j$1[1];
                 if
                  (!caml_check_bound
                     (caml_check_bound(caml_check_bound(a,i$1)[i$1+1],_c1_)
                       [_c1_+1],
                      k$1)
                    [k$1+1])
                  {j$1[1]+=-1;continue}}
               on_cube(c,i$1,j$1[1],k$1,top);
               var _c2_=k$1+1|0;
               if(11!==k$1){var k$1=_c2_;continue b}
               var _c0_=i$1+1|0;
               if(11!==i$1){var i$1=_c0_;continue a}
               var j$0=0;
               c:
               for(;;)
                {var i$0=[0,11],k$0=0;
                 d:
                 for(;;)
                  for(;;)
                   {if(0<=i$0[1])
                     {var _cY_=i$0[1];
                      if
                       (!caml_check_bound
                          (caml_check_bound(caml_check_bound(a,_cY_)[_cY_+1],j$0)
                            [j$0+1],
                           k$0)
                         [k$0+1])
                       {i$0[1]+=-1;continue}}
                    on_cube(c,i$0[1],j$0,k$0,right);
                    var _cZ_=k$0+1|0;
                    if(11!==k$0){var k$0=_cZ_;continue d}
                    var _cX_=j$0+1|0;
                    if(11!==j$0){var j$0=_cX_;continue c}
                    var i=0;
                    e:
                    for(;;)
                     {var k=[0,11],j=0;
                      f:
                      for(;;)
                       for(;;)
                        {if(0<=k[1])
                          {var _cV_=k[1];
                           if
                            (!caml_check_bound
                               (caml_check_bound(caml_check_bound(a,i)[i+1],j)[j+1],_cV_)
                              [_cV_+1])
                            {k[1]+=-1;continue}}
                         on_cube(c,i,j,k[1],left);
                         var _cW_=j+1|0;
                         if(11!==j){var j=_cW_;continue f}
                         var _cU_=i+1|0;
                         if(11!==i){var i=_cU_;continue e}
                         return 0}}}}}}},
       create_canvas=
        function(param)
         {var c=window.document.createElement("canvas");
          if(_cC_(c.getContext))
           {c.width=(24*(jsoo_d761558f|0)|0)+1|0;
            c.height=(24*20|0)+1|0;
            return c}
          throw Canvas_not_available},
       redraw=
        function(jsoo_self,jsoo_b9bde2df,a)
         {var jsoo_self$0=jsoo_b9bde2df.getContext(jsoo_ebd11ba6);
          jsoo_self$0.setTransform(1,0,0,1,0,0);
          jsoo_self$0.clearRect(0,0,jsoo_b9bde2df.width,jsoo_b9bde2df.height);
          jsoo_self$0.setTransform(1,0,0,1,num_0_5,num_0_5);
          jsoo_self$0.globalCompositeOperation="lighter";
          tile(jsoo_self$0,a,[0,draw_top,draw_right,draw_left]);
          jsoo_self$0.globalCompositeOperation="source-over";
          tile(jsoo_self$0,a,[0,top_edges,right_edges,left_edges]);
          jsoo_self$0.beginPath();
          jsoo_self$0.moveTo(0,num_360);
          jsoo_self$0.lineTo(12*jsoo_d761558f,480);
          jsoo_self$0.lineTo(24*jsoo_d761558f,num_360);
          jsoo_self$0.lineTo(24*jsoo_d761558f,num_120);
          jsoo_self$0.stroke();
          return jsoo_self.drawImage(jsoo_b9bde2df,0,0)},
       loop=
        function(c$0,c,a)
         {function f$0(param)
           {var need_redraw=[0,0],i$0=0;
            for(;;)
             {var i=_cq_(n),j=_cq_(n),k=_cq_(n);
              if
               (caml_check_bound
                  (caml_check_bound(caml_check_bound(a,i)[i+1],j)[j+1],k)
                 [k+1])
               {if(get(a,i+1|0,j,k))
                 var switch$0=0;
                else
                 if(get(a,i,j+1|0,k))
                  var switch$0=0;
                 else
                  if(get(a,i,j,k+1|0))
                   var switch$0=0;
                  else
                   {caml_check_bound
                      (caml_check_bound(caml_check_bound(a,i)[i+1],j)[j+1],k)
                     [k+1]=
                    0;
                    var _cR_=1,switch$0=1}
                if(!switch$0)var _cR_=0}
              else
               {if(get(a,i-1|0,j,k))
                 if(get(a,i,j-1|0,k))
                  if(get(a,i,j,k-1|0))
                   {caml_check_bound
                      (caml_check_bound(caml_check_bound(a,i)[i+1],j)[j+1],k)
                     [k+1]=
                    1;
                    var _cR_=1,switch$1=1}
                  else
                   var switch$1=0;
                 else
                  var switch$1=0;
                else
                 var switch$1=0;
                if(!switch$1)var _cR_=0}
              var _cS_=_cR_||need_redraw[1];
              need_redraw[1]=_cS_;
              var _cT_=i$0+1|0;
              if(99!==i$0){var i$0=_cT_;continue}
              if(need_redraw[1])redraw(c$0,c,a);
              return loop(c$0,c,a)}}
          var t=[0,[2,[0,1,0,0,0]]],d=0.2*num_1e3,id=[0,0];
          function callback(_cQ_){return wakeup(t,_cQ_)}
          function loop$0(d,param)
           {var
             match=num_2147483e3<d?[0,_cF_,d-num_2147483e3]:[0,d,0],
             remain=match[2],
             step=match[1],
             cb=remain==0?callback:function(_cP_){return loop$0(remain,_cP_)};
            id[1]=[0,window.setTimeout(caml_js_wrap_callback(cb),step)];
            return 0}
          loop$0(d,0);
          function f(param)
           {var _cO_=id[1];
            if(_cO_){var x=_cO_[1];id[1]=0;return window.clearTimeout(x)}
            return 0}
          var _cJ_=repr(t)[1];
          switch(_cJ_[0])
           {case 1:
             var switch$0=_cJ_[1]===Canceled?(call_unsafe(f,0),1):0;break;
            case 2:
             var
              sleeper=_cJ_[1],
              handler=[0,current_data[1],f],
              _cK_=sleeper[4],
              handler$0=typeof _cK_==="number"?handler:[2,handler,_cK_];
             sleeper[4]=handler$0;
             var switch$0=1;
             break;
            default:var switch$0=0}
          var t$0=repr(t),_cL_=t$0[1];
          switch(_cL_[0])
           {case 0:return f$0(_cL_[1]);
            case 1:return [0,_cL_];
            case 2:
             var
              sleeper$0=_cL_[1],
              res=[0,[2,[0,[0,[0,t$0]],0,0,0]]],
              data=current_data[1],
              waiter$0=
               [1,
                function(state)
                 {switch(state[0])
                   {case 0:
                     var v=state[1];
                     current_data[1]=data;
                     try
                      {var _cN_=f$0(v),_cM_=_cN_}
                     catch(exn){exn=caml_wrap_exception(exn);var _cM_=fail(exn)}
                     return connect(res,_cM_);
                    case 1:return fast_connect(res,state);
                    default:throw [0,_p_,_cy_]}}],
              _cI_=sleeper$0[2],
              waiter=typeof _cI_==="number"?waiter$0:[2,waiter$0,_cI_];
             sleeper$0[2]=waiter;
             return res;
            default:throw [0,_p_,_cz_]}},
       f=
        function(param)
         {var jsoo_ad7fbbdd=create_canvas(0),c=create_canvas(0);
          window.document.body.appendChild(jsoo_ad7fbbdd);
          var c$0=jsoo_ad7fbbdd.getContext(jsoo_ebd11ba6);
          c$0.globalCompositeOperation="copy";
          var
           v=1,
           a=
            _l_
             (n,
              function(param)
               {return _l_(n,function(param){return caml_make_vect(12,v)})});
          redraw(c$0,c,a);
          loop(c$0,c,a);
          return false$0};
      window.onload=
      function(jsoo_self)
       {if(_cC_(jsoo_self))
         {var res=f(jsoo_self);
          if(!(res|0))jsoo_self.preventDefault();
          return res}
        var jsoo_obj=event,match=f(jsoo_obj);
        if(!(match|0))jsoo_obj.returnValue=match;
        return match};
      do_at_exit(0);
      return}}
  (function(){return this}()));

//# sourceMappingURL=cubes.map