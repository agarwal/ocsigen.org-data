<<code language="ocaml" | sig
  type 'a t
  val const : 'a -> 'a t
  val value : 'a t -> 'a Eliom_lib.shared_value
  val map :
    ?eq:('b -> 'b -> bool) Eliom_lib.shared_value ->
    ('a -> 'b) Eliom_lib.shared_value -> 'a t -> 'b t
  val merge :
    ?eq:('a -> 'a -> bool) ->
    ('a -> 'b -> 'a) Eliom_lib.shared_value -> 'a -> 'b t list -> 'a t
  val l2 :
    ?eq:('c -> 'c -> bool) Eliom_lib.shared_value ->
    ('a -> 'b -> 'c) Eliom_lib.shared_value -> 'a t -> 'b t -> 'c t
  val l3 :
    ?eq:('d -> 'd -> bool) Eliom_lib.shared_value ->
    ('a -> 'b -> 'c -> 'd) Eliom_lib.shared_value ->
    'a t -> 'b t -> 'c t -> 'd t
  val l4 :
    ?eq:('e -> 'e -> bool) Eliom_lib.shared_value ->
    ('a -> 'b -> 'c -> 'd -> 'e) Eliom_lib.shared_value ->
    'a t -> 'b t -> 'c t -> 'd t -> 'e t
  val l5 :
    ?eq:('f -> 'f -> bool) Eliom_lib.shared_value ->
    ('a -> 'b -> 'c -> 'd -> 'e -> 'f) Eliom_lib.shared_value ->
    'a t -> 'b t -> 'c t -> 'd t -> 'e t -> 'f t
  val l6 :
    ?eq:('g -> 'g -> bool) Eliom_lib.shared_value ->
    ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g) Eliom_lib.shared_value ->
    'a t -> 'b t -> 'c t -> 'd t -> 'e t -> 'f t -> 'g t
  val switch :
    ?eq:('a -> 'a -> bool) Eliom_lib.shared_value -> 'a t t -> 'a t
  module Infix :
    sig
      val ( >|= ) : 'a t -> ('a -> 'b) Eliom_lib.shared_value -> 'b t
      val ( =|< ) : ('a -> 'b) Eliom_lib.shared_value -> 'a t -> 'b t
    end
  module Lwt :
    sig
      val map_s :
        ?eq:('b -> 'b -> bool) Eliom_lib.shared_value ->
        ('a -> 'b Lwt.t) Eliom_lib.shared_value -> 'a t -> 'b t Lwt.t
      val l2_s :
        ?eq:('c -> 'c -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c Lwt.t) Eliom_lib.shared_value ->
        'a t -> 'b t -> 'c t Lwt.t
      val l3_s :
        ?eq:('d -> 'd -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd Lwt.t) Eliom_lib.shared_value ->
        'a t -> 'b t -> 'c t -> 'd t Lwt.t
      val l4_s :
        ?eq:('e -> 'e -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd -> 'e Lwt.t) Eliom_lib.shared_value ->
        'a t -> 'b t -> 'c t -> 'd t -> 'e t Lwt.t
      val l5_s :
        ?eq:('f -> 'f -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd -> 'e -> 'f Lwt.t) Eliom_lib.shared_value ->
        'a t -> 'b t -> 'c t -> 'd t -> 'e t -> 'f t Lwt.t
      val l6_s :
        ?eq:('g -> 'g -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g Lwt.t) Eliom_lib.shared_value ->
        'a t -> 'b t -> 'c t -> 'd t -> 'e t -> 'f t -> 'g t Lwt.t
      val merge_s :
        ?eq:('a -> 'a -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'a Lwt.t) Eliom_lib.shared_value ->
        'a -> 'b t list -> 'a t Lwt.t
    end
  val create :
    ?default:('a React.S.t * (?step:React.step -> 'a -> unit)) option
             Eliom_lib.client_value ->
    ?reset_default:bool ->
    'a -> 'a t * (?step:React.step -> 'a -> unit) Eliom_lib.shared_value
  val synced : 'a t -> bool
end >>