<<code language="ocaml" | sig
  module type VALUE =
    sig
      type 'a t = 'a Eliom_lib.shared_value
      val client : 'a Eliom_shared_sigs.VALUE.t -> 'a Eliom_lib.client_value
      val local : 'a Eliom_shared_sigs.VALUE.t -> 'a
    end
  module type S =
    sig
      type 'a t
      val const : 'a -> 'a Eliom_shared_sigs.S.t
      val value : 'a Eliom_shared_sigs.S.t -> 'a Eliom_lib.shared_value
      val map :
        ?eq:('b -> 'b -> bool) Eliom_lib.shared_value ->
        ('a -> 'b) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t -> 'b Eliom_shared_sigs.S.t
      val fmap :
        ?eq:('b -> 'b -> bool) Eliom_lib.shared_value ->
        ('a -> 'b option) Eliom_lib.shared_value ->
        'b Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t -> 'b Eliom_shared_sigs.S.t
      val merge :
        ?eq:('a -> 'a -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'a) Eliom_lib.shared_value ->
        'a -> 'b Eliom_shared_sigs.S.t list -> 'a Eliom_shared_sigs.S.t
      val l2 :
        ?eq:('c -> 'c -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t ->
        'b Eliom_shared_sigs.S.t -> 'c Eliom_shared_sigs.S.t
      val l3 :
        ?eq:('d -> 'd -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t ->
        'b Eliom_shared_sigs.S.t ->
        'c Eliom_shared_sigs.S.t -> 'd Eliom_shared_sigs.S.t
      val l4 :
        ?eq:('e -> 'e -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd -> 'e) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t ->
        'b Eliom_shared_sigs.S.t ->
        'c Eliom_shared_sigs.S.t ->
        'd Eliom_shared_sigs.S.t -> 'e Eliom_shared_sigs.S.t
      val l5 :
        ?eq:('f -> 'f -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd -> 'e -> 'f) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t ->
        'b Eliom_shared_sigs.S.t ->
        'c Eliom_shared_sigs.S.t ->
        'd Eliom_shared_sigs.S.t ->
        'e Eliom_shared_sigs.S.t -> 'f Eliom_shared_sigs.S.t
      val l6 :
        ?eq:('g -> 'g -> bool) Eliom_lib.shared_value ->
        ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t ->
        'b Eliom_shared_sigs.S.t ->
        'c Eliom_shared_sigs.S.t ->
        'd Eliom_shared_sigs.S.t ->
        'e Eliom_shared_sigs.S.t ->
        'f Eliom_shared_sigs.S.t -> 'g Eliom_shared_sigs.S.t
      val switch :
        ?eq:('a -> 'a -> bool) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.S.t Eliom_shared_sigs.S.t ->
        'a Eliom_shared_sigs.S.t
      module Infix :
        sig
          val ( >|= ) :
            'a Eliom_shared_sigs.S.t ->
            ('a -> 'b) Eliom_lib.shared_value -> 'b Eliom_shared_sigs.S.t
          val ( =|< ) :
            ('a -> 'b) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t -> 'b Eliom_shared_sigs.S.t
        end
      module Lwt :
        sig
          val map_s :
            ?eq:('b -> 'b -> bool) Eliom_lib.shared_value ->
            ('a -> 'b Lwt.t) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t -> 'b Eliom_shared_sigs.S.t Lwt.t
          val l2_s :
            ?eq:('c -> 'c -> bool) Eliom_lib.shared_value ->
            ('a -> 'b -> 'c Lwt.t) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t ->
            'b Eliom_shared_sigs.S.t -> 'c Eliom_shared_sigs.S.t Lwt.t
          val l3_s :
            ?eq:('d -> 'd -> bool) Eliom_lib.shared_value ->
            ('a -> 'b -> 'c -> 'd Lwt.t) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t ->
            'b Eliom_shared_sigs.S.t ->
            'c Eliom_shared_sigs.S.t -> 'd Eliom_shared_sigs.S.t Lwt.t
          val l4_s :
            ?eq:('e -> 'e -> bool) Eliom_lib.shared_value ->
            ('a -> 'b -> 'c -> 'd -> 'e Lwt.t) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t ->
            'b Eliom_shared_sigs.S.t ->
            'c Eliom_shared_sigs.S.t ->
            'd Eliom_shared_sigs.S.t -> 'e Eliom_shared_sigs.S.t Lwt.t
          val l5_s :
            ?eq:('f -> 'f -> bool) Eliom_lib.shared_value ->
            ('a -> 'b -> 'c -> 'd -> 'e -> 'f Lwt.t) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t ->
            'b Eliom_shared_sigs.S.t ->
            'c Eliom_shared_sigs.S.t ->
            'd Eliom_shared_sigs.S.t ->
            'e Eliom_shared_sigs.S.t -> 'f Eliom_shared_sigs.S.t Lwt.t
          val l6_s :
            ?eq:('g -> 'g -> bool) Eliom_lib.shared_value ->
            ('a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g Lwt.t)
            Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.S.t ->
            'b Eliom_shared_sigs.S.t ->
            'c Eliom_shared_sigs.S.t ->
            'd Eliom_shared_sigs.S.t ->
            'e Eliom_shared_sigs.S.t ->
            'f Eliom_shared_sigs.S.t -> 'g Eliom_shared_sigs.S.t Lwt.t
          val merge_s :
            ?eq:('a -> 'a -> bool) Eliom_lib.shared_value ->
            ('a -> 'b -> 'a Lwt.t) Eliom_lib.shared_value ->
            'a ->
            'b Eliom_shared_sigs.S.t list -> 'a Eliom_shared_sigs.S.t Lwt.t
        end
    end
  module type RLIST =
    sig
      type 'a t
      type 'a handle
      type 'a signal
      type 'a ct
      type 'a chandle
      val make :
        ?default:('a Eliom_shared_sigs.RLIST.ct *
                  'a Eliom_shared_sigs.RLIST.chandle)
                 option Eliom_lib.client_value ->
        ?reset_default:bool ->
        'a list ->
        'a Eliom_shared_sigs.RLIST.t * 'a Eliom_shared_sigs.RLIST.handle
      val concat :
        'a Eliom_shared_sigs.RLIST.t ->
        'a Eliom_shared_sigs.RLIST.t -> 'a Eliom_shared_sigs.RLIST.t
      val value :
        'a Eliom_shared_sigs.RLIST.t -> 'a list Eliom_lib.shared_value
      val value_s :
        'a Eliom_shared_sigs.RLIST.t ->
        'a list Eliom_shared_sigs.RLIST.signal
      val singleton_s :
        'a Eliom_shared_sigs.RLIST.signal -> 'a Eliom_shared_sigs.RLIST.t
      val map :
        ('a -> 'b) Eliom_lib.shared_value ->
        'a Eliom_shared_sigs.RLIST.t -> 'b Eliom_shared_sigs.RLIST.t
      val make_from_s :
        ?eq:('a -> 'a -> bool) Eliom_lib.shared_value ->
        'a list Eliom_shared_sigs.RLIST.signal ->
        'a Eliom_shared_sigs.RLIST.t
      val acc_e :
        ?init:'a Eliom_shared_sigs.RLIST.t *
              'a Eliom_shared_sigs.RLIST.handle ->
        'a React.E.t Eliom_lib.client_value -> 'a Eliom_shared_sigs.RLIST.t
      module Lwt :
        sig
          val map_p :
            ('a -> 'b Lwt.t) Eliom_lib.shared_value ->
            'a Eliom_shared_sigs.RLIST.t ->
            'b Eliom_shared_sigs.RLIST.t Lwt.t
        end
    end
end >>