<<code language="ocaml" | sig
  type 'a service =
      (unit,
       'a *
       ((float * float * float * float) Eliom_lib.Option.t *
        Eliom_lib.file_info),
       Eliom_service.post_service_kind, Eliom_service.non_attached_kind,
       [ `NonattachedCoservice ], [ `WithoutSuffix ], unit,
       [ `One of 'a Eliom_parameter.ocaml ] Eliom_parameter.param_name *
       ([ `One of
            (float * float * float * float) Eliom_lib.Option.t
            Eliom_parameter.ocaml ]
        Eliom_parameter.param_name *
        [ `One of Eliom_lib.file_info ] Eliom_parameter.param_name),
       [ `Registrable ], unit Eliom_service.ocaml_service)
      Eliom_service.service
  val input :
    [< Html5_types.label_content_fun ] Eliom_content.Html5.elt list ->
    [> `Input ] Eliom_content.Html5.elt * [> `Label ] Eliom_content.Html5.elt
  val preview : unit -> [> `Img ] Eliom_content.Html5.elt
  val submit :
    [< Html5_types.button_content ] Eliom_content.Html5.elt list ->
    [> `Button ] Eliom_content.Html5.elt
  val mk_service :
    string -> 'a Deriving_Json.t -> 'a Ot_picture_uploader.service
  val mk_form :
    ?after_submit:(unit -> unit Lwt.t) ->
    ?crop:float option ->
    ?input:[< Html5_types.label_content_fun ] Eliom_content.Html5.elt list ->
    ?submit:[< Html5_types.button_content_fun ] Eliom_content.Html5.elt list ->
    'a Ot_picture_uploader.service ->
    'a -> [> `Form ] Eliom_content.Html5.elt Lwt.t
end >>