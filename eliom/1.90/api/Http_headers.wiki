=Module <<a_api_type | module Http_headers >> =
<<div class="code"|<<span class="keyword"|module>> Http_headers: <<span class='code'|sig>><<a_api text=".." | module Http_headers >><<span class='code'|end>>>>returns an empty set of ~H~T~T~P headers\\

----
<<div class="code" id="TYPEname"|<<span class="keyword"|type>> name>>

<<div id="VALname" class="code"|<<span class="keyword"|val>> name : <<span class="code type"|string -> <<a_api text="name" | type Http_headers.name >>>>>><<div id="VALname_to_string" class="code"|<<span class="keyword"|val>> name~_to~_string : <<span class="code type"|<<a_api text="name" | type Http_headers.name >> -> string>>>><<div class="code"|<<span class="keyword"|module>> <<a_api text="NameHtbl" | module Http_headers.NameHtbl >>: <<span class="code type"|Hashtbl.S>><<span class="code type"|{{{  }}} with type key = name>>>><<div id="VALaccept" class="code"|<<span class="keyword"|val>> accept : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALaccept_charset" class="code"|<<span class="keyword"|val>> accept~_charset : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALaccept_encoding" class="code"|<<span class="keyword"|val>> accept~_encoding : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALaccept_language" class="code"|<<span class="keyword"|val>> accept~_language : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALaccept_ranges" class="code"|<<span class="keyword"|val>> accept~_ranges : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALcache_control" class="code"|<<span class="keyword"|val>> cache~_control : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALconnection" class="code"|<<span class="keyword"|val>> connection : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALcontent_encoding" class="code"|<<span class="keyword"|val>> content~_encoding : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALcontent_length" class="code"|<<span class="keyword"|val>> content~_length : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALcontent_type" class="code"|<<span class="keyword"|val>> content~_type : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALcontent_range" class="code"|<<span class="keyword"|val>> content~_range : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALcookie" class="code"|<<span class="keyword"|val>> cookie : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALdate" class="code"|<<span class="keyword"|val>> date : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALetag" class="code"|<<span class="keyword"|val>> etag : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALexpires" class="code"|<<span class="keyword"|val>> expires : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALhost" class="code"|<<span class="keyword"|val>> host : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALif_match" class="code"|<<span class="keyword"|val>> if~_match : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALif_modified_since" class="code"|<<span class="keyword"|val>> if~_modified~_since : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALif_none_match" class="code"|<<span class="keyword"|val>> if~_none~_match : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALif_unmodified_since" class="code"|<<span class="keyword"|val>> if~_unmodified~_since : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALif_range" class="code"|<<span class="keyword"|val>> if~_range : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALlast_modified" class="code"|<<span class="keyword"|val>> last~_modified : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALlocation" class="code"|<<span class="keyword"|val>> location : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALserver" class="code"|<<span class="keyword"|val>> server : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALset_cookie" class="code"|<<span class="keyword"|val>> set~_cookie : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALstatus" class="code"|<<span class="keyword"|val>> status : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALtransfer_encoding" class="code"|<<span class="keyword"|val>> transfer~_encoding : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALuser_agent" class="code"|<<span class="keyword"|val>> user~_agent : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALreferer" class="code"|<<span class="keyword"|val>> referer : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div id="VALrange" class="code"|<<span class="keyword"|val>> range : <<span class="code type"|<<a_api text="name" | type Http_headers.name >>>>>><<div class="code" id="TYPEt"|<<span class="keyword"|type>> t>>

<<div id="VALempty" class="code"|<<span class="keyword"|val>> empty : <<span class="code type"|<<a_api text="t" | type Http_headers.t >>>>>><<div class="info"|returns an empty set of ~H~T~T~P headers\\
>>
<<div id="VALadd" class="code"|<<span class="keyword"|val>> add : <<span class="code type"|<<a_api text="name" | type Http_headers.name >> -> string -> <<a_api text="t" | type Http_headers.t >> -> <<a_api text="t" | type Http_headers.t >>>>>><<div class="info"|<<span class='code'|add name s h>> adds the header <<span class='code'|name~: s>> to <<span class='code'|h>>~.\\
>>
<<div id="VALreplace" class="code"|<<span class="keyword"|val>> replace : <<span class="code type"|<<a_api text="name" | type Http_headers.name >> -> string -> <<a_api text="t" | type Http_headers.t >> -> <<a_api text="t" | type Http_headers.t >>>>>><<div class="info"|replace a header by another one~. ~If it does not exist~, adds it~.\\
>>
<<div id="VALreplace_opt" class="code"|<<span class="keyword"|val>> replace~_opt : <<span class="code type"|<<a_api text="name" | type Http_headers.name >> -> string option -> <<a_api text="t" | type Http_headers.t >> -> <<a_api text="t" | type Http_headers.t >>>>>><<div class="info"|replace or remove a header~.\\
>>
<<div id="VALfind" class="code"|<<span class="keyword"|val>> find : <<span class="code type"|<<a_api text="name" | type Http_headers.name >> -> <<a_api text="t" | type Http_headers.t >> -> string>>>><<div class="info"|find one of the values bound to <<span class='code'|name>> in the ~H~T~T~P header <<span class='code'|t>>~.
   ~Raise <<span class='code'|~Not~_found>> if it is not bound~.\\
>>
<<div id="VALfind_all" class="code"|<<span class="keyword"|val>> find~_all : <<span class="code type"|<<a_api text="name" | type Http_headers.name >> -> <<a_api text="t" | type Http_headers.t >> -> string list>>>><<div class="info"|find all the values bound to <<span class='code'|name>> in the ~H~T~T~P header <<span class='code'|t>>~.\\
>>
<<div id="VALiter" class="code"|<<span class="keyword"|val>> iter : <<span class="code type"|(<<a_api text="name" | type Http_headers.name >> -> string -> unit) -> <<a_api text="t" | type Http_headers.t >> -> unit>>>><<div id="VALfold" class="code"|<<span class="keyword"|val>> fold : <<span class="code type"|(<<a_api text="name" | type Http_headers.name >> -> string list -> 'a -> 'a) -> <<a_api text="t" | type Http_headers.t >> -> 'a -> 'a>>>><<div id="VALwith_defaults" class="code"|<<span class="keyword"|val>> with~_defaults : <<span class="code type"|<<a_api text="t" | type Http_headers.t >> -> <<a_api text="t" | type Http_headers.t >> -> <<a_api text="t" | type Http_headers.t >>>>>><<div class="info"|<<span class='code'|with~_defaults h~1 h~2>> adds headers from <<span class='code'|h~1>> to <<span class='code'|h~2>>~.
   ~If some headers were present~, the are replaced by those from <<span class='code'|h~1>>~.\\
>>
<<div id="VALdyn_headers" class="code"|<<span class="keyword"|val>> dyn~_headers : <<span class="code type"|<<a_api text="t" | type Http_headers.t >>>>>><<div class="info"|~Headers for dynamic pages ~(non cachable~)\\
>>
