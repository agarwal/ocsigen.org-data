=Module <<a_api_type subproject="server" | module Eliom_service.Http >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Http>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Eliom_service.Http >><<span class="ocsforge_color_keyword"|end>>>>~Default module for creating services

----


==@@id="2_Definitionsofservices"@@~Definitions of services==



    //~Warning~: ~These functions must be called when the site
    information is available~, that is~, either during a request or
    during the initialisation phase of the site~.  ~Otherwise~, it will
    raise the exception
    <<a_api subproject="server" | exception Eliom_common.Eliom_site_information_not_available >>~.  ~If you are
    using static linking~, you must delay the call to this function
    until the configuration file is read~, using
    <<a_api subproject="server" | val Eliom_service.register_eliom_module >>~. ~Otherwise you will also
    get this exception~.//


===@@id="3_Mainservices"@@~Main services===

<<pre id="VALservice" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?priority: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, unit,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Service ] ], [> `Get ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   'a, 'gn, unit, [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|service ~~path ~~get~_params ~(~)>> creates a <<a_api subproject="server" | val Eliom_service.Http.service >>
    associated to the path <<span class="odocwiki_inlinecode"|path>> and taking <<span class="odocwiki_inlinecode"|get~_params>> as ~G~E~T
    parameters~.


    ~If the optional parameter <<span class="odocwiki_inlinecode"|~~https~:true>> is given~, all links
    towards that service will use https~. ~By default~, links will keep
    the current protocol~.


    ~The optional parameter <<span class="odocwiki_inlinecode"|~~priority>> allows one to change the priority
    order between service that shares the same path~. ~The default
    priority is ~0 ~; if you want the service to be tried before
    ~(resp~. after~) other services~, put a higher ~(resp~. lower~) priority~.


    ~If the optional parameter <<span class="odocwiki_inlinecode"|~~keep~_nl~_params~:`~Persistent>>
    ~(resp~. <<span class="odocwiki_inlinecode"|~~keep~_nl~_params~:`~All>>~) is given~, all links towards that
    service will keep persistent ~(resp~. all~) non localized ~G~E~T
    parameters of the current service~. ~The default is <<span class="odocwiki_inlinecode"|`~None>>~. ~See the
    eliom manual for more information about <<a_manual
    chapter="params" fragment="nonlocalizedparameters"|non localized
    parameters>>~.


    ~The optional parameter <<span class="odocwiki_inlinecode"|~?rt>> is used to constrain the type parameter <<span class="odocwiki_inlinecode"|~'rt>>
    of the service in the case it is <<span class="odocwiki_inlinecode"|~'rt ~Eliom~_service~.ocaml~_service>>~.
    ~Example~:
    <<span class="odocwiki_inlinecode"|service ~~rt~:~(~Eliom~_service~.rt ~: your~_return~_type ~Eliom~_service~.rt~)>>~.
>>
<<pre id="VALpost_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|post~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| fallback: >><<span class="ocsforge_color_delimiter"| ( >>'get, unit,\\            [ `Attached of\\                <<span class="ocsforge_color_delimiter"| ( >>[ `Internal of [ `Coservice | `Service ] ], [ `Get ]<<span class="ocsforge_color_delimiter"| ) >>\\                <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\            [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn, unit, [< `Registrable ],\\            [< <<a_api subproject="server" text="Eliom_service.non_ocaml_service" | type Eliom_service.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\           <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?priority: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| post_params: >><<span class="ocsforge_color_delimiter"| ( >>'post, [ `WithoutSuffix ], 'pn<<span class="ocsforge_color_delimiter"| ) >>\\              <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, 'post,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [ `Coservice | `Service ] ], [> `Post ]<<span class="ocsforge_color_delimiter"| ) >>\\        <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   'a, 'gn, 'pn, [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|post~_service ~~fallback ~~post~_params ~(~)>> creates a
    service that takes <<span class="odocwiki_inlinecode"|post~_params>> as ~P~O~S~T parameters and share the
    same path and ~G~E~T parameters than the service <<span class="odocwiki_inlinecode"|fallback>>~.


    ~P~O~S~T parameters couldn~'t contain a suffix parameter~.


    ~The service <<span class="odocwiki_inlinecode"|fallback>> should be an ~(internal~) attached service
    without ~P~O~S~T parameters ~; it couldn~'t be a preapplied service~.
    ~This argument enforces the creation of an equivalent service ~(
    i~.e~. a service with the same path and ~G~E~T parameters ~) to be
    served when ~P~O~S~T parameters are missing~. ~Thus~, the user cannot put
    a bookmark on a page that does not exist~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of optional <<span class="odocwiki_inlinecode"|~~https>>~,
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>>~, <<span class="odocwiki_inlinecode"|~~priority>> and <<span class="odocwiki_inlinecode"|~~rt>> parameters ~.
>>
<<pre id="VALput_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|put~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?priority: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Service ] ], [> `Put ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   'a, 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|put~_service ~~path ~~get~_params ~(~)>> creates a service
    that answers the ~H~T~T~P ~P~U~T method~, and only takes
    <<a_api subproject="server" | val Eliom_parameter.raw_post_data >> as ~P~O~S~T parameter~.


    <<span class="odocwiki_inlinecode"|path>> and <<span class="odocwiki_inlinecode"|get~_params>>~, however~, can be set at will~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of optional <<span class="odocwiki_inlinecode"|~~https>>~,
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>>~, <<span class="odocwiki_inlinecode"|~~priority>> and <<span class="odocwiki_inlinecode"|~~rt>> parameters ~.
>>
<<pre id="VALdelete_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|delete~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?priority: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Service ] ], [> `Delete ]<<span class="ocsforge_color_delimiter"| ) >>\\        <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   'a, 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|delete~_service ~~path ~~get~_params ~(~)>> creates a
    service that answers the ~H~T~T~P ~D~E~L~E~T~E method~, and only takes
    <<a_api subproject="server" | val Eliom_parameter.raw_post_data >> as ~P~O~S~T parameter~.


    <<span class="odocwiki_inlinecode"|path>> and <<span class="odocwiki_inlinecode"|get~_params>>~, however~, can be set at will~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of optional <<span class="odocwiki_inlinecode"|~~https>>~,
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>>~, <<span class="odocwiki_inlinecode"|~~priority>> and <<span class="odocwiki_inlinecode"|~~rt>> parameters ~.
>>


===@@id="3_Attachedcoservices"@@~Attached coservices===

<<pre id="VALcoservice" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|coservice>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| fallback: >><<span class="ocsforge_color_delimiter"| ( >>unit, unit,\\            [ `Attached of\\                <<span class="ocsforge_color_delimiter"| ( >>[ `Internal of [ `Service ] ], [ `Get ]<<span class="ocsforge_color_delimiter"| ) >>\\                <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\            [ `WithoutSuffix ], unit, unit,\\            [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> ],\\            [< <<a_api subproject="server" text="Eliom_service.non_ocaml_service" | type Eliom_service.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\           <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [ `WithoutSuffix ], 'gn<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, unit,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Coservice ] ], [> `Get ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   [ `WithoutSuffix ], 'gn, unit,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|coservice ~~fallback ~~get~_params>> creates an     <<a_manual chapter="services" fragment="attached_coservices"|attached
    coservice>> at the same path than the service <<span class="odocwiki_inlinecode"|fallback>> and
    taking <<span class="odocwiki_inlinecode"|get~_params>> as ~G~E~T parameters~.


    ~G~E~T parameters of <<span class="odocwiki_inlinecode"|coservice>> couldn~'t contain a suffix
    parameter~.


    ~The service <<span class="odocwiki_inlinecode"|fallback>> should be an ~(internal~) attached service
    without any ~G~E~T or ~P~O~S~T parameters ~; it could be a preapplied
    service~.


    ~The optional <<span class="odocwiki_inlinecode"|~~name>> parameter ~Coservices can be named if the <<span class="odocwiki_inlinecode"|~?name>> optional parameter is present
    or anonymous ~(in that case~, a coservice number will be generated~)~.


    ~The optional <<span class="odocwiki_inlinecode"|~~timeout>> parameter specifies a timeout ~(in
    seconds~) after which the coservice will disappear~. ~This amount of
    time is computed from the creation or from the last call to the
    service~. ~The default is "no timeout"~. ~The optional <<span class="odocwiki_inlinecode"|~~max~_use>>
    parameter specifies that the service can be used only a fixed
    number of times~. ~The default is "no limitation"~.


    ~If the optional <<span class="odocwiki_inlinecode"|~~csrf~_safe>> parameter is <<span class="odocwiki_inlinecode"|true>>~, it will create a
    <<a_manual chapter="security" fragment="csrf"|"CSRF-safe"
    service>>~. ~In that case the <<span class="odocwiki_inlinecode"|~~name>> parameter is ignored~. ~The
    default is <<span class="odocwiki_inlinecode"|false>>~.


    ~The <<span class="odocwiki_inlinecode"|~~csrf~_scope>> and <<span class="odocwiki_inlinecode"|~~csrf~_secure>>~, if present~, should
    respectively correspond to the <<span class="odocwiki_inlinecode"|~~scope>> and <<span class="odocwiki_inlinecode"|~~secure>> parameters
    that will be given to the associated <<span class="odocwiki_inlinecode"|register>>
    function~. ~Otherwise the registration will fail with
    ~. ~See
    <<a_api subproject="server" | val Eliom_registration.Html5.register >>~,
    <<span class="odocwiki_inlinecode"|~Eliom~_registration~.~App~.register>> or any other
    <<a_api subproject="server" | module Eliom_registration >><<span class="odocwiki_inlinecode"|~.~*~.register>> functions for a description of those
    parameters~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of the optional <<span class="odocwiki_inlinecode"|~~https>>~, <<span class="odocwiki_inlinecode"|~~rt>> and
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>> parameters ~.
>>
<<pre id="VALpost_coservice" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|post~_coservice>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| fallback: >><<span class="ocsforge_color_delimiter"| ( >>'get, unit,\\            [ `Attached of\\                <<span class="ocsforge_color_delimiter"| ( >>[ `Internal of [< `Coservice | `Service ] ], [ `Get ]<<span class="ocsforge_color_delimiter"| ) >>\\                <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\            [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn, unit, [< `Registrable ],\\            [< <<a_api subproject="server" text="Eliom_service.non_ocaml_service" | type Eliom_service.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\           <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| post_params: >><<span class="ocsforge_color_delimiter"| ( >>'post, [ `WithoutSuffix ], 'pn<<span class="ocsforge_color_delimiter"| ) >>\\              <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, 'post,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Coservice ] ], [> `Post ]<<span class="ocsforge_color_delimiter"| ) >>\\        <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   'a, 'gn, 'pn, [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|post~_coservice ~~fallback ~~post~_params>> creates an     <<a_manual chapter="services" fragment="attached_coservices"|attached
    coservice>> with the same path and ~G~E~T parameters than the
    service <<span class="odocwiki_inlinecode"|fallback>> and taking <<span class="odocwiki_inlinecode"|post~_params>> as ~P~O~S~T
    parameters~.


    ~P~O~S~T parameters couldn~'t contain a suffix parameter~.


    ~The service <<span class="odocwiki_inlinecode"|fallback>> should be an ~(internal~) attached service or
    coservice without any ~P~O~S~T parameters ~; it could be a preapplied
    service~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.coservice >> for a description of optional parameters~.
>>
<<pre id="VALput_coservice" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|put~_coservice>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| fallback: >><<span class="ocsforge_color_delimiter"| ( >>unit, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\            [ `Attached of\\                <<span class="ocsforge_color_delimiter"| ( >>[ `Internal of [ `Service ] ], [ `Put ]<<span class="ocsforge_color_delimiter"| ) >>\\                <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\            [ `WithoutSuffix ], unit, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\            [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> ],\\            [< <<a_api subproject="server" text="Eliom_service.non_ocaml_service" | type Eliom_service.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\           <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [ `WithoutSuffix ], 'gn<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Coservice ] ], [> `Put ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   [ `WithoutSuffix ], 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|put~_coservice ~~fallback ~~get~_params>> creates an     <<a_manual chapter="services" fragment="attached_coservices"|attached
    coservice>> with the same path and ~G~E~T parameters than the
    service <<span class="odocwiki_inlinecode"|fallback>> and taking a single ~P~O~S~T parameter of type
    <<a_api subproject="server" | val Eliom_parameter.raw_post_data >>~.


    ~The service <<span class="odocwiki_inlinecode"|fallback>> should be an ~(internal~) attached ~P~U~T
    service or coservice without any ~G~E~T parameters ~; it could be a
    preapplied service~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.coservice >> for a description of optional parameters~.
>>
<<pre id="VALdelete_coservice" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|delete~_coservice>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| fallback: >><<span class="ocsforge_color_delimiter"| ( >>unit, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\            [ `Attached of\\                <<span class="ocsforge_color_delimiter"| ( >>[ `Internal of [ `Service ] ], [ `Delete ]<<span class="ocsforge_color_delimiter"| ) >>\\                <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\            [ `WithoutSuffix ], unit, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\            [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> ],\\            [< <<a_api subproject="server" text="Eliom_service.non_ocaml_service" | type Eliom_service.non_ocaml_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\           <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [ `WithoutSuffix ], 'gn<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Attached of\\        <<span class="ocsforge_color_delimiter"| ( >>[> `Internal of [> `Coservice ] ], [> `Delete ]<<span class="ocsforge_color_delimiter"| ) >>\\        <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   [ `WithoutSuffix ], 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|delete~_coservice ~~fallback ~~get~_params>> creates an     <<a_manual chapter="services" fragment="attached_coservices"|attached
    coservice>> with the same path and ~G~E~T parameters than the
    service <<span class="odocwiki_inlinecode"|fallback>> and taking a single ~P~O~S~T parameter of type
    <<a_api subproject="server" | val Eliom_parameter.raw_post_data >>~.


    ~The service <<span class="odocwiki_inlinecode"|fallback>> should be an ~(internal~) attached ~D~E~L~E~T~E
    service or coservice without any ~G~E~T parameters ~; it could be a
    preapplied service~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.coservice >> for a description of optional parameters~.
>>


===@@id="3_Nonattachedcoservices"@@~Non attached coservices===

<<pre id="VALcoservice'" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|coservice~'>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [ `WithoutSuffix ], 'gn<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, unit, [> `Nonattached of [> `Get ] <<a_api subproject="server" text="Eliom_service.na_s" | type Eliom_service.na_s >> ],\\   [ `WithoutSuffix ], 'gn, unit,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|coservice~' ~~get~_param>> creates a <<a_manual
    chapter="services" fragment="non-attached_coservices"|non-attached
    coservice>> taking <<span class="odocwiki_inlinecode"|get~_params>> as extra ~G~E~T parameters~.


    ~G~E~T parameters of <<span class="odocwiki_inlinecode"|coservice~'>> couldn~'t contain a suffix
    parameter~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of the optional <<span class="odocwiki_inlinecode"|~~https>>~, <<span class="odocwiki_inlinecode"|~~rt>> and
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>> parameters ~; see <<a_api subproject="server" | val Eliom_service.Http.coservice >> for others
    optional parameters~.
>>
<<pre id="VALpost_coservice'" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|post~_coservice~'>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_get_na_params: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| post_params: >><<span class="ocsforge_color_delimiter"| ( >>'post, [ `WithoutSuffix ], 'pn<<span class="ocsforge_color_delimiter"| ) >>\\              <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>unit, 'post, [> `Nonattached of [> `Post ] <<a_api subproject="server" text="Eliom_service.na_s" | type Eliom_service.na_s >> ],\\   [ `WithoutSuffix ], unit, 'pn,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|post~_coservice~' ~~post~_params>> creates a <<a_manual
    chapter="services" fragment="non-attached_coservices"|non-attached
    coservice>> taking <<span class="odocwiki_inlinecode"|post~_params>> as ~P~O~S~T parameters~.


    ~P~O~S~T parameters couldn~'t contain a suffix parameter~.


    ~If the optional parameter <<span class="odocwiki_inlinecode"|~~keep~_get~_na~_params>> is <<span class="odocwiki_inlinecode"|false>>~, ~G~E~T
    non~-attached parameters of the current page won~'t be kept in the
    ~U~R~L ~(if any~) when you create a ~P~O~S~T form to this coservice~. ~The
    default is true~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of the optional <<span class="odocwiki_inlinecode"|~~https>>~, <<span class="odocwiki_inlinecode"|~~rt>> and
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>> parameters ~; see <<a_api subproject="server" | val Eliom_service.Http.coservice >> for others
    optional parameters~.
>>
<<pre id="VALput_coservice'" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|put~_coservice~'>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [ `WithoutSuffix ], 'gn<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Nonattached of [> `Put ] <<a_api subproject="server" text="Eliom_service.na_s" | type Eliom_service.na_s >> ],\\   [ `WithoutSuffix ], 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|put~_coservice~' ~~get~_params>> creates a <<a_manual
    chapter="services" fragment="non-attached_coservices"|non-attached
    coservice>> taking a single ~P~O~S~T parameter of type
    <<a_api subproject="server" | val Eliom_parameter.raw_post_data >>~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of the optional <<span class="odocwiki_inlinecode"|~~https>>~, <<span class="odocwiki_inlinecode"|~~rt>> and
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>> parameters ~; see <<a_api subproject="server" | val Eliom_service.Http.coservice >> for others
    optional parameters~.
>>
<<pre id="VALdelete_coservice'" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|delete~_coservice~'>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?name: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_safe: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_scope: >>[< <<a_api subproject="server" text="Eliom_common.user_scope" | type Eliom_common.user_scope >> ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?csrf_secure: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?max_use: >>int <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?timeout: >>float <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?https: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [ `WithoutSuffix ], 'gn<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Nonattached of [> `Delete ] <<a_api subproject="server" text="Eliom_service.na_s" | type Eliom_service.na_s >> ],\\   [ `WithoutSuffix ], 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Registrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|delete~_coservice~' ~~get~_params>> creates a <<a_manual
    chapter="services" fragment="non-attached_coservices"|non-attached
    coservice>> taking a single ~P~O~S~T parameter of type
    <<a_api subproject="server" | val Eliom_parameter.raw_post_data >>~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of the optional <<span class="odocwiki_inlinecode"|~~https>>~, <<span class="odocwiki_inlinecode"|~~rt>> and
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>> parameters ~; see <<a_api subproject="server" | val Eliom_service.Http.coservice >> for others
    optional parameters~.
>>
<<pre id="VALexternal_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|external~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| prefix: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, unit,\\   [> `Attached of <<span class="ocsforge_color_delimiter"| ( >>[> `External ], [> `Get ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ], 'a,\\   'gn, unit, [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Unregistrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~The function <<span class="odocwiki_inlinecode"|external~_service ~~prefix ~~path ~~get~_params ~(~)>>
    creates a service for an external web site~, that will use ~G~E~T
    method and requires <<span class="odocwiki_inlinecode"|get~_params>> as parameters~. ~This allows one to
    creates links or forms towards other ~Web sites using ~Eliom~'s
    syntax~.


    ~The parameter labelled <<span class="odocwiki_inlinecode"|~~path>> is the ~U~R~L path~. ~Each element of
    the list will be ~U~R~L~-encoded~.


    ~The parameter labelled <<span class="odocwiki_inlinecode"|~~prefix>> contains all what you want to put
    before the path~. ~It usually starts with "http~:~/~/" plus the name of
    the server~. ~The prefix is not ~U~R~L encoded~.


    ~The whole ~U~R~L is constructed from the prefix~, the path and ~G~E~T
    parameters~. ~Hence~, an empty prefix can be used to make a link to
    another site of the same server~.


    ~See <<a_api subproject="server" | val Eliom_service.Http.service >> for a description of the optional
    <<span class="odocwiki_inlinecode"|~~keep~_nl~_params>> and <<span class="odocwiki_inlinecode"|~~rt>> parameters~.
>>
<<pre id="VALexternal_post_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|external~_post~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| prefix: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| post_params: >><<span class="ocsforge_color_delimiter"| ( >>'post, [ `WithoutSuffix ], 'pn<<span class="ocsforge_color_delimiter"| ) >>\\              <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, 'post,\\   [> `Attached of <<span class="ocsforge_color_delimiter"| ( >>[> `External ], [> `Post ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ], 'a,\\   'gn, 'pn, [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Unregistrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~Same as <<a_api subproject="server" | val Eliom_service.Http.external_service >> but with ~P~O~S~T method~.
>>
<<pre id="VALexternal_put_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|external~_put~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| prefix: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Attached of <<span class="ocsforge_color_delimiter"| ( >>[> `External ], [> `Put ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ], 'a,\\   'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Unregistrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~Same as <<a_api subproject="server" | val Eliom_service.Http.external_service >> but with ~P~U~T method~.
>>
<<pre id="VALexternal_delete_service" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|external~_delete~_service>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| prefix: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| path: >><<span class="ocsforge_color_uid"|Eliom_lib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Url>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|path>> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?rt: >>'rt <<a_api subproject="server" text="Eliom_service.rt" | type Eliom_service.rt >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?keep_nl_params: >>[ `All | `None | `Persistent ] <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| get_params: >><<span class="ocsforge_color_delimiter"| ( >>'get, [< <<a_api subproject="server" text="Eliom_service.suff" | type Eliom_service.suff >> ] as 'a, 'gn<<span class="ocsforge_color_delimiter"| ) >>\\             <<a_api subproject="server" text="Eliom_parameter.params_type" | type Eliom_parameter.params_type >> <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_delimiter"| ( >>'get, <<a_api subproject="server" text="Eliom_parameter.raw_post_data" | type Eliom_parameter.raw_post_data >>,\\   [> `Attached of <<span class="ocsforge_color_delimiter"| ( >>[> `External ], [> `Delete ]<<span class="ocsforge_color_delimiter"| ) >> <<a_api subproject="server" text="Eliom_service.a_s" | type Eliom_service.a_s >> ],\\   'a, 'gn, <<a_api subproject="server" text="Eliom_parameter.no_param_name" | type Eliom_parameter.no_param_name >>,\\   [< <<a_api subproject="server" text="Eliom_service.registrable" | type Eliom_service.registrable >> > `Unregistrable ],\\   [> <<a_api subproject="server" text="Eliom_service.http_service" | type Eliom_service.http_service >> ]<<span class="ocsforge_color_delimiter"| ) >>\\  <<a_api subproject="server" text="Eliom_service.service" | type Eliom_service.service >>>>>><<div class="odocwiki_info"|~Same as <<a_api subproject="server" | val Eliom_service.Http.external_service >> but with ~D~E~L~E~T~E method~.
>>
