=Module <<a_api_type subproject="server" | module Ot_noderesize >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Ot_noderesize>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Ot_noderesize >><<span class="ocsforge_color_keyword"|end>>>>~Get an event when an element~'s size changes~.

----


===@@id="3_Knowissues"@@~Know issues===



    ~This only work with elements in the ~D~O~M ~(maybe that the element
    has to be displayd~, need to check this~)~.
    ~In case of a content loaded dynamically with js~, watch a parent already
    thereif possible or use a <<span class="odocwiki_inlinecode"|onnodeready>> event to attach <<span class="odocwiki_inlinecode"|noderesize>>
    listener~.


    ~If the element to be watched is not positionned~, a <<span class="odocwiki_inlinecode"|position~: relative>>
    will be applied


===@@id="3_Knowissues"@@~Know issues===



    ~This only work with elements in the ~D~O~M ~(maybe that the element
    has to be displayd~, need to check this~)~.
    ~In case of a content loaded dynamically with js~, watch a parent already
    thereif possible or use a <<span class="odocwiki_inlinecode"|onnodeready>> event to attach <<span class="odocwiki_inlinecode"|noderesize>>
    listener~.


    ~If the element to be watched is not positionned~, a <<span class="odocwiki_inlinecode"|position~: relative>>
    will be applied


===@@id="3_Example"@@~Example===

    
<<code language='ocaml'|Lwt.async (fun () ->
        let div' = (To_dom.of_element div) in
        let%lwt () = Nodeready.nodeready container' in
        Noderesize.noderesize (Noderesize.init div) (fun () ->
           Firebug.console##log (Js.string "Resized") ) )>>

