=Module <<a_api_type subproject="server" | module Eliom_atom >> =
<<div class="code"|<<span class="keyword"|module>> Eliom_atom: <<span class='code'|sig>><<a_api subproject="server" text=".." | module Eliom_atom >><<span class='code'|end>>>>~Register an atom feed\\

----
<<div class="code"|<<span class="keyword"|module>> <<a_api subproject="server" text="Reg" | module Eliom_atom.Reg >>: \\{{{   }}}<<span class="code type"|<<a_api subproject="server" text="Eliom_mkreg.ELIOMREGSIG" | module Eliom_mkreg.ELIOMREGSIG >>>><<span class="code type"|{{{  }}}\\{{{   }}}        with type page = Atom_feed.feed>>>><<div class="code" id="TYPEfeed"|<<span class="keyword"|type>> feed = { 
|@@class="typetable"@ @class="lefttop"@@{{{   }}}|@@class="lefttop"@@notify_updates : <<span class="code type"|unit -> unit>>;|

}
>>
<<div class="info"|~Needed when used with ~Pubsubhubbub\\
>>

<<div id="VALregister_feed" class="code"|<<span class="keyword"|val>> register~_feed : <<span class="code type"|\\{{{   }}}path:string list ->\\{{{   }}}  hubs:<<a_api subproject="server" text="Atom_feed.uri" | type Atom_feed.uri >> list ->\\{{{   }}}  string -> (unit -> <<a_api subproject="server" text="Atom_feed.feed" | type Atom_feed.feed >> Lwt.t) -> <<a_api subproject="server" text="feed" | type Eliom_atom.feed >>>>>><<div class="info"|~Add the needed ~<link rel~="hub" ~.~.~.~> for each hub in the feed~, and
 communicate with the hub\\
>>
