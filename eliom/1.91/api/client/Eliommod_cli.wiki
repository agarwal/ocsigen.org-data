=Module <<a_api_type subproject="client" | module Eliommod_cli >> =
<<div class="code"|<<span class="keyword"|module>> Eliommod_cli: <<span class='code'|sig>><<a_api subproject="client" text=".." | module Eliommod_cli >><<span class='code'|end>>>>~/~*\\

----
<<div id="VALregister_closure" class="code"|<<span class="keyword"|val>> register~_closure : <<span class="code type"|int -> ('a -> 'b) -> unit>>>><<div id="VALnodes" class="code"|<<span class="keyword"|val>> nodes : <<span class="code type"|(int, Dom_html.element Js.t) Hashtbl.t>>>><<div id="VALunwrap" class="code"|<<span class="keyword"|val>> unwrap : <<span class="code type"|'a Eliom_types.data_key -> 'a>>>><<div id="VALunwrap_node" class="code"|<<span class="keyword"|val>> unwrap~_node : <<span class="code type"|Dom.node Js.t Eliom_types.data_key -> Dom_html.element Js.t>>>><<div id="VALrebuild_xml" class="code"|<<span class="keyword"|val>> rebuild~_xml : <<span class="code type"|int64 -> Eliom_types.elt -> Dom_html.element Js.t>>>><<div id="VALrelink_dom" class="code"|<<span class="keyword"|val>> relink~_dom : <<span class="code type"|int64 -> Dom_html.element Js.t -> <<a_api subproject="client" text="Eliom_pervasives.XML.M.ref_tree" | type Eliom_pervasives.XML.M.ref_tree >> -> unit>>>><<div id="VALrelink_dom_list" class="code"|<<span class="keyword"|val>> relink~_dom~_list : <<span class="code type"|\\{{{   }}}int64 ->\\{{{   }}}  #Dom.node Dom.nodeList Js.t ->\\{{{   }}}  (int * <<a_api subproject="client" text="Eliom_pervasives.XML.M.ref_tree" | type Eliom_pervasives.XML.M.ref_tree >>) list -> unit>>>><<div id="VALfill_page_data_table" class="code"|<<span class="keyword"|val>> fill~_page~_data~_table : <<span class="code type"|(int64 * int) * Eliom_types.poly list -> unit>>>>