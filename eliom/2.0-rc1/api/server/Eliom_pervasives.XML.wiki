=Module <<a_api_type subproject="server" | module Eliom_pervasives.XML >> =
<<div class="code"|<<span class="keyword"|module>> XML: <<span class='code'|sig>><<a_api subproject="server" text=".." | module Eliom_pervasives.XML >><<span class='code'|end>>>>~X~M~L building and deconstructing~.\\

----
<<div class="code" id="TYPEaname"|<<span class="keyword"|type>> aname = <<span class="code type"|string>> >>

<<div class="code" id="TYPEseparator"|<<span class="keyword"|type>> separator = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Space>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Comma>>|>>

<<div class="code" id="TYPEattrib"|<<span class="keyword"|type>> attrib>>

<<div class="code" id="TYPEacontent"|<<span class="keyword"|type>> acontent = private 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|AFloat>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> * float>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|AInt>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> * int>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|AStr>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> * string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|AStrL>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="server" text="separator" | type Eliom_pervasives.XML.separator >> * <<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> * string list>>|>>

<<div id="VALacontent" class="code"|<<span class="keyword"|val>> acontent : <<span class="code type"|<<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> -> <<a_api subproject="server" text="acontent" | type Eliom_pervasives.XML.acontent >>>>>><<div id="VALaname" class="code"|<<span class="keyword"|val>> aname : <<span class="code type"|<<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> -> <<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >>>>>><<div class="code" id="TYPEcaml_event"|<<span class="keyword"|type>> caml~_event>>

<<div class="code" id="TYPEevent"|<<span class="keyword"|type>> event>>

<<div id="VALevent_of_string" class="code"|<<span class="keyword"|val>> event~_of~_string : <<span class="code type"|string -> <<a_api subproject="server" text="event" | type Eliom_pervasives.XML.event >>>>>><<div id="VALstring_of_event" class="code"|<<span class="keyword"|val>> string~_of~_event : <<span class="code type"|<<a_api subproject="server" text="event" | type Eliom_pervasives.XML.event >> -> string>>>><<div id="VALevent_of_js" class="code"|<<span class="keyword"|val>> event~_of~_js : <<span class="code type"|int64 -> <<a_api subproject="server" text="Eliom_pervasives.poly" | type Eliom_pervasives.poly >> -> <<a_api subproject="server" text="event" | type Eliom_pervasives.XML.event >>>>>><<div id="VALevent_of_service" class="code"|<<span class="keyword"|val>> event~_of~_service : <<span class="code type"|\\{{{   }}}[ `A | `Form_get | `Form_post ] ->\\{{{   }}}  (bool * <<a_api subproject="server" text="Eliom_pervasives.Url.path" | type Eliom_pervasives.Url.path >>) option -> <<a_api subproject="server" text="event" | type Eliom_pervasives.XML.event >>>>>><<div class="code" id="TYPEracontent"|<<span class="keyword"|type>> racontent = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|RA>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="server" text="acontent" | type Eliom_pervasives.XML.acontent >>>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|RACamlEvent>> <<span class="keyword"|of>> <<span class="code type"|(<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> * <<a_api subproject="server" text="caml_event" | type Eliom_pervasives.XML.caml_event >>)>>|>>

<<div id="VALracontent" class="code"|<<span class="keyword"|val>> racontent : <<span class="code type"|<<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> -> <<a_api subproject="server" text="racontent" | type Eliom_pervasives.XML.racontent >>>>>><<div id="VALfloat_attrib" class="code"|<<span class="keyword"|val>> float~_attrib : <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> -> float -> <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >>>>>><<div id="VALint_attrib" class="code"|<<span class="keyword"|val>> int~_attrib : <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> -> int -> <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >>>>>><<div id="VALstring_attrib" class="code"|<<span class="keyword"|val>> string~_attrib : <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> -> string -> <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >>>>>><<div id="VALspace_sep_attrib" class="code"|<<span class="keyword"|val>> space~_sep~_attrib : <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> -> string list -> <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >>>>>><<div id="VALcomma_sep_attrib" class="code"|<<span class="keyword"|val>> comma~_sep~_attrib : <<span class="code type"|<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> -> string list -> <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >>>>>><<div id="VALevent_attrib" class="code"|<<span class="keyword"|val>> event~_attrib : <<span class="code type"|\\{{{   }}}<<a_api subproject="server" text="aname" | type Eliom_pervasives.XML.aname >> ->\\{{{   }}}  <<a_api subproject="server" text="event" | type Eliom_pervasives.XML.event >> -> <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >>>>>><<div class="code" id="TYPEelt"|<<span class="keyword"|type>> elt>>

<<div class="code" id="TYPEename"|<<span class="keyword"|type>> ename = <<span class="code type"|string>> >>

<<div class="code" id="TYPEecontent"|<<span class="keyword"|type>> econtent = private 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Empty>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Comment>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|EncodedPCDATA>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|PCDATA>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Entity>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Leaf>> <<span class="keyword"|of>> <<span class="code type"|<<a_api subproject="server" text="ename" | type Eliom_pervasives.XML.ename >> * <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> list>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|Node>> <<span class="keyword"|of>> <<span class="code type"|\\{{{   }}}<<a_api subproject="server" text="ename" | type Eliom_pervasives.XML.ename >> * <<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> list\\{{{   }}}   * <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> list>>|>>

<<div id="VALcontent" class="code"|<<span class="keyword"|val>> content : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> <<a_api subproject="server" text="econtent" | type Eliom_pervasives.XML.econtent >>>>>><<div id="VALmake" class="code"|<<span class="keyword"|val>> make : <<span class="code type"|<<a_api subproject="server" text="econtent" | type Eliom_pervasives.XML.econtent >> -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALempty" class="code"|<<span class="keyword"|val>> empty : <<span class="code type"|unit -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALcomment" class="code"|<<span class="keyword"|val>> comment : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALpcdata" class="code"|<<span class="keyword"|val>> pcdata : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALencodedpcdata" class="code"|<<span class="keyword"|val>> encodedpcdata : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALentity" class="code"|<<span class="keyword"|val>> entity : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div class="info"|~Neither <<span class='code'|comment>>~, <<span class='code'|pcdata>> nor <<span class='code'|entity>> check their argument
	for invalid characters~.  ~Unsafe characters will be escaped later
	by the output routines~.\\
>>
<<div id="VALleaf" class="code"|<<span class="keyword"|val>> leaf : <<span class="code type"|\\{{{   }}}?a:<<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> list ->\\{{{   }}}  <<a_api subproject="server" text="ename" | type Eliom_pervasives.XML.ename >> -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALnode" class="code"|<<span class="keyword"|val>> node : <<span class="code type"|\\{{{   }}}?a:<<a_api subproject="server" text="attrib" | type Eliom_pervasives.XML.attrib >> list ->\\{{{   }}}  <<a_api subproject="server" text="ename" | type Eliom_pervasives.XML.ename >> ->\\{{{   }}}  <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> list -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div class="info"|~N~B~: <<span class='code'|~Leaf ~("foo"~, ~[~]~) ~-~> "~<foo ~/~>">>~,
	but <<span class='code'|~Node ~("foo"~, ~[~]~, ~[~]~) ~-~> "~<foo~>~<~/foo~>">>\\
>>
<<div id="VALcdata" class="code"|<<span class="keyword"|val>> cdata : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALcdata_script" class="code"|<<span class="keyword"|val>> cdata~_script : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALcdata_style" class="code"|<<span class="keyword"|val>> cdata~_style : <<span class="code type"|string -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALmake_unique" class="code"|<<span class="keyword"|val>> make~_unique : <<span class="code type"|\\{{{   }}}?copy:<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> ->\\{{{   }}}  <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >>>>>><<div id="VALis_unique" class="code"|<<span class="keyword"|val>> is~_unique : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> bool>>>><<div id="VALget_unique_id" class="code"|<<span class="keyword"|val>> get~_unique~_id : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> string option>>>><<div class="code"|<<span class="keyword"|module>> <<a_api subproject="server" text="Hashtbl" | module Eliom_pervasives.XML.Hashtbl >>: <<span class="code type"|Hashtbl.S>><<span class="code type"|{{{  }}} with type key = elt>>>><<div id="VALhash" class="code"|<<span class="keyword"|val>> hash : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> int>>>><<div id="VALcompare" class="code"|<<span class="keyword"|val>> compare : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> <<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> int>>>><<div class="code" id="TYPEref_tree"|<<span class="keyword"|type>> ref~_tree>>

<<div id="VALmake_ref_tree" class="code"|<<span class="keyword"|val>> make~_ref~_tree : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> -> <<a_api subproject="server" text="ref_tree" | type Eliom_pervasives.XML.ref_tree >>>>>><<div id="VALmake_ref_tree_list" class="code"|<<span class="keyword"|val>> make~_ref~_tree~_list : <<span class="code type"|<<a_api subproject="server" text="elt" | type Eliom_pervasives.XML.elt >> list -> <<a_api subproject="server" text="ref_tree" | type Eliom_pervasives.XML.ref_tree >> list>>>>