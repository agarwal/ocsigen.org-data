// Generated by js_of_ocaml 2.8.1
(function(joo_global_object)
   {"use strict";
    function raw_array_sub(a,i,l)
     {var b=new Array(l);for(var j=0;j<l;j++)b[j]=a[i+j];return b}
    function caml_subarray_to_string(a,i,len)
     {var f=String.fromCharCode;
      if(i==0&&len<=4096&&len==a.length)return f.apply(null,a);
      var s="";
      for(;0<len;i+=1024,len-=1024)
       s+=f.apply(null,raw_array_sub(a,i,Math.min(len,1024)));
      return s}
    function caml_convert_string_to_array(s)
     {if(joo_global_object.Uint8Array)
       var a=new (joo_global_object.Uint8Array)(s.l);
      else
       var a=new Array(s.l);
      var b=s.c,l=b.length,i=0;
      for(;i<l;i++)a[i]=b.charCodeAt(i);
      for(l=s.l;i<l;i++)a[i]=0;
      s.c=a;
      s.t=4;
      return a}
    function caml_blit_string(s1,i1,s2,i2,len)
     {if(len==0)return 0;
      if(i2==0&&(len>=s2.l||s2.t==2&&len>=s2.c.length))
       {s2.c=
        s1.t==4
         ?caml_subarray_to_string(s1.c,i1,len)
         :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
        s2.t=s2.c.length==s2.l?0:2}
      else
       if(s2.t==2&&i2==s2.c.length)
        {s2.c+=
         s1.t==4
          ?caml_subarray_to_string(s1.c,i1,len)
          :i1==0&&s1.c.length==len?s1.c:s1.c.substr(i1,len);
         s2.t=s2.c.length==s2.l?0:2}
       else
        {if(s2.t!=4)caml_convert_string_to_array(s2);
         var c1=s1.c,c2=s2.c;
         if(s1.t==4)
          for(var i=0;i<len;i++)c2[i2+i]=c1[i1+i];
         else
          {var l=Math.min(len,c1.length-i1);
           for(var i=0;i<l;i++)c2[i2+i]=c1.charCodeAt(i1+i);
           for(;i<len;i++)c2[i2+i]=0}}
      return 0}
    function raw_array_append_one(a,x)
     {var l=a.length,b=new Array(l+1),i=0;
      for(;i<l;i++)b[i]=a[i];
      b[i]=x;
      return b}
    function caml_call_gen(f,args)
     {if(f.fun)return caml_call_gen(f.fun,args);
      var n=f.length,argsLen=args.length,d=n-argsLen;
      if(d==0)
       return f.apply(null,args);
      else
       if(d<0)
        return caml_call_gen
                (f.apply(null,raw_array_sub(args,0,n)),
                 raw_array_sub(args,n,argsLen-n));
       else
        return function(x)
         {return caml_call_gen(f,raw_array_append_one(args,x))}}
    function caml_raise_with_arg(tag,arg){throw [0,tag,arg]}
    function caml_str_repeat(n,s)
     {if(s.repeat)return s.repeat(n);
      var r="",l=0;
      if(n==0)return r;
      for(;;)
       {if(n&1)r+=s;n>>=1;if(n==0)return r;s+=s;l++;if(l==9)s.slice(0,1)}}
    function caml_convert_string_to_bytes(s)
     {if(s.t==2)
       s.c+=caml_str_repeat(s.l-s.c.length,"\0");
      else
       s.c=caml_subarray_to_string(s.c,0,s.c.length);
      s.t=0}
    function caml_is_ascii(s)
     {if(s.length<24)
       {for(var i=0;i<s.length;i++)if(s.charCodeAt(i)>127)return false;
        return true}
      else
       return !/[^\x00-\x7f]/.test(s)}
    function caml_utf16_of_utf8(s)
     {for(var b="",t="",c,c1,c2,v,i=0,l=s.length;i<l;i++)
       {c1=s.charCodeAt(i);
        if(c1<128)
         {for(var j=i+1;j<l&&(c1=s.charCodeAt(j))<128;j++);
          if(j-i>512)
           {t.substr(0,1);b+=t;t="";b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        v=1;
        if(++i<l&&((c2=s.charCodeAt(i))&-64)==128)
         {c=c2+(c1<<6);
          if(c1<224)
           {v=c-12416;if(v<128)v=1}
          else
           {v=2;
            if(++i<l&&((c2=s.charCodeAt(i))&-64)==128)
             {c=c2+(c<<6);
              if(c1<240)
               {v=c-925824;if(v<2048||v>=55295&&v<57344)v=2}
              else
               {v=3;
                if(++i<l&&((c2=s.charCodeAt(i))&-64)==128&&c1<245)
                 {v=c2-63447168+(c<<6);if(v<65536||v>1114111)v=3}}}}}
        if(v<4)
         {i-=v;t+="\ufffd"}
        else
         if(v>65535)
          t+=String.fromCharCode(55232+(v>>10),56320+(v&1023));
         else
          t+=String.fromCharCode(v);
        if(t.length>1024){t.substr(0,1);b+=t;t=""}}
      return b+t}
    function caml_to_js_string(s)
     {switch(s.t)
       {case 9:return s.c;
        default:caml_convert_string_to_bytes(s);case 0:
         if(caml_is_ascii(s.c)){s.t=9;return s.c}s.t=8;
        case 8:return caml_utf16_of_utf8(s.c)
        }}
    function MlString(tag,contents,length)
     {this.t=tag;this.c=contents;this.l=length}
    MlString.prototype.toString=function(){return caml_to_js_string(this)};
    function caml_new_string(s){return new MlString(0,s,s.length)}
    function caml_raise_with_string(tag,msg)
     {caml_raise_with_arg(tag,caml_new_string(msg))}
    var caml_global_data=[0];
    function caml_invalid_argument(msg)
     {caml_raise_with_string(caml_global_data.Invalid_argument,msg)}
    function caml_array_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_check_bound(array,index)
     {if(index>>>0>=array.length-1)caml_array_bound_error();return array}
    function caml_int64_compare(x,y)
     {var x3=x[3]<<16,y3=y[3]<<16;
      if(x3>y3)return 1;
      if(x3<y3)return -1;
      if(x[2]>y[2])return 1;
      if(x[2]<y[2])return -1;
      if(x[1]>y[1])return 1;
      if(x[1]<y[1])return -1;
      return 0}
    function caml_int_compare(a,b){if(a<b)return -1;if(a==b)return 0;return 1}
    function caml_string_compare(s1,s2)
     {s1.t&6&&caml_convert_string_to_bytes(s1);
      s2.t&6&&caml_convert_string_to_bytes(s2);
      return s1.c<s2.c?-1:s1.c>s2.c?1:0}
    function caml_compare_val(a,b,total)
     {var stack=[];
      for(;;)
       {if(!(total&&a===b))
         if(a instanceof MlString)
          if(b instanceof MlString)
           {if(a!==b){var x=caml_string_compare(a,b);if(x!=0)return x}}
          else
           return 1;
         else
          if(a instanceof Array&&a[0]===(a[0]|0))
           {var ta=a[0];
            if(ta===254)ta=0;
            if(ta===250)
             {a=a[1];continue}
            else
             if(b instanceof Array&&b[0]===(b[0]|0))
              {var tb=b[0];
               if(tb===254)tb=0;
               if(tb===250)
                {b=b[1];continue}
               else
                if(ta!=tb)
                 return ta<tb?-1:1;
                else
                 switch(ta)
                  {case 248:
                    var x=caml_int_compare(a[2],b[2]);if(x!=0)return x;break;
                   case 251:caml_invalid_argument("equal: abstract value");
                   case 255:
                    var x=caml_int64_compare(a,b);if(x!=0)return x;break;
                   default:
                    if(a.length!=b.length)return a.length<b.length?-1:1;
                    if(a.length>1)stack.push(a,b,1)}}
             else
              return 1}
          else
           if(b instanceof MlString||b instanceof Array&&b[0]===(b[0]|0))
            return -1;
           else
            if(typeof a!="number"&&a&&a.compare)
             return a.compare(b,total);
            else
             if(typeof a=="function")
              caml_invalid_argument("equal: functional value");
             else
              {if(a<b)return -1;
               if(a>b)return 1;
               if(a!=b)
                {if(!total)return NaN;if(a==a)return 1;if(b==b)return -1}}
        if(stack.length==0)return 0;
        var i=stack.pop();
        b=stack.pop();
        a=stack.pop();
        if(i+1<a.length)stack.push(a,b,i+1);
        a=a[i];
        b=b[i]}}
    function caml_compare(a,b){return caml_compare_val(a,b,true)}
    function caml_create_string(len)
     {if(len<0)caml_invalid_argument("String.create");
      return new MlString(len?2:9,"",len)}
    function caml_raise_constant(tag){throw tag}
    function caml_raise_zero_divide()
     {caml_raise_constant(caml_global_data.Division_by_zero)}
    function caml_div(x,y){if(y==0)caml_raise_zero_divide();return x/y|0}
    function caml_greaterequal(x,y){return +(caml_compare_val(x,y,false)>=0)}
    function caml_string_unsafe_get(s,i)
     {switch(s.t&6)
       {default:if(i>=s.c.length)return 0;case 0:return s.c.charCodeAt(i);
        case 4:return s.c[i]
        }}
    function caml_ml_string_length(s){return s.l}
    function caml_parse_sign_and_base(s)
     {var
       i=0,
       len=caml_ml_string_length(s),
       base=10,
       sign=len>0&&caml_string_unsafe_get(s,0)==45?(i++,-1):1;
      if(i+1<len&&caml_string_unsafe_get(s,i)==48)
       switch(caml_string_unsafe_get(s,i+1))
        {case 120:
         case 88:base=16;i+=2;break;
         case 111:
         case 79:base=8;i+=2;break;
         case 98:
         case 66:base=2;i+=2;break
         }
      return [i,sign,base]}
    function caml_parse_digit(c)
     {if(c>=48&&c<=57)return c-48;
      if(c>=65&&c<=90)return c-55;
      if(c>=97&&c<=122)return c-87;
      return -1}
    function caml_failwith(msg)
     {caml_raise_with_string(caml_global_data.Failure,msg)}
    function caml_int_of_string(s)
     {var
       r=caml_parse_sign_and_base(s),
       i=r[0],
       sign=r[1],
       base=r[2],
       len=caml_ml_string_length(s),
       threshold=-1>>>0,
       c=i<len?caml_string_unsafe_get(s,i):0,
       d=caml_parse_digit(c);
      if(d<0||d>=base)caml_failwith("int_of_string");
      var res=d;
      for(i++;i<len;i++)
       {c=caml_string_unsafe_get(s,i);
        if(c==95)continue;
        d=caml_parse_digit(c);
        if(d<0||d>=base)break;
        res=base*res+d;
        if(res>threshold)caml_failwith("int_of_string")}
      if(i!=len)caml_failwith("int_of_string");
      res=sign*res;
      if(base==10&&(res|0)!=res)caml_failwith("int_of_string");
      return res|0}
    var caml_js_regexps={amp:/&/g,lt:/</g,quot:/\"/g,all:/[&<\"]/};
    function caml_js_html_escape(s)
     {if(!caml_js_regexps.all.test(s))return s;
      return s.replace(caml_js_regexps.amp,"&amp;").replace
               (caml_js_regexps.lt,"&lt;").replace
              (caml_js_regexps.quot,"&quot;")}
    function caml_utf8_of_utf16(s)
     {for(var b="",t=b,c,d,i=0,l=s.length;i<l;i++)
       {c=s.charCodeAt(i);
        if(c<128)
         {for(var j=i+1;j<l&&(c=s.charCodeAt(j))<128;j++);
          if(j-i>512)
           {t.substr(0,1);b+=t;t="";b+=s.slice(i,j)}
          else
           t+=s.slice(i,j);
          if(j==l)break;
          i=j}
        if(c<2048)
         {t+=String.fromCharCode(192|c>>6);t+=String.fromCharCode(128|c&63)}
        else
         if(c<55296||c>=57343)
          t+=String.fromCharCode(224|c>>12,128|c>>6&63,128|c&63);
         else
          if(c>=56319||i+1==l||(d=s.charCodeAt(i+1))<56320||d>57343)
           t+="\xef\xbf\xbd";
          else
           {i++;
            c=(c<<10)+d-56613888;
            t+=
            String.fromCharCode(240|c>>18,128|c>>12&63,128|c>>6&63,128|c&63)}
        if(t.length>1024){t.substr(0,1);b+=t;t=""}}
      return b+t}
    function caml_js_to_string(s)
     {var tag=9;
      if(!caml_is_ascii(s))tag=8,s=caml_utf8_of_utf16(s);
      return new MlString(tag,s,s.length)}
    function caml_lessequal(x,y){return +(caml_compare_val(x,y,false)<=0)}
    function caml_make_vect(len,init)
     {var len=len+1|0,b=new Array(len);
      b[0]=0;
      for(var i=1;i<len;i++)b[i]=init;
      return b}
    function caml_string_of_array(a){return new MlString(4,a,a.length)}
    var
     caml_md5_string=
      function()
        {function add(x,y){return x+y|0}
         function xx(q,a,b,x,s,t)
          {a=add(add(a,q),add(x,t));return add(a<<s|a>>>32-s,b)}
         function ff(a,b,c,d,x,s,t){return xx(b&c|~b&d,a,b,x,s,t)}
         function gg(a,b,c,d,x,s,t){return xx(b&d|c&~d,a,b,x,s,t)}
         function hh(a,b,c,d,x,s,t){return xx(b^c^d,a,b,x,s,t)}
         function ii(a,b,c,d,x,s,t){return xx(c^(b|~d),a,b,x,s,t)}
         function md5(buffer,length)
          {var i=length;
           buffer[i>>2]|=128<<8*(i&3);
           for(i=(i&~3)+8;(i&63)<60;i+=4)buffer[(i>>2)-1]=0;
           buffer[(i>>2)-1]=length<<3;
           buffer[i>>2]=length>>29&536870911;
           var w=[1732584193,4023233417,2562383102,271733878];
           for(i=0;i<buffer.length;i+=16)
            {var a=w[0],b=w[1],c=w[2],d=w[3];
             a=ff(a,b,c,d,buffer[i+0],7,3614090360);
             d=ff(d,a,b,c,buffer[i+1],12,3905402710);
             c=ff(c,d,a,b,buffer[i+2],17,606105819);
             b=ff(b,c,d,a,buffer[i+3],22,3250441966);
             a=ff(a,b,c,d,buffer[i+4],7,4118548399);
             d=ff(d,a,b,c,buffer[i+5],12,1200080426);
             c=ff(c,d,a,b,buffer[i+6],17,2821735955);
             b=ff(b,c,d,a,buffer[i+7],22,4249261313);
             a=ff(a,b,c,d,buffer[i+8],7,1770035416);
             d=ff(d,a,b,c,buffer[i+9],12,2336552879);
             c=ff(c,d,a,b,buffer[i+10],17,4294925233);
             b=ff(b,c,d,a,buffer[i+11],22,2304563134);
             a=ff(a,b,c,d,buffer[i+12],7,1804603682);
             d=ff(d,a,b,c,buffer[i+13],12,4254626195);
             c=ff(c,d,a,b,buffer[i+14],17,2792965006);
             b=ff(b,c,d,a,buffer[i+15],22,1236535329);
             a=gg(a,b,c,d,buffer[i+1],5,4129170786);
             d=gg(d,a,b,c,buffer[i+6],9,3225465664);
             c=gg(c,d,a,b,buffer[i+11],14,643717713);
             b=gg(b,c,d,a,buffer[i+0],20,3921069994);
             a=gg(a,b,c,d,buffer[i+5],5,3593408605);
             d=gg(d,a,b,c,buffer[i+10],9,38016083);
             c=gg(c,d,a,b,buffer[i+15],14,3634488961);
             b=gg(b,c,d,a,buffer[i+4],20,3889429448);
             a=gg(a,b,c,d,buffer[i+9],5,568446438);
             d=gg(d,a,b,c,buffer[i+14],9,3275163606);
             c=gg(c,d,a,b,buffer[i+3],14,4107603335);
             b=gg(b,c,d,a,buffer[i+8],20,1163531501);
             a=gg(a,b,c,d,buffer[i+13],5,2850285829);
             d=gg(d,a,b,c,buffer[i+2],9,4243563512);
             c=gg(c,d,a,b,buffer[i+7],14,1735328473);
             b=gg(b,c,d,a,buffer[i+12],20,2368359562);
             a=hh(a,b,c,d,buffer[i+5],4,4294588738);
             d=hh(d,a,b,c,buffer[i+8],11,2272392833);
             c=hh(c,d,a,b,buffer[i+11],16,1839030562);
             b=hh(b,c,d,a,buffer[i+14],23,4259657740);
             a=hh(a,b,c,d,buffer[i+1],4,2763975236);
             d=hh(d,a,b,c,buffer[i+4],11,1272893353);
             c=hh(c,d,a,b,buffer[i+7],16,4139469664);
             b=hh(b,c,d,a,buffer[i+10],23,3200236656);
             a=hh(a,b,c,d,buffer[i+13],4,681279174);
             d=hh(d,a,b,c,buffer[i+0],11,3936430074);
             c=hh(c,d,a,b,buffer[i+3],16,3572445317);
             b=hh(b,c,d,a,buffer[i+6],23,76029189);
             a=hh(a,b,c,d,buffer[i+9],4,3654602809);
             d=hh(d,a,b,c,buffer[i+12],11,3873151461);
             c=hh(c,d,a,b,buffer[i+15],16,530742520);
             b=hh(b,c,d,a,buffer[i+2],23,3299628645);
             a=ii(a,b,c,d,buffer[i+0],6,4096336452);
             d=ii(d,a,b,c,buffer[i+7],10,1126891415);
             c=ii(c,d,a,b,buffer[i+14],15,2878612391);
             b=ii(b,c,d,a,buffer[i+5],21,4237533241);
             a=ii(a,b,c,d,buffer[i+12],6,1700485571);
             d=ii(d,a,b,c,buffer[i+3],10,2399980690);
             c=ii(c,d,a,b,buffer[i+10],15,4293915773);
             b=ii(b,c,d,a,buffer[i+1],21,2240044497);
             a=ii(a,b,c,d,buffer[i+8],6,1873313359);
             d=ii(d,a,b,c,buffer[i+15],10,4264355552);
             c=ii(c,d,a,b,buffer[i+6],15,2734768916);
             b=ii(b,c,d,a,buffer[i+13],21,1309151649);
             a=ii(a,b,c,d,buffer[i+4],6,4149444226);
             d=ii(d,a,b,c,buffer[i+11],10,3174756917);
             c=ii(c,d,a,b,buffer[i+2],15,718787259);
             b=ii(b,c,d,a,buffer[i+9],21,3951481745);
             w[0]=add(a,w[0]);
             w[1]=add(b,w[1]);
             w[2]=add(c,w[2]);
             w[3]=add(d,w[3])}
           var t=new Array(16);
           for(var i=0;i<4;i++)for(var j=0;j<4;j++)t[i*4+j]=w[i]>>8*j&255;
           return t}
         return function(s,ofs,len)
          {var buf=[];
           switch(s.t&6)
            {default:caml_convert_string_to_bytes(s);case 0:
              var b=s.c;
              for(var i=0;i<len;i+=4)
               {var j=i+ofs;
                buf[i>>2]=
                b.charCodeAt(j)|
                b.charCodeAt(j+1)<<
                8|
                b.charCodeAt(j+2)<<
                16|
                b.charCodeAt(j+3)<<
                24}
              for(;i<len;i++)buf[i>>2]|=b.charCodeAt(i+ofs)<<8*(i&3);
              break;
             case 4:
              var a=s.c;
              for(var i=0;i<len;i+=4)
               {var j=i+ofs;buf[i>>2]=a[j]|a[j+1]<<8|a[j+2]<<16|a[j+3]<<24}
              for(;i<len;i++)buf[i>>2]|=a[i+ofs]<<8*(i&3)
             }
           return caml_string_of_array(md5(buf,len))}}
       ();
    function caml_raise_sys_error(msg)
     {caml_raise_with_string(caml_global_data.Sys_error,msg)}
    function caml_ml_flush(oc)
     {if(!oc.opened)caml_raise_sys_error("Cannot flush a closed channel");
      if(oc.buffer=="")return 0;
      if(oc.output)
       switch(oc.output.length)
        {case 2:oc.output(oc,oc.buffer);break;default:oc.output(oc.buffer)}
      oc.buffer="";
      return 0}
    var file_inode=0;
    function unix_gettimeofday(){return new Date().getTime()/1e3}
    function unix_time(){return Math.floor(unix_gettimeofday())}
    function MlFile(content)
     {this.data=content;
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlFile.prototype=
    {truncate:function(){this.data=caml_create_string(0);this.modified()},
     modified:function(){var now=unix_time();this.atime=now;this.mtime=now}};
    function caml_raise_no_such_file(name)
     {name=name instanceof MlString?name.toString():name;
      caml_raise_sys_error(name+": No such file or directory")}
    var caml_current_dir="/";
    function caml_make_path(name)
     {name=name instanceof MlString?name.toString():name;
      if(name.charCodeAt(0)!=47)name=caml_current_dir+name;
      var comp=name.split("/"),ncomp=[];
      for(var i=0;i<comp.length;i++)
       switch(comp[i])
        {case "..":if(ncomp.length>1)ncomp.pop();break;
         case ".":break;
         case "":if(ncomp.length==0)ncomp.push("");break;
         default:ncomp.push(comp[i]);break}
      ncomp.orig=name;
      return ncomp}
    function MlDir()
     {this.content={};
      this.inode=file_inode++;
      var now=unix_time();
      this.atime=now;
      this.mtime=now;
      this.ctime=now}
    MlDir.prototype=
    {exists:function(name){return this.content[name]?1:0},
     mk:function(name,c){this.content[name]=c},
     get:function(name){return this.content[name]},
     list:function(){var a=[];for(var n in this.content)a.push(n);return a},
     remove:function(name){delete this.content[name]}};
    var caml_root_dir=new MlDir();
    caml_root_dir.mk("",new MlDir());
    function caml_fs_content(path)
     {var dir=caml_root_dir;
      for(var i=0;i<path.length;i++)
       {if(!(dir.exists&&dir.exists(path[i])))
         caml_raise_no_such_file(path.orig);
        dir=dir.get(path[i])}
      return dir}
    function caml_sys_is_directory(name)
     {var path=caml_make_path(name),dir=caml_fs_content(path);
      return dir instanceof MlDir?1:0}
    function caml_array_of_string(s)
     {if(s.t!=4)caml_convert_string_to_array(s);return s.c}
    function caml_fs_register(name,content)
     {var path=caml_make_path(name),dir=caml_root_dir;
      for(var i=0;i<path.length-1;i++)
       {var d=path[i];
        if(!dir.exists(d))dir.mk(d,new MlDir());
        dir=dir.get(d);
        if(!(dir instanceof MlDir))
         caml_raise_sys_error(path.orig+" : file already exists")}
      var d=path[path.length-1];
      if(dir.exists(d))
       caml_raise_sys_error(path.orig+" : file already exists");
      if(content instanceof MlDir)
       dir.mk(d,content);
      else
       if(content instanceof MlFile)
        dir.mk(d,content);
       else
        if(content instanceof MlString)
         dir.mk(d,new MlFile(content));
        else
         if(content instanceof Array)
          dir.mk(d,new MlFile(caml_string_of_array(content)));
         else
          if(content.toString)
           {var mlstring=caml_new_string(content.toString());
            dir.mk(d,new MlFile(mlstring))}
          else
           caml_invalid_argument("caml_fs_register");
      return 0}
    function caml_sys_file_exists(name)
     {var dir=caml_root_dir,path=caml_make_path(name),auto_load,pos;
      for(var i=0;i<path.length;i++)
       {if(dir.auto){auto_load=dir.auto;pos=i}
        if(!(dir.exists&&dir.exists(path[i])))
         return auto_load?auto_load(path,pos):0;
        dir=dir.get(path[i])}
      return 1}
    function caml_sys_open_internal(idx,file,flags)
     {if(caml_global_data.fds===undefined)caml_global_data.fds=new Array();
      flags=flags?flags:{};
      var info={};
      info.file=file;
      info.offset=flags.append?caml_ml_string_length(file.data):0;
      info.flags=flags;
      caml_global_data.fds[idx]=info;
      caml_global_data.fd_last_idx=idx;
      return idx}
    function caml_sys_open(name,flags,_perms)
     {var f={};
      while(flags)
       {switch(flags[1])
         {case 0:f.rdonly=1;break;
          case 1:f.wronly=1;break;
          case 2:f.append=1;break;
          case 3:f.create=1;break;
          case 4:f.truncate=1;break;
          case 5:f.excl=1;break;
          case 6:f.binary=1;break;
          case 7:f.text=1;break;
          case 8:f.nonblock=1;break
          }
        flags=flags[2]}
      var name2=name.toString(),path=caml_make_path(name);
      if(f.rdonly&&f.wronly)
       caml_raise_sys_error
        (name2+" : flags Open_rdonly and Open_wronly are not compatible");
      if(f.text&&f.binary)
       caml_raise_sys_error
        (name2+" : flags Open_text and Open_binary are not compatible");
      if(caml_sys_file_exists(name))
       {if(caml_sys_is_directory(name))
         caml_raise_sys_error(name2+" : is a directory");
        if(f.create&&f.excl)
         caml_raise_sys_error(name2+" : file already exists");
        var
         idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0,
         file=caml_fs_content(path);
        if(f.truncate)file.truncate();
        return caml_sys_open_internal(idx+1,file,f)}
      else
       if(f.create)
        {var idx=caml_global_data.fd_last_idx?caml_global_data.fd_last_idx:0;
         caml_fs_register(name,caml_create_string(0));
         var file=caml_fs_content(path);
         return caml_sys_open_internal(idx+1,file,f)}
       else
        caml_raise_no_such_file(name)}
    caml_sys_open_internal(0,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(1,new MlFile(caml_create_string(0)));
    caml_sys_open_internal(2,new MlFile(caml_create_string(0)));
    function caml_ml_open_descriptor_in(fd)
     {var data=caml_global_data.fds[fd];
      if(data.flags.wronly)caml_raise_sys_error("fd "+fd+" is writeonly");
      return {file:data.file,offset:data.offset,fd:fd,opened:true,refill:null}}
    function js_print_stderr(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stderr.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.error&&v.error(s)}}
    function js_print_stdout(s)
     {var g=joo_global_object;
      if(g.process&&g.process.stdout&&g.process.stdout.write)
       g.process.stdout.write(s);
      else
       {if(s.charCodeAt(s.length-1)==10)s=s.substr(0,s.length-1);
        var v=g.console;
        v&&v.log&&v.log(s)}}
    var caml_ml_out_channels=new Array();
    function caml_std_output(chan,s)
     {var
       str=caml_new_string(s),
       slen=caml_ml_string_length(str),
       clen=caml_ml_string_length(chan.file.data),
       offset=chan.offset;
      if(offset+slen>=clen)
       {var new_str=caml_create_string(offset+slen);
        caml_blit_string(chan.file.data,0,new_str,0,clen);
        caml_blit_string(str,0,new_str,offset,slen);
        chan.file.data=new_str}
      chan.offset+=slen;
      chan.file.modified();
      return 0}
    function caml_ml_open_descriptor_out(fd)
     {var output;
      switch(fd)
       {case 1:output=js_print_stdout;break;
        case 2:output=js_print_stderr;break;
        default:output=caml_std_output}
      var data=caml_global_data.fds[fd];
      if(data.flags.rdonly)caml_raise_sys_error("fd "+fd+" is readonly");
      var
       channel=
        {file:data.file,
         offset:data.offset,
         fd:fd,
         opened:true,
         buffer:"",
         output:output};
      caml_ml_out_channels[channel.fd]=channel;
      return channel}
    function caml_ml_out_channels_list()
     {var l=0;
      for(var c in caml_ml_out_channels)
       if(caml_ml_out_channels[c].opened)l=[0,caml_ml_out_channels[c],l];
      return l}
    function caml_mod(x,y){if(y==0)caml_raise_zero_divide();return x%y}
    if(!Math.imul)
     Math.imul=function(x,y){y|=0;return ((x>>16)*y<<16)+(x&65535)*y|0};
    var caml_mul=Math.imul;
    function caml_obj_tag(x)
     {return x instanceof Array?x[0]:x instanceof MlString?252:1e3}
    function caml_register_global(n,v,name_opt)
     {caml_global_data[n+1]=v;if(name_opt)caml_global_data[name_opt]=v}
    var caml_named_values={};
    function caml_bytes_of_string(s)
     {if((s.t&6)!=0)caml_convert_string_to_bytes(s);return s.c}
    function caml_register_named_value(nm,v)
     {caml_named_values[caml_bytes_of_string(nm)]=v;return 0}
    var caml_oo_last_id=0;
    function caml_set_oo_id(b){b[2]=caml_oo_last_id++;return b}
    function caml_string_bound_error()
     {caml_invalid_argument("index out of bounds")}
    function caml_string_get(s,i)
     {if(i>>>0>=s.l)caml_string_bound_error();
      return caml_string_unsafe_get(s,i)}
    var caml_initial_time=new Date()*0.001;
    function caml_sys_time(){return new Date()*0.001-caml_initial_time}
    function caml_return_exn_constant(tag){return tag}
    function caml_named_value(nm){return caml_named_values[nm]}
    function caml_wrap_exception(e)
     {if(e instanceof Array)return e;
      if
       (joo_global_object.RangeError&&
        e instanceof joo_global_object.RangeError&&
        e.message&&
        e.message.match(/maximum call stack/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if
       (joo_global_object.InternalError&&
        e instanceof joo_global_object.InternalError&&
        e.message&&
        e.message.match(/too much recursion/i))
       return caml_return_exn_constant(caml_global_data.Stack_overflow);
      if(e instanceof joo_global_object.Error)
       return [0,caml_named_value("jsError"),e];
      return [0,caml_global_data.Failure,caml_js_to_string(String(e))]}
    function caml_call1(f,a0){return f.length==1?f(a0):caml_call_gen(f,[a0])}
    var
     Out_of_memory=[248,caml_new_string("Out_of_memory"),-1],
     Sys_error=[248,caml_new_string("Sys_error"),-2],
     Failure=[248,caml_new_string("Failure"),-3],
     Invalid_argument=[248,caml_new_string("Invalid_argument"),-4],
     End_of_file=[248,caml_new_string("End_of_file"),-5],
     Division_by_zero=[248,caml_new_string("Division_by_zero"),-6],
     Not_found=[248,caml_new_string("Not_found"),-7],
     Match_failure=[248,caml_new_string("Match_failure"),-8],
     Stack_overflow=[248,caml_new_string("Stack_overflow"),-9],
     Sys_blocked_io=[248,caml_new_string("Sys_blocked_io"),-10],
     Assert_failure=[248,caml_new_string("Assert_failure"),-11],
     Undefined_recursive_module=
      [248,caml_new_string("Undefined_recursive_module"),-12],
     s=caml_new_string("Random.int"),
     _r_=[0,10,10,15];
    caml_register_global
     (11,Undefined_recursive_module,"Undefined_recursive_module");
    caml_register_global(10,Assert_failure,"Assert_failure");
    caml_register_global(9,Sys_blocked_io,"Sys_blocked_io");
    caml_register_global(8,Stack_overflow,"Stack_overflow");
    caml_register_global(7,Match_failure,"Match_failure");
    caml_register_global(6,Not_found,"Not_found");
    caml_register_global(5,Division_by_zero,"Division_by_zero");
    caml_register_global(4,End_of_file,"End_of_file");
    caml_register_global(3,Invalid_argument,"Invalid_argument");
    caml_register_global(2,Failure,"Failure");
    caml_register_global(1,Sys_error,"Sys_error");
    caml_register_global(0,Out_of_memory,"Out_of_memory");
    caml_set_oo_id([248,caml_new_string("Pervasives.Exit"),0]);
    var
     _d_=caml_new_string("Array.Bottom"),
     _g_=caml_new_string("Sys.Break"),
     _h_=caml_new_string("CamlinternalFormat.Type_mismatch"),
     _i_=caml_new_string("x"),
     _j_=
      [0,
       987910699,
       495797812,
       364182224,
       414272206,
       318284740,
       990407751,
       383018966,
       270373319,
       840823159,
       24560019,
       536292337,
       512266505,
       189156120,
       730249596,
       143776328,
       51606627,
       140166561,
       366354223,
       1003410265,
       700563762,
       981890670,
       913149062,
       526082594,
       1021425055,
       784300257,
       667753350,
       630144451,
       949649812,
       48546892,
       415514493,
       258888527,
       511570777,
       89983870,
       283659902,
       308386020,
       242688715,
       482270760,
       865188196,
       1027664170,
       207196989,
       193777847,
       619708188,
       671350186,
       149669678,
       257044018,
       87658204,
       558145612,
       183450813,
       28133145,
       901332182,
       710253903,
       510646120,
       652377910,
       409934019,
       801085050],
     _k_=caml_new_string("Js.Error"),
     _p_=caml_new_string("img"),
     _o_=caml_new_string("br"),
     _n_=caml_new_string("div"),
     _m_=caml_new_string("input"),
     _q_=caml_new_string("Dom_html.Canvas_not_available"),
     _w_=caml_new_string("sprites/flag.png"),
     _x_=caml_new_string("sprites/bomb.png"),
     _y_=caml_new_string("sprites/empty.png"),
     _z_=caml_new_string(".png"),
     _A_=caml_new_string("sprites/"),
     _B_=caml_new_string("sprites/normal.png"),
     _u_=[0,0,0],
     _E_=[0,caml_new_string("main.ml"),42,17],
     _F_=caml_new_string("Number of columns"),
     _G_=caml_new_string("Number of rows"),
     _H_=caml_new_string("Number of mines");
    function max(x,y){return caml_greaterequal(x,y)?x:y}
    function _a_(s1,s2)
     {var
       l1=caml_ml_string_length(s1),
       l2=caml_ml_string_length(s2),
       s=caml_create_string(l1+l2|0);
      caml_blit_string(s1,0,s,0,l1);
      caml_blit_string(s2,0,s,l1,l2);
      return s}
    function _b_(l1,l2)
     {if(l1){var tl=l1[2],hd=l1[1];return [0,hd,_b_(tl,l2)]}return l2}
    caml_ml_open_descriptor_in(0);
    caml_ml_open_descriptor_out(1);
    caml_ml_open_descriptor_out(2);
    function _c_(sx,sy,init)
     {var res=caml_make_vect(sx,[0]),_a1_=sx-1|0,_a0_=0;
      if(!(_a1_<0))
       {var x=_a0_;
        for(;;)
         {res[x+1]=caml_make_vect(sy,init);
          var _a2_=x+1|0;
          if(_a1_!==x){var x=_a2_;continue}
          break}}
      return res}
    caml_set_oo_id([248,_d_,0]);
    function _e_(l$0)
     {var l1=l$0,l2=0;
      for(;;)
       {if(l1){var l=l1[2],a=l1[1],l2$0=[0,a,l2],l1=l,l2=l2$0;continue}
        return l2}}
    function _f_(f,param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],a=param$0[1];
          caml_call1(f,a);
          var param$0=l;
          continue}
        return 0}}
    caml_set_oo_id([248,_g_,0]);
    caml_set_oo_id([248,_h_,0]);
    var printers=[0,0];
    function register_printer(fn){printers[1]=[0,fn,printers[1]];return 0}
    var
     s$0=[0,_j_.slice(),0],
     window=joo_global_object,
     no_handler=null,
     undefined$0=undefined,
     false$0=false,
     jsoo_7bc72a9e=window.Array,
     Error=caml_set_oo_id([248,_k_,0]),
     exn=[0,Error,{}],
     slot=caml_obj_tag(exn)===248?exn:exn[1];
    caml_register_named_value(caml_new_string("jsError"),slot);
    (function(exn){throw exn});
    register_printer
     (function(param)
       {if(param[1]===Error)
         {var e=param[2];return [0,caml_js_to_string(e.toString())]}
        return 0});
    register_printer
     (function(jsoo_self)
       {return jsoo_self instanceof jsoo_7bc72a9e
                ?0
                :[0,caml_js_to_string(jsoo_self.toString())]});
    function _l_(jsoo_self,jsoo_ad7fbbdd)
     {jsoo_self.appendChild(jsoo_ad7fbbdd);return 0}
    function handler(f)
     {return function(jsoo_self)
       {if(1-(jsoo_self==no_handler?1:0))
         {var res=caml_call1(f,jsoo_self);
          if(!(res|0))jsoo_self.preventDefault();
          return res}
        var jsoo_obj=event,match=caml_call1(f,jsoo_obj);
        if(!(match|0))jsoo_obj.returnValue=match;
        return match}}
    var document=window.document;
    function opt_iter(x,f){if(x){var v=x[1];return caml_call1(f,v)}return 0}
    function createElement(jsoo_self,name)
     {return jsoo_self.createElement(name.toString())}
    function unsafeCreateElement(doc,name){return createElement(doc,name)}
    var createElementSyntax=[0,785140586];
    function unsafeCreateElementEx(type,name,doc,elt)
     {for(;;)
       {if(0===type)if(0===name)return createElement(doc,elt);
        var _aU_=createElementSyntax[1];
        if(785140586===_aU_)
         {try
           {var
             el=document.createElement('<input name="x">'),
             _aX_=el.tagName.toLowerCase()==="input"?1:0,
             _aY_=_aX_?el.name==="x"?1:0:_aX_,
             _aV_=_aY_}
          catch(_aZ_){var _aV_=0}
          var _aW_=_aV_?982028505:-1003883683;
          createElementSyntax[1]=_aW_;
          continue}
        if(982028505<=_aU_)
         {var a=new jsoo_7bc72a9e();
          a.push("<",elt.toString());
          opt_iter
           (type,
            function(t){a.push(' type="',caml_js_html_escape(t),'"');return 0});
          opt_iter
           (name,
            function(n){a.push(' name="',caml_js_html_escape(n),'"');return 0});
          a.push(">");
          return doc.createElement(a.join(""))}
        var res=createElement(doc,elt);
        opt_iter(type,function(jsoo_arg){return res.type=jsoo_arg});
        opt_iter(name,function(jsoo_arg){return res.name=jsoo_arg});
        return res}}
    function createInput(type,name,doc)
     {return unsafeCreateElementEx(type,name,doc,_m_)}
    function createBr(doc){return unsafeCreateElement(doc,_o_)}
    function createImg(doc){return unsafeCreateElement(doc,_p_)}
    caml_set_oo_id([248,_q_,0]);
    var html_element=window.HTMLElement;
    html_element===undefined$0;
    var jsoo_self=window.document;
    function _s_(cf,f)
     {var _aP_=cf[1]-1|0,_aO_=0;
      if(!(_aP_<0))
       {var i=_aO_;
        for(;;)
         {var _aR_=cf[2]-1|0,_aQ_=0;
          if(!(_aR_<0))
           {var j=_aQ_;
            for(;;)
             {caml_call1(f,[0,i,j]);
              var _aT_=j+1|0;
              if(_aR_!==j){var j=_aT_;continue}
              break}}
          var _aS_=i+1|0;
          if(_aP_!==i){var i=_aS_;continue}
          break}}
      return 0}
    function _t_(cf,param$0)
     {var
       y=param$0[2],
       x$0=param$0[1],
       param$1=
        [0,
         [0,x$0-1|0,y-1|0],
         [0,
          [0,x$0-1|0,y],
          [0,
           [0,x$0-1|0,y+1|0],
           [0,
            [0,x$0,y-1|0],
            [0,
             [0,x$0,y+1|0],
             [0,[0,x$0+1|0,y-1|0],[0,[0,x$0+1|0,y],[0,[0,x$0+1|0,y+1|0],0]]]]]]]],
       accu=0,
       param=param$1;
      for(;;)
       {if(param)
         {var l=param[2],x=param[1],j=x[2],i=x[1],_aK_=0<=i?1:0;
          if(_aK_)
           {var _aL_=i<cf[1]?1:0;
            if(_aL_)
             var _aM_=0<=j?1:0,_aN_=_aM_?j<cf[2]?1:0:_aM_;
            else
             var _aN_=_aL_}
          else
           var _aN_=_aK_;
          if(_aN_){var accu$0=[0,x,accu],accu=accu$0,param=l;continue}
          var param=l;
          continue}
        return _e_(accu)}}
    function _v_(jsoo_obj,bd)
     {var
       _aJ_=
        bd[3]
         ?_w_
         :bd[1]
           ?_x_
           :bd[2]
             ?0===bd[4]?_y_:_a_(_A_,_a_(caml_new_string(""+bd[4]),_z_))
             :_B_;
      return jsoo_obj.src=_aJ_.toString()}
    function _C_(d)
     {var _aD_=d[3][2]-1|0,_aC_=0;
      if(!(_aD_<0))
       {var y=_aC_;
        for(;;)
         {var _aF_=d[3][1]-1|0,_aE_=0;
          if(!(_aF_<0))
           {var x=_aE_;
            for(;;)
             {var _aH_=caml_check_bound(caml_check_bound(d[1],x)[x+1],y)[y+1];
              _v_(caml_check_bound(caml_check_bound(d[2],y)[y+1],x)[x+1],_aH_);
              var _aI_=x+1|0;
              if(_aF_!==x){var x=_aI_;continue}
              break}}
          var _aG_=y+1|0;
          if(_aD_!==y){var y=_aG_;continue}
          break}}
      return 0}
    function _D_(d)
     {var _ax_=d[3][2]-1|0,_aw_=0;
      if(!(_ax_<0))
       {var y=_aw_;
        for(;;)
         {var _az_=d[3][1]-1|0,_ay_=0;
          if(!(_az_<0))
           {var x=_ay_;
            for(;;)
             {var
               jsoo_obj=caml_check_bound(caml_check_bound(d[2],y)[y+1],x)[x+1],
               match=
                handler
                 (function(param){window.alert("GAME OVER");return false$0});
              jsoo_obj.onclick=match;
              var _aB_=x+1|0;
              if(_az_!==x){var x=_aB_;continue}
              break}}
          var _aA_=y+1|0;
          if(_ax_!==y){var y=_aA_;continue}
          break}}
      return 0}
    var doc=window.document;
    function int_input(name,value)
     {var res=doc.createDocumentFragment();
      _l_(res,doc.createTextNode(name.toString()));
      var
       input=createInput([0,"text"],0,doc),
       match=caml_new_string(""+value[1]).toString();
      input.value=match;
      var
       match$0=
        handler
         (function(param)
           {try
             {value[1]=caml_int_of_string(caml_js_to_string(input.value))}
            catch(_av_)
             {_av_=caml_wrap_exception(_av_);
              if(_av_[1]!==Invalid_argument)throw _av_}
            var match=caml_new_string(""+value[1]).toString();
            input.value=match;
            return false$0});
      input.onchange=match$0;
      _l_(res,input);
      return res}
    function onload(param)
     {var main=doc.getElementById("main");
      if(main==no_handler)throw [0,Assert_failure,_E_];
      var nbm=[0,15],nbc=[0,12],nbr=[0,10];
      _l_(main,int_input(_F_,nbr));
      _l_(main,createBr(doc));
      _l_(main,int_input(_G_,nbc));
      _l_(main,createBr(doc));
      _l_(main,int_input(_H_,nbm));
      _l_(main,createBr(doc));
      function callback(param$3)
       {var div=unsafeCreateElement(doc,_n_);
        _l_(main,div);
        var
         _ak_=nbm[1],
         _al_=nbr[1],
         nbc$0=max(_r_[1],nbc[1]),
         nbr$0=max(_r_[2],_al_),
         y=max(1,_ak_),
         x$0=caml_mul(nbc$0,nbr$0),
         nbm$0=caml_lessequal(x$0,y)?x$0:y,
         cf=[0,nbc$0,nbr$0,nbm$0],
         t$0=caml_sys_time(0),
         n$0=t$0*1e3|0,
         seed$1=n$0%1e5|0,
         seed$0=[0,seed$1],
         seed=0===seed$0.length-1?[0,0]:seed$0,
         l$1=seed.length-1,
         i$2=0;
        for(;;)
         {caml_check_bound(s$0[1],i$2)[i$2+1]=i$2;
          var _T_=i$2+1|0;
          if(54!==i$2){var i$2=_T_;continue}
          var accu$1=[0,_i_],_P_=54+max(55,l$1)|0,_O_=0;
          if(!(_P_<0))
           {var i$1=_O_;
            for(;;)
             {var
               j=i$1%55|0,
               k=caml_mod(i$1,l$1),
               x=caml_check_bound(seed,k)[k+1],
               str=_a_(accu$1[1],caml_new_string(""+x));
              accu$1[1]=caml_md5_string(str,0,caml_ml_string_length(str));
              var
               _Q_=accu$1[1],
               _K_=caml_string_get(_Q_,3)<<24,
               _L_=caml_string_get(_Q_,2)<<16,
               _M_=caml_string_get(_Q_,1)<<8,
               _N_=((caml_string_get(_Q_,0)+_M_|0)+_L_|0)+_K_|0,
               _R_=(caml_check_bound(s$0[1],j)[j+1]^_N_)&1073741823;
              caml_check_bound(s$0[1],j)[j+1]=_R_;
              var _S_=i$1+1|0;
              if(_P_!==i$1){var i$1=_S_;continue}
              break}}
          s$0[2]=0;
          var
           _$_=0,
           _aa_=caml_mul(cf[2],cf[1])-cf[3]|0,
           _ab_=0,
           _ac_=caml_make_vect(nbr$0,[0]),
           cell_init=function(param){return [0,0,0,0,0]},
           lc=caml_mul(cf[1],cf[2]),
           cell_list=[0,0],
           _Z_=cf[3];
          a:
          for(;;)
           {var len=0,param$1=cell_list[1];
            for(;;)
             {if(param$1)
               {var l=param$1[2],len$0=len+1|0,len=len$0,param$1=l;continue}
              if(len<_Z_)
               {if(!(1073741823<lc))
                 if(0<lc)
                  for(;;)
                   {s$0[2]=(s$0[2]+1|0)%55|0;
                    var
                     _U_=s$0[2],
                     curval=caml_check_bound(s$0[1],_U_)[_U_+1],
                     _V_=(s$0[2]+24|0)%55|0,
                     newval=
                      caml_check_bound(s$0[1],_V_)[_V_+1]+
                      (curval^(curval>>>25|0)&31)|
                      0,
                     r=newval&1073741823,
                     _W_=s$0[2];
                    caml_check_bound(s$0[1],_W_)[_W_+1]=r;
                    var n=caml_mod(r,lc);
                    if(((1073741823-lc|0)+1|0)<(r-n|0))continue;
                    var param$2=cell_list[1];
                    for(;;)
                     {if(param$2)
                       {var
                         l$0=param$2[2],
                         a$0=param$2[1],
                         _J_=0===caml_compare(a$0,n)?1:0;
                        if(!_J_){var param$2=l$0;continue}
                        var _X_=_J_}
                      else
                       var _X_=0;
                      if(!_X_)cell_list[1]=[0,n,cell_list[1]];
                      continue a}}
                throw [0,Invalid_argument,s]}
              var _Y_=cell_list[1],___=cell_init(0),b=_c_(cf[1],cf[2],___);
              _s_
               (cf,
                function(param)
                 {var j=param[2],i=param[1],_au_=cell_init(0);
                  return caml_check_bound(caml_check_bound(b,i)[i+1],j)[j+1]=
                         _au_});
              _f_
               (function(n)
                 {var _as_=caml_mod(n,cf[2]),_at_=caml_div(n,cf[2]);
                  caml_check_bound(caml_check_bound(b,_at_)[_at_+1],_as_)
                    [_as_+1]
                   [1]=
                  1;
                  return 0},
                _Y_);
              _s_
               (cf,
                function(param)
                 {var j=param[2],i=param[1];
                  if(caml_check_bound(caml_check_bound(b,i)[i+1],j)[j+1][1])
                   return 0;
                  var x=[0,0];
                  function inc_if_mined(param)
                   {var j=param[2],i=param[1];
                    return caml_check_bound(caml_check_bound(b,i)[i+1],j)[j+1]
                             [1]
                            ?(x[1]++,0)
                            :0}
                  _f_(inc_if_mined,_t_(cf,[0,i,j]));
                  var _ar_=x[1];
                  caml_check_bound(caml_check_bound(b,i)[i+1],j)[j+1][4]=_ar_;
                  return 0});
              var
               d=[0,b,_ac_,cf,_ab_,_aa_,_$_],
               mode=[0,0],
               buf=jsoo_self.createDocumentFragment();
              _l_(buf,jsoo_self.createTextNode("Mode : "));
              var img=createImg(jsoo_self);
              _l_(buf,img);
              var match="sprites/bomb.png";
              img.src=match;
              var
               match$0=
                handler
                 (function(param)
                   {if(0===mode[1])
                     {mode[1]=1;var match="sprites/flag.png";img.src=match}
                    else
                     {mode[1]=0;var match$0="sprites/bomb.png";img.src=match$0}
                    return false$0});
              img.onclick=match$0;
              _l_(buf,createBr(jsoo_self));
              var _ae_=d[3][2]-1|0,_ad_=0;
              if(!(_ae_<0))
               {var j$0=_ad_;
                for(;;)
                 {var imgs=[0,0],_ag_=d[3][1]-1|0,_af_=0;
                  if(!(_ag_<0))
                   {var i$3=_af_;
                    for(;;)
                     {var img$0=createImg(jsoo_self);
                      imgs[1]=[0,img$0,imgs[1]];
                      var match$2="sprites/normal.png";
                      img$0.src=match$2;
                      var
                       match$3=
                        handler
                         (function(j,i,img)
                            {return function(param)
                              {if(0===mode[1])
                                {if
                                  (!caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][2])
                                  if(d[6])
                                   {if
                                     (caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][3])
                                     {d[4]=d[4]-1|0;
                                      caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][3]=0}
                                    else
                                     {d[4]=d[4]+1|0;
                                      caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][3]=1}
                                    var
                                     _am_=
                                      caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1];
                                    _v_
                                     (caml_check_bound(caml_check_bound(d[2],j)[j+1],i)[i+1],
                                      _am_)}
                                  else
                                   if
                                    (!caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][3])
                                    if
                                     (caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][1])
                                     {_C_(d);_D_(d);window.alert("YOU LOSE")}
                                    else
                                     {var
                                       reveal_cell=
                                        function(param)
                                         {var j=param[2],i=param[1];
                                          caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][2]=1;
                                          var
                                           _aq_=
                                            caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1];
                                          _v_
                                           (caml_check_bound(caml_check_bound(d[2],j)[j+1],i)[i+1],
                                            _aq_);
                                          d[5]=d[5]-1|0;
                                          return 0},
                                       _an_=d[3],
                                       _ao_=d[1],
                                       visited=_c_(_an_[1],_an_[2],0),
                                       relevant=
                                        function(param)
                                         {var param$0=param;
                                          for(;;)
                                           {if(param$0)
                                             {var
                                               l=param$0[2],
                                               c=param$0[1],
                                               y=c[2],
                                               x=c[1],
                                               cell=caml_check_bound(caml_check_bound(_ao_,x)[x+1],y)[y+1];
                                              if(!cell[1])
                                               if(!cell[3])
                                                if(!cell[2])
                                                 if
                                                  (!caml_check_bound(caml_check_bound(visited,x)[x+1],y)[y+1])
                                                  {var match=relevant(l),l2=match[2],l1=match[1];
                                                   caml_check_bound(caml_check_bound(visited,x)[x+1],y)[y+1]=1;
                                                   return 0===cell[4]?[0,l1,[0,c,l2]]:[0,[0,c,l1],l2]}
                                              var param$0=l;
                                              continue}
                                            return _u_}},
                                       cells_to_see_rec=
                                        function(param)
                                         {if(param)
                                           {var l=param[2],c=param[1],y=c[2],x=c[1];
                                            if
                                             (0===
                                              caml_check_bound(caml_check_bound(_ao_,x)[x+1],y)[y+1][4])
                                             {var match=relevant(_t_(_an_,c)),l2=match[2],l1=match[1];
                                              return _b_([0,c,l1],cells_to_see_rec(_b_(l2,l)))}
                                            return [0,c,cells_to_see_rec(l)]}
                                          return 0};
                                      caml_check_bound(caml_check_bound(visited,i)[i+1],j)[j+1]=1;
                                      _f_(reveal_cell,cells_to_see_rec([0,[0,i,j],0]));
                                      if(0===d[5]){_C_(d);_D_(d);window.alert("YOU WIN")}}}
                               else
                                {var
                                  _ap_=
                                   1-caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][3];
                                 caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1][3]=
                                 _ap_;
                                 _v_
                                  (img,caml_check_bound(caml_check_bound(d[1],i)[i+1],j)[j+1])}
                               return false$0}}
                           (j$0,i$3,img$0));
                      img$0.onclick=match$3;
                      _l_(buf,img$0);
                      var _aj_=i$3+1|0;
                      if(_ag_!==i$3){var i$3=_aj_;continue}
                      break}}
                  _l_(buf,createBr(jsoo_self));
                  var l$2=_e_(imgs[1]);
                  if(l$2)
                   {var tl=l$2[2],hd=l$2[1],accu=0,param=l$2;
                    for(;;)
                     {if(param)
                       {var t=param[2],accu$0=accu+1|0,accu=accu$0,param=t;
                        continue}
                      var a=caml_make_vect(accu,hd),i=1,param$0=tl;
                      for(;;)
                       {if(param$0)
                         {var tl$0=param$0[2],hd$0=param$0[1];
                          a[i+1]=hd$0;
                          var i$0=i+1|0,i=i$0,param$0=tl$0;
                          continue}
                        var _ah_=a;
                        break}
                      break}}
                  else
                   var _ah_=[0];
                  caml_check_bound(d[2],j$0)[j$0+1]=_ah_;
                  var _ai_=j$0+1|0;
                  if(_ae_!==j$0){var j$0=_ai_;continue}
                  break}}
              var match$1="0";
              div.style.lineHeight=match$1;
              _l_(div,buf);
              return false$0}}}}
      var
       res=doc.createDocumentFragment(),
       input=createInput([0,"submit"],0,doc),
       match="nouvelle partie";
      input.value=match;
      var match$0=handler(callback);
      input.onclick=match$0;
      _l_(res,input);
      _l_(main,res);
      return false$0}
    var match=handler(onload);
    window.onload=match;
    function iter(param)
     {var param$0=param;
      for(;;)
       {if(param$0)
         {var l=param$0[2],a=param$0[1];
          try {caml_ml_flush(a)}catch(_I_){}
          var param$0=l;
          continue}
        return 0}}
    iter(caml_ml_out_channels_list(0));
    return}
  (function(){return this}()));

//# sourceMappingURL=minesweeper.map