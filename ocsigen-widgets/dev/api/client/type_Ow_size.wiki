<<code language="ocaml" | sig
  type orientation = Portrait | Landscape
  val get_screen_size : unit -> int * int
  val get_screen_orientation : unit -> Ow_size.orientation
  val get_size :
    < clientHeight : < get : int; .. > Js.gen_prop;
      clientWidth : < get : int; .. > Js.gen_prop; .. >
    Js.t -> int * int
  val get_document_size : unit -> int * int
  val int_of_pxstring : Js.js_string Js.t -> int
  val pxstring_of_int : int -> Js.js_string Js.t
  val get_full_width :
    ?with_width:bool ->
    ?with_padding:bool ->
    ?with_border:bool -> Dom_html.cssStyleDeclaration Js.t -> int
  val get_full_height :
    ?with_height:bool ->
    ?with_padding:bool ->
    ?with_border:bool -> Dom_html.cssStyleDeclaration Js.t -> int
  val width_height : (int * int) React.signal
  val width : int React.signal
  val height : int React.signal
  val set_adaptative_width : Dom_html.element Js.t -> (int -> int) -> unit
  val set_adaptative_height : Dom_html.element Js.t -> (int -> int) -> unit
  val height_to_bottom : int -> Dom_html.element Js.t -> int
  val client_top : Dom_html.element Js.t -> int
  val client_bottom : Dom_html.element Js.t -> int
  val client_left : Dom_html.element Js.t -> int
  val client_right : Dom_html.element Js.t -> int
end >>