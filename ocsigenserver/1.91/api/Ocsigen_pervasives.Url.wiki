=Module <<a_api_type | module Ocsigen_pervasives.Url >> =
<<div class="code"|<<span class="keyword"|module>> Url: <<span class='code'|sig>><<a_api text=".." | module Ocsigen_pervasives.Url >><<span class='code'|end>>>>
----
<<div class="code" id="TYPEt"|<<span class="keyword"|type>> t = <<span class="code type"|string>> >>

<<div class="code" id="TYPEuri"|<<span class="keyword"|type>> uri = <<span class="code type"|string>> >>

<<div id="VALmake_absolute_url" class="code"|<<span class="keyword"|val>> make~_absolute~_url : <<span class="code type"|\\{{{   }}}https:bool ->\\{{{   }}}  host:string ->\\{{{   }}}  port:int -> <<a_api text="uri" | type Ocsigen_pervasives.Url.uri >> -> <<a_api text="t" | type Ocsigen_pervasives.Url.t >>>>>><<div class="code" id="TYPEpath"|<<span class="keyword"|type>> path = <<span class="code type"|string list>> >>

<<div id="VALremove_dotdot" class="code"|<<span class="keyword"|val>> remove~_dotdot : <<span class="code type"|<<a_api text="path" | type Ocsigen_pervasives.Url.path >> -> <<a_api text="path" | type Ocsigen_pervasives.Url.path >>>>>><<div id="VALremove_end_slash" class="code"|<<span class="keyword"|val>> remove~_end~_slash : <<span class="code type"|string -> string>>>><<div id="VALadd_end_slash_if_missing" class="code"|<<span class="keyword"|val>> add~_end~_slash~_if~_missing : <<span class="code type"|<<a_api text="path" | type Ocsigen_pervasives.Url.path >> -> <<a_api text="path" | type Ocsigen_pervasives.Url.path >>>>>><<div id="VALremove_slash_at_end" class="code"|<<span class="keyword"|val>> remove~_slash~_at~_end : <<span class="code type"|<<a_api text="path" | type Ocsigen_pervasives.Url.path >> -> <<a_api text="path" | type Ocsigen_pervasives.Url.path >>>>>><<div id="VALremove_slash_at_beginning" class="code"|<<span class="keyword"|val>> remove~_slash~_at~_beginning : <<span class="code type"|<<a_api text="path" | type Ocsigen_pervasives.Url.path >> -> <<a_api text="path" | type Ocsigen_pervasives.Url.path >>>>>><<div id="VALis_prefix_skip_end_slash" class="code"|<<span class="keyword"|val>> is~_prefix~_skip~_end~_slash : <<span class="code type"|string list -> string list -> bool>>>><<div id="VALstring_of_url_path" class="code"|<<span class="keyword"|val>> string~_of~_url~_path : <<span class="code type"|encode:bool -> <<a_api text="path" | type Ocsigen_pervasives.Url.path >> -> <<a_api text="uri" | type Ocsigen_pervasives.Url.uri >>>>>><<div id="VALfixup_url_string" class="code"|<<span class="keyword"|val>> fixup~_url~_string : <<span class="code type"|<<a_api text="t" | type Ocsigen_pervasives.Url.t >> -> <<a_api text="t" | type Ocsigen_pervasives.Url.t >>>>>><<div id="VALparse" class="code"|<<span class="keyword"|val>> parse : <<span class="code type"|\\{{{   }}}<<a_api text="t" | type Ocsigen_pervasives.Url.t >> ->\\{{{   }}}  bool option * string option * int option * string * string list *\\{{{   }}}  string option * (string * string) list Lazy.t>>>><<div id="VALencode" class="code"|<<span class="keyword"|val>> encode : <<span class="code type"|?plus:bool -> string -> string>>>><<div id="VALdecode" class="code"|<<span class="keyword"|val>> decode : <<span class="code type"|?plus:bool -> string -> string>>>>