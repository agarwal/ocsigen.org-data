<<code language="ocaml" | sig
  module Make :
    functor (XML : XML_sigs.T) ->
      functor
        (SVG : sig
                 module Info : XML_sigs.Info
                 type 'a attrib
                 type +'a elt
                 type +'a elts
                 type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
                 type ('a, 'b, 'c) unary =
                     ?a:'a attrib list -> 'b elt -> 'c elt
                 type ('a, 'b, 'c) star =
                     ?a:'a attrib list -> 'b elt list -> 'c elt
                 type ('a, 'b, 'c) plus =
                     ?a:'a attrib list -> 'b elt -> 'b elt list -> 'c elt
                 type altglyphdef_content =
                     [ `Item of SVG_types.altglyphitem elt list
                     | `Ref of SVG_types.glyphref elt list ]
                 val a_version : string -> [ `Version ] attrib
                 val a_baseprofile : string -> [ `BaseProfile ] attrib
                 val a_x : SVG_types.coord -> [ `X ] attrib
                 val a_y : SVG_types.coord -> [ `Y ] attrib
                 val a_width : SVG_types.Unit.length -> [ `Width ] attrib
                 val a_height : SVG_types.Unit.length -> [ `Height ] attrib
                 val a_preserveaspectratio :
                   string -> [ `PreserveAspectRatio ] attrib
                 val a_contentscripttype :
                   string -> [ `ContentScriptType ] attrib
                 val a_contentstyletype :
                   string -> [ `ContentStyleType ] attrib
                 val a_zoomAndPan :
                   [ `Disable | `Magnify ] -> [ `ZoomAndSpan ] attrib
                 val a_xlink_href : SVG_types.iri -> [ `Xlink_href ] attrib
                 val a_requiredfeatures :
                   SVG_types.spacestrings -> [ `RequiredFeatures ] attrib
                 val a_requiredextensions :
                   SVG_types.spacestrings -> [ `RequiredExtension ] attrib
                 val a_systemlanguage :
                   SVG_types.commastrings -> [ `SystemLanguage ] attrib
                 val a_externalressourcesrequired :
                   bool -> [ `ExternalRessourcesRequired ] attrib
                 val a_id : string -> [ `Id ] attrib
                 val a_xml_base : SVG_types.iri -> [ `Xml_Base ] attrib
                 val a_xml_lang : SVG_types.iri -> [ `Xml_Lang ] attrib
                 val a_xml_space :
                   [ `Default | `Preserve ] -> [ `Xml_Space ] attrib
                 val a_type : string -> [ `Type ] attrib
                 val a_media : SVG_types.commastrings -> [ `Media ] attrib
                 val a_title : string -> [ `Title ] attrib
                 val a_class : SVG_types.spacestrings -> [ `Class ] attrib
                 val a_style : string -> [ `Style ] attrib
                 val a_transform :
                   SVG_types.transform -> [ `Transform ] attrib
                 val a_viewbox : SVG_types.fourfloats -> [ `Viewbox ] attrib
                 val a_d : string -> [ `D ] attrib
                 val a_pathlength : float -> [ `PathLength ] attrib
                 val a_rx : SVG_types.Unit.length -> [ `Rx ] attrib
                 val a_ry : SVG_types.Unit.length -> [ `Ry ] attrib
                 val a_cx : SVG_types.Unit.length -> [ `Cx ] attrib
                 val a_cy : SVG_types.Unit.length -> [ `Cy ] attrib
                 val a_r : SVG_types.Unit.length -> [ `R ] attrib
                 val a_x1 : SVG_types.coord -> [ `X1 ] attrib
                 val a_y1 : SVG_types.coord -> [ `Y1 ] attrib
                 val a_x2 : SVG_types.coord -> [ `X2 ] attrib
                 val a_y2 : SVG_types.coord -> [ `Y2 ] attrib
                 val a_points : SVG_types.coords -> [ `Points ] attrib
                 val a_x_list : SVG_types.lengths -> [ `X__list ] attrib
                 val a_y_list : SVG_types.lengths -> [ `Y__list ] attrib
                 val a_dx : SVG_types.lengths -> [ `Dx ] attrib
                 val a_dy : SVG_types.lengths -> [ `Dy ] attrib
                 val a_dx_single :
                   SVG_types.Unit.length -> [ `Dx__single ] attrib
                 val a_dy_single :
                   SVG_types.Unit.length -> [ `Dy__single ] attrib
                 val a_dx_number : SVG_types.number -> [ `Dx__number ] attrib
                 val a_dy_number : SVG_types.number -> [ `Dy__number ] attrib
                 val a_lengthadjust :
                   [ `Spacing | `SpacingAndGlyphs ] ->
                   [ `LengthAdjust ] attrib
                 val a_textlength :
                   SVG_types.Unit.length -> [ `TextLength ] attrib
                 val a_rotate : SVG_types.numbers -> [ `Rotate ] attrib
                 val a_startoffset :
                   SVG_types.Unit.length -> [ `StartOffset ] attrib
                 val a_method : [ `Align | `Stretch ] -> [ `Method ] attrib
                 val a_spacing : [ `Auto | `Exact ] -> [ `Spacing ] attrib
                 val a_glyphref : string -> [ `GlyphRef ] attrib
                 val a_format : string -> [ `Format ] attrib
                 val a_markerunits :
                   [ `StrokeWidth | `UserSpaceOnUse ] ->
                   [ `MarkerUnits ] attrib
                 val a_refx : SVG_types.coord -> [ `RefX ] attrib
                 val a_refy : SVG_types.coord -> [ `RefY ] attrib
                 val a_markerwidth :
                   SVG_types.Unit.length -> [ `MarkerWidth ] attrib
                 val a_markerheight :
                   SVG_types.Unit.length -> [ `MarkerHeight ] attrib
                 val a_orient :
                   [ `Angle of SVG_types.Unit.angle | `Auto ] ->
                   [ `Orient ] attrib
                 val a_local : string -> [ `Local ] attrib
                 val a_renderingindent :
                   [ `Absolute_colorimetric
                   | `Auto
                   | `Perceptual
                   | `Relative_colorimetric
                   | `Saturation ] -> [ `Rendering_Indent ] attrib
                 val a_gradientunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `GradientUnits ] attrib
                 val a_gradienttransform :
                   SVG_types.transforms -> [ `Gradient_Transform ] attrib
                 val a_spreadmethod :
                   [ `Pad | `Reflect | `Repeat ] -> [ `SpreadMethod ] attrib
                 val a_fx : SVG_types.coord -> [ `Fx ] attrib
                 val a_fy : SVG_types.coord -> [ `Fy ] attrib
                 val a_offset :
                   [ `Number of SVG_types.number
                   | `Percentage of SVG_types.percentage ] ->
                   [ `Offset ] attrib
                 val a_patternunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `PatternUnits ] attrib
                 val a_patterncontentunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `PatternContentUnits ] attrib
                 val a_patterntransform :
                   SVG_types.transforms -> [ `PatternTransform ] attrib
                 val a_clippathunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `ClipPathUnits ] attrib
                 val a_maskunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `MaskUnits ] attrib
                 val a_maskcontentunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `MaskContentUnits ] attrib
                 val a_primitiveunits :
                   [ `ObjectBoundingBox | `UserSpaceOnUse ] ->
                   [ `PrimitiveUnits ] attrib
                 val a_filterres :
                   SVG_types.number_optional_number ->
                   [ `FilterResUnits ] attrib
                 val a_result : string -> [ `Result ] attrib
                 val a_in :
                   [ `BackgroundAlpha
                   | `BackgroundImage
                   | `FillPaint
                   | `Ref of string
                   | `SourceAlpha
                   | `SourceGraphic
                   | `StrokePaint ] -> [ `In ] attrib
                 val a_in2 :
                   [ `BackgroundAlpha
                   | `BackgroundImage
                   | `FillPaint
                   | `Ref of string
                   | `SourceAlpha
                   | `SourceGraphic
                   | `StrokePaint ] -> [ `In2 ] attrib
                 val a_aizmuth : float -> [ `Azimuth ] attrib
                 val a_elevation : float -> [ `Elevation ] attrib
                 val a_pointatx : float -> [ `PointsAtX ] attrib
                 val a_pointaty : float -> [ `PointsAtY ] attrib
                 val a_pointatz : float -> [ `PointsAtZ ] attrib
                 val a_specularexponent :
                   float -> [ `SpecularExponent ] attrib
                 val a_specularconstant :
                   float -> [ `SpecularConstant ] attrib
                 val a_limitingconeangle :
                   float -> [ `LimitingConeAngle ] attrib
                 val a_mode :
                   [ `Darken | `Lighten | `Multiply | `Normal | `Screen ] ->
                   [ `Mode ] attrib
                 val a_typefecolor :
                   [ `HueRotate | `LuminanceToAlpha | `Matrix | `Saturate ] ->
                   [ `Type__fecolor ] attrib
                 val a_values : SVG_types.numbers -> [ `Values ] attrib
                 val a_transferttype :
                   [ `Discrete | `Gamma | `Identity | `Linear | `Table ] ->
                   [ `Type__transfert ] attrib
                 val a_tablevalues :
                   SVG_types.numbers -> [ `TableValues ] attrib
                 val a_intercept : SVG_types.number -> [ `Intercept ] attrib
                 val a_amplitude : SVG_types.number -> [ `Amplitude ] attrib
                 val a_exponent : SVG_types.number -> [ `Exponent ] attrib
                 val a_offsettransfer :
                   SVG_types.number -> [ `Offset__transfer ] attrib
                 val a_operator :
                   [ `Arithmetic | `Atop | `In | `Out | `Over | `Xor ] ->
                   [ `Operator ] attrib
                 val a_k1 : SVG_types.number -> [ `K1 ] attrib
                 val a_k2 : SVG_types.number -> [ `K2 ] attrib
                 val a_k3 : SVG_types.number -> [ `K3 ] attrib
                 val a_k4 : SVG_types.number -> [ `K4 ] attrib
                 val a_order :
                   SVG_types.number_optional_number -> [ `Order ] attrib
                 val a_kernelmatrix :
                   SVG_types.numbers -> [ `KernelMatrix ] attrib
                 val a_divisor : SVG_types.number -> [ `Divisor ] attrib
                 val a_bias : SVG_types.number -> [ `Bias ] attrib
                 val a_kernelunitlength :
                   SVG_types.number_optional_number ->
                   [ `KernelUnitLength ] attrib
                 val a_targetX : int -> [ `TargetX ] attrib
                 val a_targetY : int -> [ `TargetY ] attrib
                 val a_edgemode :
                   [ `Duplicate | `None | `Wrap ] -> [ `TargetY ] attrib
                 val a_preservealpha : bool -> [ `TargetY ] attrib
                 val a_surfacescale :
                   SVG_types.number -> [ `SurfaceScale ] attrib
                 val a_diffuseconstant :
                   SVG_types.number -> [ `DiffuseConstant ] attrib
                 val a_scale : SVG_types.number -> [ `Scale ] attrib
                 val a_xchannelselector :
                   [ `A | `B | `G | `R ] -> [ `XChannelSelector ] attrib
                 val a_ychannelselector :
                   [ `A | `B | `G | `R ] -> [ `YChannelSelector ] attrib
                 val a_stddeviation :
                   SVG_types.number_optional_number ->
                   [ `StdDeviation ] attrib
                 val a_operatormorphology :
                   [ `Dilate | `Erode ] -> [ `OperatorMorphology ] attrib
                 val a_radius :
                   SVG_types.number_optional_number -> [ `Radius ] attrib
                 val a_basefrenquency :
                   SVG_types.number_optional_number ->
                   [ `BaseFrequency ] attrib
                 val a_numoctaves : int -> [ `NumOctaves ] attrib
                 val a_seed : SVG_types.number -> [ `Seed ] attrib
                 val a_stitchtiles :
                   [ `NoStitch | `Stitch ] -> [ `StitchTiles ] attrib
                 val a_stitchtype :
                   [ `FractalNoise | `Turbulence ] -> [ `TypeStitch ] attrib
                 val a_xlinkshow :
                   [ `New | `Replace ] -> [ `Xlink_show ] attrib
                 val a_xlinkactuate :
                   [ `OnRequest ] -> [ `Xlink_actuate ] attrib
                 val a_target : string -> [ `Xlink_target ] attrib
                 val a_viewtarget : string -> [ `ViewTarget ] attrib
                 val a_attributename : string -> [ `AttributeName ] attrib
                 val a_attributetype :
                   [ `Auto | `CSS | `XML ] -> [ `AttributeType ] attrib
                 val a_begin : string -> [ `Begin ] attrib
                 val a_dur : string -> [ `Dur ] attrib
                 val a_min : string -> [ `Min ] attrib
                 val a_max : string -> [ `Max ] attrib
                 val a_restart :
                   [ `Always | `Never | `WhenNotActive ] ->
                   [ `Restart ] attrib
                 val a_repeatcount : string -> [ `RepeatCount ] attrib
                 val a_repeatdur : string -> [ `RepeatDur ] attrib
                 val a_fill : [ `Freeze | `Remove ] -> [ `Fill ] attrib
                 val a_calcmode :
                   [ `Discrete | `Linear | `Paced | `Spline ] ->
                   [ `CalcMode ] attrib
                 val a_values_anim :
                   SVG_types.strings -> [ `Values__anim ] attrib
                 val a_keytimes : SVG_types.strings -> [ `KeyTimes ] attrib
                 val a_keysplines :
                   SVG_types.strings -> [ `KeySplines ] attrib
                 val a_from : string -> [ `From ] attrib
                 val a_to : string -> [ `To ] attrib
                 val a_by : string -> [ `By ] attrib
                 val a_additive : [ `Replace | `Sum ] -> [ `Additive ] attrib
                 val a_accumulate :
                   [ `None | `Sum ] -> [ `Accumulate ] attrib
                 val a_keypoints :
                   SVG_types.numbers_semicolon -> [ `KeyPoints ] attrib
                 val a_path : string -> [ `Path ] attrib
                 val a_typeanimatecolor :
                   [ `Rotate | `Scale | `SkewX | `SkewY | `Translate ] ->
                   [ `Type__animatecolor ] attrib
                 val a_horiz_origin_x :
                   SVG_types.number -> [ `Horiz___origin___x ] attrib
                 val a_horiz_origin_y :
                   SVG_types.number -> [ `Horiz___origin___y ] attrib
                 val a_horiz_adv_x :
                   SVG_types.number -> [ `Horiz___adv___x ] attrib
                 val a_vert_origin_x :
                   SVG_types.number -> [ `Vert___origin___x ] attrib
                 val a_vert_origin_y :
                   SVG_types.number -> [ `Vert___origin___y ] attrib
                 val a_vert_adv_y :
                   SVG_types.number -> [ `Vert___adv___y ] attrib
                 val a_unicode : string -> [ `Unicode ] attrib
                 val a_glyphname : string -> [ `glyphname ] attrib
                 val a_orientation : [ `H | `V ] -> [ `Orientation ] attrib
                 val a_arabicform :
                   [ `Initial | `Isolated | `Medial | `Terminal ] ->
                   [ `Arabic___form ] attrib
                 val a_lang : string -> [ `Lang ] attrib
                 val a_u1 : string -> [ `U1 ] attrib
                 val a_u2 : string -> [ `U2 ] attrib
                 val a_g1 : string -> [ `G1 ] attrib
                 val a_g2 : string -> [ `G2 ] attrib
                 val a_k : string -> [ `K ] attrib
                 val a_fontfamily : string -> [ `Font___Family ] attrib
                 val a_fontstyle : string -> [ `Font___Style ] attrib
                 val a_fontvariant : string -> [ `Font___Variant ] attrib
                 val a_fontweight : string -> [ `Font___Weight ] attrib
                 val a_fontstretch : string -> [ `Font___Stretch ] attrib
                 val a_fontsize : string -> [ `Font___Size ] attrib
                 val a_unicoderange : string -> [ `Unicode___Range ] attrib
                 val a_unitsperem : string -> [ `Units___Per___Em ] attrib
                 val a_stemv : SVG_types.number -> [ `Stemv ] attrib
                 val a_stemh : SVG_types.number -> [ `Stemh ] attrib
                 val a_slope : SVG_types.number -> [ `Slope ] attrib
                 val a_capheight :
                   SVG_types.number -> [ `Cap___Height ] attrib
                 val a_xheight : SVG_types.number -> [ `X___Height ] attrib
                 val a_accentheight :
                   SVG_types.number -> [ `Accent___Height ] attrib
                 val a_ascent : SVG_types.number -> [ `Ascent ] attrib
                 val a_widths : string -> [ `Widths ] attrib
                 val a_bbox : string -> [ `Bbox ] attrib
                 val a_ideographic :
                   SVG_types.number -> [ `Ideographic ] attrib
                 val a_alphabetic :
                   SVG_types.number -> [ `Alphabetic ] attrib
                 val a_mathematical :
                   SVG_types.number -> [ `Mathematical ] attrib
                 val a_hanging : SVG_types.number -> [ `Hanging ] attrib
                 val a_videographic :
                   SVG_types.number -> [ `V___Ideographic ] attrib
                 val a_valphabetic :
                   SVG_types.number -> [ `V___Alphabetic ] attrib
                 val a_vmathematical :
                   SVG_types.number -> [ `V___Mathematical ] attrib
                 val a_vhanging : SVG_types.number -> [ `V___Hanging ] attrib
                 val a_underlineposition :
                   SVG_types.number -> [ `Underline___Position ] attrib
                 val a_underlinethickness :
                   SVG_types.number -> [ `Underline___Thickness ] attrib
                 val a_strikethroughposition :
                   SVG_types.number -> [ `Strikethrough___Position ] attrib
                 val a_strikethroughthickness :
                   SVG_types.number -> [ `Strikethrough___Thickness ] attrib
                 val a_overlineposition :
                   SVG_types.number -> [ `Overline___Position ] attrib
                 val a_overlinethickness :
                   SVG_types.number -> [ `Overline___Thickness ] attrib
                 val a_string : string -> [ `String ] attrib
                 val a_name : string -> [ `Name ] attrib
                 val a_onabort : string -> [ `Onabort ] attrib
                 val a_onactivate : string -> [ `Onactivate ] attrib
                 val a_onbegin : string -> [ `Onbegin ] attrib
                 val a_onclick : string -> [ `Onclick ] attrib
                 val a_onend : string -> [ `Onend ] attrib
                 val a_onerror : string -> [ `Onerror ] attrib
                 val a_onfocusin : string -> [ `Onfocusin ] attrib
                 val a_onfocusout : string -> [ `Onfocusout ] attrib
                 val a_onload : string -> [ `Onload ] attrib
                 val a_onmousedown : string -> [ `Onmousdown ] attrib
                 val a_onmouseup : string -> [ `Onmouseup ] attrib
                 val a_onmouseover : string -> [ `Onmouseover ] attrib
                 val a_onmouseout : string -> [ `Onmouseout ] attrib
                 val a_onmousemove : string -> [ `Onmousemove ] attrib
                 val a_onrepeat : string -> [ `Onrepeat ] attrib
                 val a_onresize : string -> [ `Onresize ] attrib
                 val a_onscroll : string -> [ `Onscroll ] attrib
                 val a_onunload : string -> [ `Onunload ] attrib
                 val a_onzoom : string -> [ `Onzoom ] attrib
                 val metadata :
                   ?a:SVG_types.metadata_attr attrib list ->
                   XML.elt list -> [> SVG_types.metadata ] elt
                 val foreignobject :
                   ?a:SVG_types.foreignobject_attr attrib list ->
                   XML.elt list -> [> SVG_types.foreignobject ] elt
                 val svg :
                   ([< SVG_types.svg_attr ], [< SVG_types.svg_content ],
                    [> SVG_types.svg ])
                   star
                 val g :
                   ([< SVG_types.g_attr ], [< SVG_types.g_content ],
                    [> SVG_types.g ])
                   star
                 val defs :
                   ([< SVG_types.defs_attr ], [< SVG_types.defs_content ],
                    [> SVG_types.defs ])
                   star
                 val desc :
                   ([< SVG_types.desc_attr ], [< SVG_types.desc_content ],
                    [> SVG_types.desc ])
                   unary
                 val title :
                   ([< SVG_types.title_attr ], [< SVG_types.title_content ],
                    [> SVG_types.title ])
                   unary
                 val symbol :
                   ([< SVG_types.symbol_attr ],
                    [< SVG_types.symbol_content ], [> SVG_types.symbol ])
                   star
                 val use :
                   ([< SVG_types.use_attr ], [< SVG_types.use_content ],
                    [> SVG_types.use ])
                   star
                 val image :
                   ([< SVG_types.image_attr ], [< SVG_types.image_content ],
                    [> SVG_types.image ])
                   star
                 val switch :
                   ([< SVG_types.switch_attr ],
                    [< SVG_types.switch_content ], [> SVG_types.switch ])
                   star
                 val style :
                   ([< SVG_types.style_attr ], [< SVG_types.style_content ],
                    [> SVG_types.style ])
                   unary
                 val path :
                   ([< SVG_types.path_attr ], [< SVG_types.path_content ],
                    [> SVG_types.path ])
                   star
                 val rect :
                   ([< SVG_types.rect_attr ], [< SVG_types.rect_content ],
                    [> SVG_types.rect ])
                   star
                 val circle :
                   ([< SVG_types.circle_attr ],
                    [< SVG_types.circle_content ], [> SVG_types.circle ])
                   star
                 val ellipse :
                   ([< SVG_types.ellipse_attr ],
                    [< SVG_types.ellipse_content ], [> SVG_types.ellipse ])
                   star
                 val line :
                   ([< SVG_types.line_attr ], [< SVG_types.line_content ],
                    [> SVG_types.line ])
                   star
                 val polyline :
                   ([< SVG_types.polyline_attr ],
                    [< SVG_types.polyline_content ], [> SVG_types.polyline ])
                   star
                 val polygon :
                   ([< SVG_types.polygon_attr ],
                    [< SVG_types.polygon_content ], [> SVG_types.polygon ])
                   star
                 val text :
                   ([< SVG_types.text_attr ], [< SVG_types.text_content ],
                    [> SVG_types.text ])
                   star
                 val tspan :
                   ([< SVG_types.tspan_attr ], [< SVG_types.tspan_content ],
                    [> SVG_types.tspan ])
                   star
                 val tref :
                   ([< SVG_types.tref_attr ], [< SVG_types.tref_content ],
                    [> SVG_types.tref ])
                   star
                 val textpath :
                   ([< SVG_types.textpath_attr ],
                    [< SVG_types.textpath_content ], [> SVG_types.textpath ])
                   star
                 val altglyph :
                   ([< SVG_types.altglyph_attr ],
                    [< SVG_types.altglyph_content ], [> SVG_types.altglyph ])
                   unary
                 val altglyphdef :
                   ([< SVG_types.altglyphdef_attr ],
                    [< altglyphdef_content ], [> SVG_types.altglyphdef ])
                   unary
                 val altglyphitem :
                   ([< SVG_types.altglyphitem_attr ],
                    [< SVG_types.altglyphitem_content ],
                    [> SVG_types.altglyphitem ])
                   plus
                 val glyphref :
                   ([< SVG_types.glyphref_attr ], [> SVG_types.glyphref ])
                   nullary
                 val marker :
                   ([< SVG_types.marker_attr ],
                    [< SVG_types.marker_content ], [> SVG_types.marker ])
                   star
                 val colorprofile :
                   ([< SVG_types.colorprofile_attr ],
                    [< SVG_types.colorprofile_content ],
                    [> SVG_types.colorprofile ])
                   star
                 val lineargradient :
                   ([< SVG_types.lineargradient_attr ],
                    [< SVG_types.lineargradient_content ],
                    [> SVG_types.lineargradient ])
                   star
                 val radialgradient :
                   ([< SVG_types.radialgradient_attr ],
                    [< SVG_types.radialgradient_content ],
                    [> SVG_types.radialgradient ])
                   star
                 val gradientstop :
                   ([< SVG_types.gradientstop_attr ],
                    [< SVG_types.gradientstop_content ],
                    [> SVG_types.gradientstop ])
                   star
                 val pattern :
                   ([< SVG_types.pattern_attr ],
                    [< SVG_types.pattern_content ], [> SVG_types.pattern ])
                   star
                 val clippath :
                   ([< SVG_types.clippath_attr ],
                    [< SVG_types.clippath_content ], [> SVG_types.clippath ])
                   star
                 val filter :
                   ([< SVG_types.filter_attr ],
                    [< SVG_types.filter_content ], [> SVG_types.filter ])
                   star
                 val fedistantlight :
                   ([< SVG_types.fedistantlight_attr ],
                    [< SVG_types.fedistantlight_content ],
                    [> SVG_types.fedistantlight ])
                   star
                 val fepointlight :
                   ([< SVG_types.fepointlight_attr ],
                    [< SVG_types.fepointlight_content ],
                    [> SVG_types.fepointlight ])
                   star
                 val fespotlight :
                   ([< SVG_types.fespotlight_attr ],
                    [< SVG_types.fespotlight_content ],
                    [> SVG_types.fespotlight ])
                   star
                 val feblend :
                   ([< SVG_types.feblend_attr ],
                    [< SVG_types.feblend_content ], [> SVG_types.feblend ])
                   star
                 val fecolormatrix :
                   ([< SVG_types.fecolormatrix_attr ],
                    [< SVG_types.fecolormatrix_content ],
                    [> SVG_types.fecolormatrix ])
                   star
                 val fecomponenttransfer :
                   ([< SVG_types.fecomponenttransfer_attr ],
                    [< SVG_types.fecomponenttransfer_content ],
                    [> SVG_types.fecomponenttransfer ])
                   star
                 val fefunca :
                   ([< SVG_types.fefunca_attr ],
                    [< SVG_types.fefunca_content ], [> SVG_types.fefunca ])
                   star
                 val fefuncg :
                   ([< SVG_types.fefuncg_attr ],
                    [< SVG_types.fefuncg_content ], [> SVG_types.fefuncg ])
                   star
                 val fefuncb :
                   ([< SVG_types.fefuncb_attr ],
                    [< SVG_types.fefuncb_content ], [> SVG_types.fefuncb ])
                   star
                 val fefuncr :
                   ([< SVG_types.fefuncr_attr ],
                    [< SVG_types.fefuncr_content ], [> SVG_types.fefuncr ])
                   star
                 val fecomposite :
                   ([< SVG_types.fecomposite_attr ],
                    [< SVG_types.fecomposite_content ],
                    [> SVG_types.fecomposite ])
                   star
                 val feconvolvematrix :
                   ([< SVG_types.feconvolvematrix_attr ],
                    [< SVG_types.feconvolvematrix_content ],
                    [> SVG_types.feconvolvematrix ])
                   star
                 val fediffuselighting :
                   ([< SVG_types.fediffuselighting_attr ],
                    [< SVG_types.fediffuselighting_content ],
                    [> SVG_types.fediffuselighting ])
                   star
                 val fedisplacementmap :
                   ([< SVG_types.fedisplacementmap_attr ],
                    [< SVG_types.fedisplacementmap_content ],
                    [> SVG_types.fedisplacementmap ])
                   star
                 val feflood :
                   ([< SVG_types.feflood_attr ],
                    [< SVG_types.feflood_content ], [> SVG_types.feflood ])
                   star
                 val fegaussianblur :
                   ([< SVG_types.fegaussianblur_attr ],
                    [< SVG_types.fegaussianblur_content ],
                    [> SVG_types.fegaussianblur ])
                   star
                 val feimage :
                   ([< SVG_types.feimage_attr ],
                    [< SVG_types.feimage_content ], [> SVG_types.feimage ])
                   star
                 val femerge :
                   ([< SVG_types.femerge_attr ],
                    [< SVG_types.femerge_content ], [> SVG_types.femerge ])
                   star
                 val femorphology :
                   ([< SVG_types.femorphology_attr ],
                    [< SVG_types.femorphology_content ],
                    [> SVG_types.femorphology ])
                   star
                 val feoffset :
                   ([< SVG_types.feoffset_attr ],
                    [< SVG_types.feoffset_content ], [> SVG_types.feoffset ])
                   star
                 val fespecularlighting :
                   ([< SVG_types.fespecularlighting_attr ],
                    [< SVG_types.fespecularlighting_content ],
                    [> SVG_types.fespecularlighting ])
                   star
                 val fetile :
                   ([< SVG_types.fetile_attr ],
                    [< SVG_types.fetile_content ], [> SVG_types.fetile ])
                   star
                 val feturbulence :
                   ([< SVG_types.feturbulence_attr ],
                    [< SVG_types.feturbulence_content ],
                    [> SVG_types.feturbulence ])
                   star
                 val cursor :
                   ([< SVG_types.cursor_attr ],
                    [< SVG_types.cursor_content ], [> SVG_types.cursor ])
                   star
                 val a :
                   ([< SVG_types.a_attr ], [< SVG_types.a_content ],
                    [> SVG_types.a ])
                   star
                 val view :
                   ([< SVG_types.view_attr ], [< SVG_types.view_content ],
                    [> SVG_types.view ])
                   star
                 val script :
                   ([< SVG_types.script_attr ],
                    [< SVG_types.script_content ], [> SVG_types.script ])
                   unary
                 val animation :
                   ([< SVG_types.animation_attr ],
                    [< SVG_types.animation_content ],
                    [> SVG_types.animation ])
                   star
                 val set :
                   ([< SVG_types.set_attr ], [< SVG_types.set_content ],
                    [> SVG_types.set ])
                   star
                 val animatemotion :
                   ([< SVG_types.animatemotion_attr ],
                    [< SVG_types.animatemotion_content ],
                    [> SVG_types.animatemotion ])
                   star
                 val mpath :
                   ([< SVG_types.mpath_attr ], [< SVG_types.mpath_content ],
                    [> SVG_types.mpath ])
                   star
                 val animatecolor :
                   ([< SVG_types.animatecolor_attr ],
                    [< SVG_types.animatecolor_content ],
                    [> SVG_types.animatecolor ])
                   star
                 val animatetransform :
                   ([< SVG_types.animatetransform_attr ],
                    [< SVG_types.animatetransform_content ],
                    [> SVG_types.animatetransform ])
                   star
                 val font :
                   ([< SVG_types.font_attr ], [< SVG_types.font_content ],
                    [> SVG_types.font ])
                   star
                 val glyph :
                   ([< SVG_types.glyph_attr ], [< SVG_types.glyph_content ],
                    [> SVG_types.glyph ])
                   star
                 val missingglyph :
                   ([< SVG_types.missingglyph_attr ],
                    [< SVG_types.missingglyph_content ],
                    [> SVG_types.missingglyph ])
                   star
                 val hkern :
                   ([< SVG_types.hkern_attr ], [> SVG_types.hkern ]) nullary
                 val vkern :
                   ([< SVG_types.vkern_attr ], [> SVG_types.vkern ]) nullary
                 val fontface :
                   ([< SVG_types.fontface_attr ], [> SVG_types.fontface ])
                   nullary
                 val fontfacesrc :
                   ([< SVG_types.fontfacesrc_attr ],
                    [< SVG_types.fontfacesrc_content ],
                    [> SVG_types.fontfacesrc ])
                   star
                 val fontfaceuri :
                   ([< SVG_types.fontfaceuri_attr ],
                    [< SVG_types.fontfaceuri_content ],
                    [> SVG_types.fontfaceuri ])
                   star
                 val fontfaceformat :
                   ([< SVG_types.fontfaceformat_attr ],
                    [> SVG_types.fontfaceformat ])
                   nullary
                 val fontfacename :
                   ([< SVG_types.fontfacename_attr ],
                    [> SVG_types.fontfacename ])
                   nullary
                 val tot : XML.elt -> 'a elt
                 val totl : XML.elt list -> 'a elt list
                 val toelt : 'a elt -> XML.elt
                 val toeltl : 'a elt list -> XML.elt list
                 val to_xmlattribs : 'a attrib list -> XML.attrib list
                 val to_attrib : XML.attrib -> 'a attrib
                 type doc = [ `Svg ] elt
                 val doc_toelt : doc -> XML.elt
               end) ->
        sig
          module Info : XML_sigs.Info
          type uri = Uri.uri
          type uris = Uri.uris
          val string_of_uri : uri -> string
          val uri_of_string : string -> uri
          type +'a attrib
          val to_xmlattribs : 'a attrib list -> XML.attrib list
          val to_attrib : XML.attrib -> 'a attrib
          val a_autocomplete : [< `Off | `On ] -> [> `Autocomplete ] attrib
          val a_async : [< `Async ] -> [> `Async ] attrib
          val a_autofocus : [< `Autofocus ] -> [> `Autofocus ] attrib
          val a_autoplay : [< `Autoplay ] -> [> `Autoplay ] attrib
          val a_challenge : HTML5_types.text -> [> `Challenge ] attrib
          val a_contenteditable :
            [< `False | `True ] -> [> `Contexteditable ] attrib
          val a_contextmenu : HTML5_types.idref -> [> `Contextmenu ] attrib
          val a_controls : [< `Controls ] -> [> `Controls ] attrib
          val a_dir : [< `Ltr | `Rtl ] -> [> `Dir ] attrib
          val a_draggable : [< `False | `True ] -> [> `Draggable ] attrib
          val a_form : HTML5_types.idref -> [> `Form ] attrib
          val a_formaction : uri -> [> `Formaction ] attrib
          val a_formenctype :
            HTML5_types.contenttype -> [> `Formenctype ] attrib
          val a_formmethod :
            [< `Delete | `Get | `Post | `Put ] -> [> `Formmethod ] attrib
          val a_formnovalidate :
            [< `Formnovalidate ] -> [> `Formnovalidate ] attrib
          val a_formtarget : HTML5_types.text -> [> `Formtarget ] attrib
          val a_hidden : [< `Hidden ] -> [> `Hidden ] attrib
          val a_high : HTML5_types.float_number -> [> `High ] attrib
          val a_icon : uri -> [> `Icon ] attrib
          val a_ismap : [< `Ismap ] -> [> `Ismap ] attrib
          val a_keytype : HTML5_types.text -> [> `Keytype ] attrib
          val a_list : HTML5_types.idref -> [> `List ] attrib
          val a_loop : [< `Loop ] -> [> `Loop ] attrib
          val a_low : HTML5_types.float_number -> [> `High ] attrib
          val a_max : HTML5_types.float_number -> [> `Max ] attrib
          val a_input_max : HTML5_types.number -> [> `Max ] attrib
          val a_min : HTML5_types.float_number -> [> `Min ] attrib
          val a_input_min : HTML5_types.number -> [> `Min ] attrib
          val a_novalidate : [< `Novalidate ] -> [> `Novalidate ] attrib
          val a_open : [< `Open ] -> [> `Open ] attrib
          val a_optimum : HTML5_types.float_number -> [> `Optimum ] attrib
          val a_pattern : HTML5_types.text -> [> `Pattern ] attrib
          val a_placeholder : HTML5_types.text -> [> `Placeholder ] attrib
          val a_poster : uri -> [> `Poster ] attrib
          val a_preload :
            [< `Audio | `Metadata | `None ] -> [> `Preload ] attrib
          val a_pubdate : [< `Pubdate ] -> [> `Pubdate ] attrib
          val a_radiogroup : HTML5_types.text -> [> `Radiogroup ] attrib
          val a_required : [< `Required ] -> [> `Required ] attrib
          val a_reversed : [< `Reversed ] -> [> `Reversed ] attrib
          val a_sandbox :
            [< `AllowForms | `AllowSameOrigin | `AllowScript ] list ->
            [> `Sandbox ] attrib
          val a_spellcheck : [< `False | `True ] -> [> `Spellcheck ] attrib
          val a_scoped : [< `Scoped ] -> [> `Scoped ] attrib
          val a_seamless : [< `Seamless ] -> [> `Seamless ] attrib
          val a_sizes : HTML5_types.numbers -> [> `Sizes ] attrib
          val a_span : HTML5_types.number -> [> `Span ] attrib
          val a_srclang : HTML5_types.nmtoken -> [> `XML_lang ] attrib
          val a_start : HTML5_types.number -> [> `Start ] attrib
          val a_step : HTML5_types.float_number -> [> `Step ] attrib
          val a_wrap : [< `Hard | `Soft ] -> [> `Wrap ] attrib
          val a_class : HTML5_types.nmtokens -> [> `Class ] attrib
          val a_user_data :
            HTML5_types.nmtoken -> HTML5_types.text -> [> `User_data ] attrib
          val a_id : HTML5_types.text -> [> `Id ] attrib
          val a_title : HTML5_types.text -> [> `Title ] attrib
          val a_xml_lang : HTML5_types.nmtoken -> [> `XML_lang ] attrib
          val a_onabort : XML.event -> [> `OnAbort ] attrib
          val a_onafterprint : XML.event -> [> `OnAfterPrint ] attrib
          val a_onbeforeprint : XML.event -> [> `OnBeforePrint ] attrib
          val a_onbeforeunload : XML.event -> [> `OnBeforeUnload ] attrib
          val a_onblur : XML.event -> [> `OnBlur ] attrib
          val a_oncanplay : XML.event -> [> `OnCanPlay ] attrib
          val a_oncanplaythrough : XML.event -> [> `OnCanPlayThrough ] attrib
          val a_onchange : XML.event -> [> `OnChange ] attrib
          val a_onclick : XML.event -> [> `OnClick ] attrib
          val a_oncontextmenu : XML.event -> [> `OnContextMenu ] attrib
          val a_ondblclick : XML.event -> [> `OnDblClick ] attrib
          val a_ondrag : XML.event -> [> `OnDrag ] attrib
          val a_ondragend : XML.event -> [> `OnDragEnd ] attrib
          val a_ondragenter : XML.event -> [> `OnDragEnter ] attrib
          val a_ondragleave : XML.event -> [> `OnDragLeave ] attrib
          val a_ondragover : XML.event -> [> `OnDragOver ] attrib
          val a_ondragstart : XML.event -> [> `OnDragStart ] attrib
          val a_ondrop : XML.event -> [> `OnDrop ] attrib
          val a_ondurationchange : XML.event -> [> `OnDurationChange ] attrib
          val a_onemptied : XML.event -> [> `OnEmptied ] attrib
          val a_onended : XML.event -> [> `OnEnded ] attrib
          val a_onerror : XML.event -> [> `OnError ] attrib
          val a_onfocus : XML.event -> [> `OnFocus ] attrib
          val a_onformchange : XML.event -> [> `OnFormChange ] attrib
          val a_onforminput : XML.event -> [> `OnFormInput ] attrib
          val a_onhashchange : XML.event -> [> `OnHashChange ] attrib
          val a_oninput : XML.event -> [> `OnInput ] attrib
          val a_oninvalid : XML.event -> [> `OnInvalid ] attrib
          val a_onmousedown : XML.event -> [> `OnMouseDown ] attrib
          val a_onmouseup : XML.event -> [> `OnMouseUp ] attrib
          val a_onmouseover : XML.event -> [> `OnMouseOver ] attrib
          val a_onmousemove : XML.event -> [> `OnMouseMove ] attrib
          val a_onmouseout : XML.event -> [> `OnMouseOut ] attrib
          val a_onmousewheel : XML.event -> [> `OnMouseWheel ] attrib
          val a_onoffline : XML.event -> [> `OnOffLine ] attrib
          val a_ononline : XML.event -> [> `OnOnLine ] attrib
          val a_onpause : XML.event -> [> `OnPause ] attrib
          val a_onplay : XML.event -> [> `OnPlay ] attrib
          val a_onplaying : XML.event -> [> `OnPlaying ] attrib
          val a_onpagehide : XML.event -> [> `OnPageHide ] attrib
          val a_onpageshow : XML.event -> [> `OnPageShow ] attrib
          val a_onpopstate : XML.event -> [> `OnPopState ] attrib
          val a_onprogress : XML.event -> [> `OnProgress ] attrib
          val a_onratechange : XML.event -> [> `OnRateChange ] attrib
          val a_onreadystatechange :
            XML.event -> [> `OnReadyStateChange ] attrib
          val a_onredo : XML.event -> [> `OnRedo ] attrib
          val a_onresize : XML.event -> [> `OnResize ] attrib
          val a_onscroll : XML.event -> [> `OnScroll ] attrib
          val a_onseeked : XML.event -> [> `OnSeeked ] attrib
          val a_onseeking : XML.event -> [> `OnSeeking ] attrib
          val a_onselect : XML.event -> [> `OnSelect ] attrib
          val a_onshow : XML.event -> [> `OnShow ] attrib
          val a_onstalled : XML.event -> [> `OnStalled ] attrib
          val a_onstorage : XML.event -> [> `OnStorage ] attrib
          val a_onsubmit : XML.event -> [> `OnSubmit ] attrib
          val a_onsuspend : XML.event -> [> `OnSuspend ] attrib
          val a_ontimeupdate : XML.event -> [> `OnTimeUpdate ] attrib
          val a_onundo : XML.event -> [> `OnUndo ] attrib
          val a_onunload : XML.event -> [> `OnUnload ] attrib
          val a_onvolumechange : XML.event -> [> `OnVolumeChange ] attrib
          val a_onwaiting : XML.event -> [> `OnWaiting ] attrib
          val a_onkeypress : XML.event -> [> `OnKeyPress ] attrib
          val a_onkeydown : XML.event -> [> `OnKeyDown ] attrib
          val a_onkeyup : XML.event -> [> `OnKeyUp ] attrib
          val a_onload : XML.event -> [> `OnLoad ] attrib
          val a_onloadeddata : XML.event -> [> `OnLoadedData ] attrib
          val a_onloadedmetadata : XML.event -> [> `OnLoadedMetaData ] attrib
          val a_onloadstart : XML.event -> [> `OnLoadStart ] attrib
          val a_onmessage : XML.event -> [> `OnMessage ] attrib
          val a_version : HTML5_types.cdata -> [> `Version ] attrib
          val a_xmlns : [< `W3_org_1999_xhtml ] -> [> `XMLns ] attrib
          val a_manifest : uri -> [> `Manifest ] attrib
          val a_cite : uri -> [> `Cite ] attrib
          val a_xml_space : [< `Preserve ] -> [> `XML_space ] attrib
          val a_accesskey : HTML5_types.character -> [> `Accesskey ] attrib
          val a_charset : HTML5_types.charset -> [> `Charset ] attrib
          val a_accept_charset :
            HTML5_types.charsets -> [> `Accept_charset ] attrib
          val a_accept : HTML5_types.contenttypes -> [> `Accept ] attrib
          val a_href : uri -> [> `Href ] attrib
          val a_hreflang : HTML5_types.languagecode -> [> `Hreflang ] attrib
          val a_rel : HTML5_types.linktypes -> [> `Rel ] attrib
          val a_tabindex : HTML5_types.number -> [> `Tabindex ] attrib
          val a_mime_type : HTML5_types.contenttype -> [> `Mime_type ] attrib
          val a_datetime : HTML5_types.cdata -> [> `Datetime ] attrib
          val a_action : uri -> [> `Action ] attrib
          val a_checked : [< `Checked ] -> [> `Checked ] attrib
          val a_cols : HTML5_types.number -> [> `Cols ] attrib
          val a_enctype : HTML5_types.contenttype -> [> `Enctype ] attrib
          val a_for : HTML5_types.idref -> [> `For ] attrib
          val a_for_list : HTML5_types.idrefs -> [> `For_List ] attrib
          val a_maxlength : HTML5_types.number -> [> `Maxlength ] attrib
          val a_method :
            [< `Delete | `Get | `Post | `Put ] -> [> `Method ] attrib
          val a_multiple : [< `Multiple ] -> [> `Multiple ] attrib
          val a_name : HTML5_types.text -> [> `Name ] attrib
          val a_rows : HTML5_types.number -> [> `Rows ] attrib
          val a_selected : [< `Selected ] -> [> `Selected ] attrib
          val a_size : HTML5_types.number -> [> `Size ] attrib
          val a_src : uri -> [> `Src ] attrib
          val a_input_type :
            [< `Button
             | `Checkbox
             | `Color
             | `Date
             | `Datetime
             | `Datetime_local
             | `Email
             | `File
             | `Hidden
             | `Image
             | `Month
             | `Number
             | `Password
             | `Radio
             | `Range
             | `Reset
             | `Search
             | `Submit
             | `Tel
             | `Text
             | `Time
             | `Url
             | `Week ] ->
            [> `Input_Type ] attrib
          val a_text_value : HTML5_types.text -> [> `Text_Value ] attrib
          val a_int_value : HTML5_types.number -> [> `Int_Value ] attrib
          val a_value : HTML5_types.cdata -> [> `Value ] attrib
          val a_float_value :
            HTML5_types.float_number -> [> `Float_Value ] attrib
          val a_disabled : [< `Disabled ] -> [> `Disabled ] attrib
          val a_readonly : [< `Readonly ] -> [> `Readonly ] attrib
          val a_button_type :
            [< `Button | `Reset | `Submit ] -> [> `Button_Type ] attrib
          val a_command_type :
            [< `Checkbox | `Command | `Radio ] -> [> `Command_Type ] attrib
          val a_menu_type :
            [< `Context | `Toolbar ] -> [> `Menu_Type ] attrib
          val a_label : HTML5_types.text -> [> `Label ] attrib
          val a_align :
            [< `Char | `Justify | `Left | `Right ] -> [> `Align ] attrib
          val a_axis : HTML5_types.cdata -> [> `Axis ] attrib
          val a_colspan : HTML5_types.number -> [> `Colspan ] attrib
          val a_headers : HTML5_types.idrefs -> [> `Headers ] attrib
          val a_rowspan : HTML5_types.number -> [> `Rowspan ] attrib
          val a_scope :
            [< `Col | `Colgroup | `Row | `Rowgroup ] -> [> `Scope ] attrib
          val a_summary : HTML5_types.text -> [> `Summary ] attrib
          val a_border : HTML5_types.pixels -> [> `Border ] attrib
          val a_cellpadding : HTML5_types.length -> [> `Cellpadding ] attrib
          val a_cellspacing : HTML5_types.length -> [> `Cellspacing ] attrib
          val a_datapagesize : HTML5_types.cdata -> [> `Datapagesize ] attrib
          val a_rules :
            [< `All | `Cols | `Groups | `None | `Rows ] -> [> `Rules ] attrib
          val a_char : HTML5_types.character -> [> `Char ] attrib
          val a_charoff : HTML5_types.length -> [> `Charoff ] attrib
          val a_alt : HTML5_types.text -> [> `Alt ] attrib
          val a_height : HTML5_types.number -> [> `Height ] attrib
          val a_width : HTML5_types.number -> [> `Width ] attrib
          type shape = [ `Circle | `Default | `Poly | `Rect ]
          val a_shape : shape -> [> `Shape ] attrib
          val a_coords : HTML5_types.numbers -> [> `Coords ] attrib
          val a_usemap : HTML5_types.idref -> [> `Usemap ] attrib
          val a_data : uri -> [> `Data ] attrib
          val a_codetype : HTML5_types.contenttype -> [> `Codetype ] attrib
          val a_fs_rows : HTML5_types.multilengths -> [> `FS_Rows ] attrib
          val a_fs_cols : HTML5_types.multilengths -> [> `FS_Cols ] attrib
          val a_frameborder : [< `One | `Zero ] -> [> `Frameborder ] attrib
          val a_marginheight :
            HTML5_types.pixels -> [> `Marginheight ] attrib
          val a_marginwidth : HTML5_types.pixels -> [> `Marginwidth ] attrib
          val a_scrolling : [< `Auto | `No | `Yes ] -> [> `Scrolling ] attrib
          val a_target : HTML5_types.frametarget -> [> `Target ] attrib
          val a_content : HTML5_types.text -> [> `Content ] attrib
          val a_http_equiv : HTML5_types.text -> [> `Http_equiv ] attrib
          val a_defer : [< `Defer ] -> [> `Defer ] attrib
          val a_media : HTML5_types.mediadesc -> [> `Media ] attrib
          val a_style : string -> [> `Style_Attr ] attrib
          type +'a elt
          type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
          type ('a, 'b, 'c) unary = ?a:'a attrib list -> 'b elt -> 'c elt
          type ('a, 'b, 'c, 'd) binary =
              ?a:'a attrib list -> 'b elt -> 'c elt -> 'd elt
          type ('a, 'b, 'c, 'd) tri = 'a elt -> 'b elt -> 'c elt -> 'd elt
          type ('a, 'b, 'c) star = ?a:'a attrib list -> 'b elt list -> 'c elt
          type ('a, 'b, 'c) plus =
              ?a:'a attrib list -> 'b elt -> 'b elt list -> 'c elt
          type html = [ `Html ] elt
          type rt =
              [ `Rpt of [ `Rp ] elt * [ `Rt ] elt * [ `Rp ] elt
              | `Rt of [ `Rt ] elt ]
          type ruby_content = HTML5_types.phrasing elt list * rt
          type rp =
              HTML5_types.common attrib list * HTML5_types.phrasing elt list
          val html :
            ?a:HTML5_types.html_attrib attrib list ->
            [< `Head ] elt -> [< `Body ] elt -> [> `Html ] elt
          val head :
            ?a:HTML5_types.head_attrib attrib list ->
            [< `Title ] elt ->
            HTML5_types.head_content_fun elt list ->
            [> HTML5_types.head ] elt
          val base :
            ([< HTML5_types.base_attrib ], [> HTML5_types.base ]) nullary
          val title :
            (HTML5_types.title_attrib, [< HTML5_types.title_content_fun ],
             [> HTML5_types.title ])
            unary
          val body :
            ([< HTML5_types.body_attrib ], [< HTML5_types.body_content_fun ],
             [> HTML5_types.body ])
            star
          val svg :
            ?xmlns:string ->
            ?a:[< HTML5_types.svg_attrib ] SVG.attrib list ->
            [< HTML5_types.svg_content ] SVG.elt list ->
            [> HTML5_types.svg ] elt
          val footer :
            ([< HTML5_types.common ],
             [< HTML5_types.flow5_without_header_footer ], [> `Footer ])
            star
          val header :
            ([< HTML5_types.common ],
             [< HTML5_types.flow5_without_header_footer ], [> `Header ])
            star
          val section :
            ([< HTML5_types.section_attrib ],
             [< HTML5_types.section_content_fun ], [> HTML5_types.section ])
            star
          val nav :
            ([< HTML5_types.nav_attrib ], [< HTML5_types.nav_content_fun ],
             [> HTML5_types.nav ])
            star
          val h1 :
            ([< HTML5_types.h1_attrib ], [< HTML5_types.h1_content_fun ],
             [> HTML5_types.h1 ])
            star
          val h2 :
            ([< HTML5_types.h2_attrib ], [< HTML5_types.h2_content_fun ],
             [> HTML5_types.h2 ])
            star
          val h3 :
            ([< HTML5_types.h3_attrib ], [< HTML5_types.h3_content_fun ],
             [> HTML5_types.h3 ])
            star
          val h4 :
            ([< HTML5_types.h4_attrib ], [< HTML5_types.h4_content_fun ],
             [> HTML5_types.h4 ])
            star
          val h5 :
            ([< HTML5_types.h5_attrib ], [< HTML5_types.h5_content_fun ],
             [> HTML5_types.h5 ])
            star
          val h6 :
            ([< HTML5_types.h6_attrib ], [< HTML5_types.h6_content_fun ],
             [> HTML5_types.h6 ])
            star
          val hgroup :
            ([< HTML5_types.hgroup_attrib ],
             [< HTML5_types.hgroup_content_fun ], [> HTML5_types.hgroup ])
            plus
          val address :
            ([< HTML5_types.address_attrib ],
             [< HTML5_types.address_content_fun ], [> HTML5_types.address ])
            star
          val article :
            ([< HTML5_types.article_attrib ],
             [< HTML5_types.article_content_fun ], [> HTML5_types.article ])
            star
          val aside :
            ([< HTML5_types.aside_attrib ],
             [< HTML5_types.aside_content_fun ], [> HTML5_types.aside ])
            star
          val p :
            ([< HTML5_types.p_attrib ], [< HTML5_types.p_content_fun ],
             [> HTML5_types.p ])
            star
          val pre :
            ([< HTML5_types.pre_attrib ], [< HTML5_types.pre_content_fun ],
             [> HTML5_types.pre ])
            star
          val blockquote :
            ([< HTML5_types.blockquote_attrib ],
             [< HTML5_types.blockquote_content_fun ],
             [> HTML5_types.blockquote ])
            star
          val div :
            ([< HTML5_types.div_attrib ], [< HTML5_types.div_content_fun ],
             [> HTML5_types.div ])
            star
          val dl :
            ?a:[< HTML5_types.common ] attrib list ->
            (([< `Dt ] elt * [< `Dt ] elt list) *
             ([< `Dd ] elt * [< `Dd ] elt list))
            list -> [> `Dl ] elt
          val ol :
            ([< HTML5_types.ol_attrib ], [< HTML5_types.ol_content_fun ],
             [> HTML5_types.ol ])
            star
          val ul :
            ([< HTML5_types.ul_attrib ], [< HTML5_types.ul_content_fun ],
             [> HTML5_types.ul ])
            star
          val dd :
            ([< HTML5_types.dd_attrib ], [< HTML5_types.dd_content_fun ],
             [> HTML5_types.dd ])
            star
          val dt :
            ([< HTML5_types.dt_attrib ], [< HTML5_types.dt_content_fun ],
             [> HTML5_types.dt ])
            star
          val li :
            ([< HTML5_types.li_attrib ], [< HTML5_types.li_content_fun ],
             [> HTML5_types.li ])
            star
          val figcaption :
            ([< HTML5_types.figcaption_attrib ],
             [< HTML5_types.figcaption_content_fun ],
             [> HTML5_types.figcaption ])
            star
          val figure :
            ?figcaption:[< `Figcaption ] elt ->
            ([< HTML5_types.common ], [< HTML5_types.flow5 ], [> `Figure ])
            star
          val hr : ([< HTML5_types.hr_attrib ], [> HTML5_types.hr ]) nullary
          val rt :
            ?rp:rp * rp ->
            ?a:[< HTML5_types.common ] attrib list ->
            [< HTML5_types.phrasing ] elt list -> rt
          val rp :
            ?a:[< HTML5_types.common ] attrib list ->
            [< HTML5_types.phrasing ] elt list -> rp
          val ruby :
            ?a:[< HTML5_types.common ] attrib list ->
            ruby_content -> ruby_content list -> [> `Ruby ] elt
          val b :
            ([< HTML5_types.b_attrib ], [< HTML5_types.b_content_fun ],
             [> HTML5_types.b ])
            star
          val i :
            ([< HTML5_types.i_attrib ], [< HTML5_types.i_content_fun ],
             [> HTML5_types.i ])
            star
          val small :
            ([< HTML5_types.small_attrib ],
             [< HTML5_types.small_content_fun ], [> HTML5_types.small ])
            star
          val sub :
            ([< HTML5_types.sub_attrib ], [< HTML5_types.sub_content_fun ],
             [> HTML5_types.sub ])
            star
          val sup :
            ([< HTML5_types.sup_attrib ], [< HTML5_types.sup_content_fun ],
             [> HTML5_types.sup ])
            star
          val mark :
            ([< HTML5_types.mark_attrib ], [< HTML5_types.mark_content_fun ],
             [> HTML5_types.mark ])
            star
          val wbr :
            ([< HTML5_types.wbr_attrib ], [> HTML5_types.wbr ]) nullary
          val bdo :
            dir:[< `Ltr | `Rtl ] ->
            ([< HTML5_types.common ], [< HTML5_types.phrasing ], [> `Bdo ])
            star
          val abbr :
            ([< HTML5_types.abbr_attrib ], [< HTML5_types.abbr_content_fun ],
             [> HTML5_types.abbr ])
            star
          val br : ([< HTML5_types.br_attrib ], [> HTML5_types.br ]) nullary
          val cite :
            ([< HTML5_types.cite_attrib ], [< HTML5_types.cite_content_fun ],
             [> HTML5_types.cite ])
            star
          val code :
            ([< HTML5_types.code_attrib ], [< HTML5_types.code_content_fun ],
             [> HTML5_types.code ])
            star
          val dfn :
            ([< HTML5_types.dfn_attrib ], [< HTML5_types.dfn_content_fun ],
             [> HTML5_types.dfn ])
            star
          val em :
            ([< HTML5_types.em_attrib ], [< HTML5_types.em_content_fun ],
             [> HTML5_types.em ])
            star
          val kbd :
            ([< HTML5_types.kbd_attrib ], [< HTML5_types.kbd_content_fun ],
             [> HTML5_types.kbd ])
            star
          val q :
            ([< HTML5_types.q_attrib ], [< HTML5_types.q_content_fun ],
             [> HTML5_types.q ])
            star
          val samp :
            ([< HTML5_types.samp_attrib ], [< HTML5_types.samp_content_fun ],
             [> HTML5_types.samp ])
            star
          val span :
            ([< HTML5_types.span_attrib ], [< HTML5_types.span_content_fun ],
             [> HTML5_types.span ])
            star
          val strong :
            ([< HTML5_types.strong_attrib ],
             [< HTML5_types.strong_content_fun ], [> HTML5_types.strong ])
            star
          val time :
            ([< HTML5_types.time_attrib ], [< HTML5_types.time_content_fun ],
             [> HTML5_types.time ])
            star
          val var :
            ([< HTML5_types.var_attrib ], [< HTML5_types.var_content_fun ],
             [> HTML5_types.var ])
            star
          val a : ([< HTML5_types.a_attrib ], 'a, [> `A of 'a ]) star
          val del : ([< HTML5_types.del_attrib ], 'a, [> `Del of 'a ]) star
          val ins : ([< HTML5_types.ins_attrib ], 'a, [> `Ins of 'a ]) star
          val img :
            src:uri ->
            alt:HTML5_types.text ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Ismap
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [> `Img ])
            nullary
          val iframe :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Sandbox
              | `Seamless
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [< `PCDATA ], [> `Iframe ])
            star
          val object_ :
            ?params:[< `Param ] elt list ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Data
              | `Dir
              | `Draggable
              | `Form
              | `Height
              | `Hidden
              | `Id
              | `Mime_type
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `Usemap
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             'a, [> `Object of 'a ])
            star
          val param :
            ([< HTML5_types.param_attrib ], [> HTML5_types.param ]) nullary
          val embed :
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Src
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             [> `Embed ])
            nullary
          val audio :
            ?srcs:uri * [< `Source ] elt list ->
            ([< `Accesskey
              | `Autoplay
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Controls
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Loop
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Preload
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             'a, [> `Audio of 'a ])
            star
          val video :
            ?srcs:uri * [< `Source ] elt list ->
            ([< `Accesskey
              | `Autoplay
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Controls
              | `Dir
              | `Draggable
              | `Height
              | `Hidden
              | `Id
              | `Loop
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Poster
              | `Preload
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `Width
              | `XML_lang
              | `XMLns ],
             'a, [> `Video of 'a ])
            star
          val canvas :
            ([< HTML5_types.canvas_attrib ], 'a, [> `Canvas of 'a ]) star
          val source :
            ([< HTML5_types.source_attrib ], [> HTML5_types.source ]) nullary
          val area :
            alt:HTML5_types.text ->
            ([< `Accesskey
              | `Alt
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Coords
              | `Dir
              | `Draggable
              | `Hidden
              | `Hreflang
              | `Id
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Shape
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Target
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Area ])
            nullary
          val map : ([< HTML5_types.map_attrib ], 'a, [> `A of 'a ]) plus
          val caption :
            ([< HTML5_types.caption_attrib ],
             [< HTML5_types.caption_content_fun ], [> HTML5_types.caption ])
            star
          val table :
            ?caption:[< `Caption ] elt ->
            ?columns:[< `Colgroup ] elt list ->
            ?thead:[< `Thead ] elt ->
            ?tfoot:[< `Tfoot ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Summary
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< `Tr ], [> `Table ])
            plus
          val tablex :
            ?caption:[< `Caption ] elt ->
            ?columns:[< `Colgroup ] elt list ->
            ?thead:[< `Thead ] elt ->
            ?tfoot:[< `Tfoot ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Summary
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< `Tbody ], [> `Table ])
            star
          val colgroup :
            ([< HTML5_types.colgroup_attrib ],
             [< HTML5_types.colgroup_content_fun ],
             [> HTML5_types.colgroup ])
            star
          val col :
            ([< HTML5_types.col_attrib ], [> HTML5_types.col ]) nullary
          val thead :
            ([< HTML5_types.thead_attrib ],
             [< HTML5_types.thead_content_fun ], [> HTML5_types.thead ])
            star
          val tbody :
            ([< HTML5_types.tbody_attrib ],
             [< HTML5_types.tbody_content_fun ], [> HTML5_types.tbody ])
            star
          val tfoot :
            ([< HTML5_types.tfoot_attrib ],
             [< HTML5_types.tfoot_content_fun ], [> HTML5_types.tfoot ])
            star
          val td :
            ([< HTML5_types.td_attrib ], [< HTML5_types.td_content_fun ],
             [> HTML5_types.td ])
            star
          val th :
            ([< HTML5_types.th_attrib ], [< HTML5_types.th_content_fun ],
             [> HTML5_types.th ])
            star
          val tr :
            ([< HTML5_types.tr_attrib ], [< HTML5_types.tr_content_fun ],
             [> HTML5_types.tr ])
            star
          val form :
            ([< HTML5_types.form_attrib ], [< HTML5_types.form_content_fun ],
             [> HTML5_types.form ])
            plus
          val fieldset :
            ?legend:[ `Legend ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Form
              | `Hidden
              | `Id
              | `Name
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< HTML5_types.flow5 ], [> `Fieldset ])
            star
          val legend :
            ([< HTML5_types.legend_attrib ],
             [< HTML5_types.legend_content_fun ], [> HTML5_types.legend ])
            star
          val label :
            ([< HTML5_types.label_attrib ],
             [< HTML5_types.label_content_fun ], [> HTML5_types.label ])
            star
          val input :
            ([< HTML5_types.input_attrib ], [> HTML5_types.input ]) nullary
          val button :
            ([< HTML5_types.button_attrib ],
             [< HTML5_types.button_content_fun ], [> HTML5_types.button ])
            star
          val select :
            ([< HTML5_types.select_attrib ],
             [< HTML5_types.select_content_fun ], [> HTML5_types.select ])
            star
          val datalist :
            ?children:[< `Options of [< `Option ] elt list
                       | `Phras of [< HTML5_types.phrasing ] elt list ] ->
            ([< HTML5_types.common ], [> `Datalist ]) nullary
          val optgroup :
            label:HTML5_types.text ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< `Option ], [> `Optgroup ])
            star
          val option :
            ([< HTML5_types.option_attrib ],
             [< HTML5_types.option_content_fun ],
             [> HTML5_types.selectoption ])
            unary
          val textarea :
            ([< HTML5_types.textarea_attrib ],
             [< HTML5_types.textarea_content_fun ],
             [> HTML5_types.textarea ])
            unary
          val keygen :
            ([< HTML5_types.keygen_attrib ], [> HTML5_types.keygen ]) nullary
          val progress :
            ([< HTML5_types.progress_attrib ],
             [< HTML5_types.progress_content_fun ],
             [> HTML5_types.progress ])
            star
          val meter :
            ([< HTML5_types.meter_attrib ],
             [< HTML5_types.meter_content_fun ], [> HTML5_types.meter ])
            star
          val output_elt :
            ([< HTML5_types.output_elt_attrib ],
             [< HTML5_types.output_elt_content_fun ],
             [> HTML5_types.output_elt ])
            star
          val pcdata : string -> [> `PCDATA ] elt
          val entity : string -> [> `PCDATA ] elt
          val space : unit -> [> `PCDATA ] elt
          val cdata : string -> [> `PCDATA ] elt
          val cdata_script : string -> [> `PCDATA ] elt
          val cdata_style : string -> [> `PCDATA ] elt
          val unsafe_data : string -> 'a elt
          val details :
            [< `Summary ] elt ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Open
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [< HTML5_types.flow5 ] elt, [> `Details ])
            star
          val summary :
            ([< HTML5_types.summary_attrib ],
             [< HTML5_types.summary_content_fun ], [> HTML5_types.summary ])
            star
          val command :
            label:HTML5_types.text ->
            ([< `Accesskey
              | `Checked
              | `Class
              | `Command_Type
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Disabled
              | `Draggable
              | `Hidden
              | `Icon
              | `Id
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Radiogroup
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Command ])
            nullary
          val menu :
            ?child:[< `Flows of [< HTML5_types.flow5 ] elt list
                    | `Lis of [< `Li of [< HTML5_types.common ] ] elt list ] ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Id
              | `Label
              | `Menu_Type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Menu ])
            nullary
          val script :
            ([< HTML5_types.script_attrib ],
             [< HTML5_types.script_content_fun ], [> HTML5_types.script ])
            unary
          val noscript :
            ([< HTML5_types.noscript_attrib ],
             [< HTML5_types.noscript_content_fun ],
             [> HTML5_types.noscript ])
            plus
          val meta :
            ([< HTML5_types.meta_attrib ], [> HTML5_types.meta ]) nullary
          val style :
            ([< HTML5_types.style_attrib ],
             [< HTML5_types.style_content_fun ], [> HTML5_types.style ])
            star
          val link :
            rel:HTML5_types.linktypes ->
            href:uri ->
            ([< `Accesskey
              | `Class
              | `Contenteditable
              | `Contextmenu
              | `Dir
              | `Draggable
              | `Hidden
              | `Href
              | `Hreflang
              | `Id
              | `Media
              | `Mime_type
              | `OnAbort
              | `OnBlur
              | `OnCanPlay
              | `OnCanPlayThrough
              | `OnChange
              | `OnClick
              | `OnContextMenu
              | `OnDblClick
              | `OnDrag
              | `OnDragEnd
              | `OnDragEnter
              | `OnDragLeave
              | `OnDragOver
              | `OnDragStart
              | `OnDrop
              | `OnDurationChange
              | `OnEmptied
              | `OnEnded
              | `OnError
              | `OnFocus
              | `OnFormChange
              | `OnFormInput
              | `OnInput
              | `OnInvalid
              | `OnKeyDown
              | `OnKeyPress
              | `OnKeyUp
              | `OnLoad
              | `OnLoadStart
              | `OnLoadedData
              | `OnLoadedMetaData
              | `OnMouseDown
              | `OnMouseMove
              | `OnMouseOut
              | `OnMouseOver
              | `OnMouseUp
              | `OnMouseWheel
              | `OnPause
              | `OnPlay
              | `OnPlaying
              | `OnProgress
              | `OnRateChange
              | `OnReadyStateChange
              | `OnScroll
              | `OnSeeked
              | `OnSeeking
              | `OnSelect
              | `OnShow
              | `OnStalled
              | `OnSubmit
              | `OnSuspend
              | `OnTimeUpdate
              | `OnVolumeChange
              | `OnWaiting
              | `Rel
              | `Sizes
              | `Spellcheck
              | `Style_Attr
              | `Tabindex
              | `Title
              | `User_data
              | `XML_lang
              | `XMLns ],
             [> `Link ])
            nullary
          val tot : XML.elt -> 'a elt
          val totl : XML.elt list -> 'a elt list
          val toelt : 'a elt -> XML.elt
          val toeltl : 'a elt list -> XML.elt list
          type doc = [ `Html ] elt
          val doc_toelt : doc -> XML.elt
        end
end >>