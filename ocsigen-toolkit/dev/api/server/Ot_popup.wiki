=Module <<a_api_type subproject="server" | module Ot_popup >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Ot_popup>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="server" text=".." | module Ot_popup >><<span class="ocsforge_color_keyword"|end>>>>~Popup widget

----
<<pre id="VALhcf" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|hcf>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?a: >>[< <<span class="ocsforge_color_uid"|Html_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|div_attrib>> ] <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|attrib>> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?header: >>[< <<span class="ocsforge_color_uid"|Html_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|header_content_fun>> ] <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> list <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?footer: >>[< <<span class="ocsforge_color_uid"|Html_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|footer_content_fun>> ] <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> list <<span class="ocsforge_color_delimiter"| -> >>\\  [< <<span class="ocsforge_color_uid"|Html_types>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|div_content>> ] <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>> list <<span class="ocsforge_color_delimiter"| -> >>\\  [> `Section ] <<span class="ocsforge_color_uid"|Eliom_content>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Html>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|elt>>>>>><<div class="odocwiki_info"|~Section with header~, content and footer~.
    <<span class="odocwiki_inlinecode"|header>> and <<span class="odocwiki_inlinecode"|footer>> are empty by default
    ~This is just a short
    ~Header and footer can be empty ~(default~) and
    have fix size~. ~Content has scrollbar if too high~.
>>

<<span class="odocwiki_inlinecode"| popup ~?a ~?closeable ~?confirmation~_onclose ~?onclose gen~_content >>
    ~Display a modal popup~.
    ~Returns the popup container~, in case you need it~.
    <<span class="odocwiki_inlinecode"|closeable>>~, if true ~(default~)~, display a button to close the popup
    <<span class="odocwiki_inlinecode"|confirmation~_on~_close>> is used to ask confirmation to the user
    when closing the popup with the close button~. ~Meaningless if not
    <<span class="odocwiki_inlinecode"|closeable>>~.
    <<span class="odocwiki_inlinecode"|onclose>> is a hook called just after the popup has been actually closed~.
    <<span class="odocwiki_inlinecode"|gen~_content>> is a function taking the function closing the popup as
    parameter~, and returning the popup content~.
    ~For <<span class="odocwiki_inlinecode"|ios~_scroll~_pos~_fix>> see <<span class="odocwiki_inlinecode"|~Ot~_drawer~.drawer>>~.
    ~If <<span class="odocwiki_inlinecode"|disable~_background>> ~(default~: true~) is true then the tab~Index of all
    the elements not in the popup are set to ~-~1 with the effect that they can
    not be selected using the ~T~A~B key~. ~When the popup is closed their old
    tab~Index value is restored~. ~Note~, that some elements that are tabbable in
    some browsers but not by specification ~(scrollable div~'s~) are not affected~.
    ~If <<span class="odocwiki_inlinecode"|setup~_form>> ~(default~: false~) is true then the popup is scanned for a
    form element and <<span class="odocwiki_inlinecode"|setup~_tabcycle~_auto>> is applied~. ~If no form element is
    found~, the whole popup is scanned for form elements~.

<<span class="odocwiki_inlinecode"|ask~_question ~?a ~?a~_hcf question buttons>>
    ~Prompt a user~, wait for its response and return the selected value~.
    <<span class="odocwiki_inlinecode"|question>> is the content of the popup header
    <<span class="odocwiki_inlinecode"|buttons>> is the list of available answers~. ~Each button is a triple
    of <<span class="odocwiki_inlinecode"|~(content~, action~, classes~)>>~. <<span class="odocwiki_inlinecode"|action ~(~)>> is called to return the
    value when the corresponding button is clicked~.

~Shortcut using <<span class="odocwiki_inlinecode"|ask~_question>> for prompting the user with a question
    and returning a boolean~.
    <<span class="odocwiki_inlinecode"|confirm ~?a question yes no>>
    <<span class="odocwiki_inlinecode"|a>> is a traditional optional attributes to add to the popup
    <<span class="odocwiki_inlinecode"|question>> is the content of the popup header
    <<span class="odocwiki_inlinecode"|yes>> is the content of the ~'yes~' button ~(returning true~)
    <<span class="odocwiki_inlinecode"|no>> is the content of the ~'no~' button ~(returning false~)

~An ~H~T~M~L element which can be selected by pressing the tab key

<<span class="odocwiki_inlinecode"|setup~_tabcycle>> makes a form in a popup more user~-friendly~, by focussing on
    the first element of the form and forcing tab keys to cycle through the
    elements of the form only ~(and not the elements of the page behind the
    popup~)~. ~Note~: you get proper tab cycles only for three or more elements! ~The
    list does not need to be complete~, as only the first~, the second~, the next
    to last~, and the last element matter~.

<<span class="odocwiki_inlinecode"|setup~_tabcycle~_auto>> scans an element for tabbable elements ~(buttons~, inputs~)
    and feeds them to <<span class="odocwiki_inlinecode"|setup~_tabcycle>>
