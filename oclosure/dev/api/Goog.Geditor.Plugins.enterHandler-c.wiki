=Class type <<a_api_type | class type Goog.Geditor.Plugins.enterHandler >> =
<<pre class="ocsforge_color odocwiki_code"|<<span id="TYPEenterHandler"|<<span class="ocsforge_color_keyword"|class type>> <<span class="ocsforge_color_name"|enterHandler>>>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|object>><<a_api text=".." | class type Goog.Geditor.Plugins.enterHandler >><<span class="ocsforge_color_keyword"|end>>>>**~Inherits**
* <<a_api | class Goog.Geditor.plugin >>

----
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODgetTrogClassId"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|getTrogClassId>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"|**Returns** ~The ~I~D unique to this plugin class~. ~Note that different
     instances off the plugin share the same class~Id~.\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODhandleKeyPress"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|handleKeyPress>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Goog.Events.browserEvent" | class type Goog.Events.browserEvent >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> bool <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"| ~Handles keypress~. ~It is run before handle~Keyboard~Shortcut and if it returns
 true handle~Keyboard~Shortcut will not be called~.

**Returns** ~Whether the event was handled and thus should ~*not~* be
     propagated to other plugins or handle~Keyboard~Shortcut~.\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODhandlerKeyUp"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|handlerKeyUp>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Goog.Events.browserEvent" | class type Goog.Events.browserEvent >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> bool <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"| ~Handles keyup~.

**Returns** ~Whether the event was handled and thus should ~*not~* be
     propagated to other plugins~.\\
>>

==@@id="2_PreparesthegivenHTMLforediting"@@ ~Prepares the given ~H~T~M~L for editing~. ~Strips out content that should not
 appear in an editor~, and normalizes content as appropriate~. ~The inverse
 of clean~Contents~Html~.==



 ~This op is invoked even on disabled plugins~.


