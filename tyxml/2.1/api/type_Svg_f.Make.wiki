<<code language="ocaml" | functor (Xml : Xml_sigs.T) ->
  sig
    module Xml :
      sig
        type uri = Xml.uri
        val string_of_uri : uri -> string
        val uri_of_string : string -> uri
        type aname = string
        type event_handler = Xml.event_handler
        type attrib = Xml.attrib
        val float_attrib : aname -> float -> attrib
        val int_attrib : aname -> int -> attrib
        val string_attrib : aname -> string -> attrib
        val space_sep_attrib : aname -> string list -> attrib
        val comma_sep_attrib : aname -> string list -> attrib
        val event_handler_attrib : aname -> event_handler -> attrib
        val uri_attrib : aname -> uri -> attrib
        val uris_attrib : aname -> uri list -> attrib
        type elt = Xml.elt
        type ename = string
        val empty : unit -> elt
        val comment : string -> elt
        val pcdata : string -> elt
        val encodedpcdata : string -> elt
        val entity : string -> elt
        val leaf : ?a:attrib list -> ename -> elt
        val node : ?a:attrib list -> ename -> elt list -> elt
        val cdata : string -> elt
        val cdata_script : string -> elt
        val cdata_style : string -> elt
      end
    module Info : Xml_sigs.Info
    type uri = Xml.uri
    val string_of_uri : uri -> string
    val uri_of_string : string -> uri
    type 'a attrib = Xml.attrib
    type 'a elt = Xml.elt
    type +'a elts
    type ('a, 'b) nullary = ?a:'a attrib list -> unit -> 'b elt
    type ('a, 'b, 'c) unary = ?a:'a attrib list -> 'b elt -> 'c elt
    type ('a, 'b, 'c) star = ?a:'a attrib list -> 'b elt list -> 'c elt
    type ('a, 'b, 'c) plus =
        ?a:'a attrib list -> 'b elt -> 'b elt list -> 'c elt
    type altglyphdef_content =
        [ `Item of Svg_types.altglyphitem elt list
        | `Ref of Svg_types.glyphref elt list ]
    val a_version : string -> [> `Version ] attrib
    val a_baseprofile : string -> [> `BaseProfile ] attrib
    val a_x : Svg_types.coord -> [> `X ] attrib
    val a_y : Svg_types.coord -> [> `Y ] attrib
    val a_width : Svg_types.Unit.length -> [> `Width ] attrib
    val a_height : Svg_types.Unit.length -> [> `Height ] attrib
    val a_preserveaspectratio : string -> [> `PreserveAspectRatio ] attrib
    val a_contentscripttype : string -> [> `ContentScriptType ] attrib
    val a_contentstyletype : string -> [> `ContentStyleType ] attrib
    val a_zoomAndPan : [< `Disable | `Magnify ] -> [> `ZoomAndSpan ] attrib
    val a_xlink_href : Svg_types.iri -> [> `Xlink_href ] attrib
    val a_requiredfeatures :
      Svg_types.spacestrings -> [> `RequiredFeatures ] attrib
    val a_requiredextensions :
      Svg_types.spacestrings -> [> `RequiredExtension ] attrib
    val a_systemlanguage :
      Svg_types.commastrings -> [> `SystemLanguage ] attrib
    val a_externalressourcesrequired :
      bool -> [> `ExternalRessourcesRequired ] attrib
    val a_id : string -> [> `Id ] attrib
    val a_xml_base : Svg_types.iri -> [> `Xml_Base ] attrib
    val a_xml_lang : Svg_types.iri -> [> `Xml_Lang ] attrib
    val a_xml_space : [< `Default | `Preserve ] -> [> `Xml_Space ] attrib
    val a_type : string -> [> `Type ] attrib
    val a_media : Svg_types.commastrings -> [> `Media ] attrib
    val a_title : string -> [> `Title ] attrib
    val a_class : Svg_types.spacestrings -> [> `Class ] attrib
    val a_style : string -> [> `Style ] attrib
    val a_transform : Svg_types.transform -> [> `Transform ] attrib
    val a_viewbox : Svg_types.fourfloats -> [> `Viewbox ] attrib
    val a_d : string -> [> `D ] attrib
    val a_pathlength : float -> [> `PathLength ] attrib
    val a_rx : Svg_types.Unit.length -> [> `Rx ] attrib
    val a_ry : Svg_types.Unit.length -> [> `Ry ] attrib
    val a_cx : Svg_types.Unit.length -> [> `Cx ] attrib
    val a_cy : Svg_types.Unit.length -> [> `Cy ] attrib
    val a_r : Svg_types.Unit.length -> [> `R ] attrib
    val a_x1 : Svg_types.coord -> [> `X1 ] attrib
    val a_y1 : Svg_types.coord -> [> `Y1 ] attrib
    val a_x2 : Svg_types.coord -> [> `X2 ] attrib
    val a_y2 : Svg_types.coord -> [> `Y2 ] attrib
    val a_points : Svg_types.coords -> [> `Points ] attrib
    val a_x_list : Svg_types.lengths -> [> `X__list ] attrib
    val a_y_list : Svg_types.lengths -> [> `Y__list ] attrib
    val a_dx : Svg_types.lengths -> [> `Dx ] attrib
    val a_dy : Svg_types.lengths -> [> `Dy ] attrib
    val a_dx_single : Svg_types.Unit.length -> [> `Dx__single ] attrib
    val a_dy_single : Svg_types.Unit.length -> [> `Dy__single ] attrib
    val a_dx_number : Svg_types.number -> [> `Dx__number ] attrib
    val a_dy_number : Svg_types.number -> [> `Dy__number ] attrib
    val a_lengthadjust :
      [< `Spacing | `SpacingAndGlyphs ] -> [> `LengthAdjust ] attrib
    val a_textlength : Svg_types.Unit.length -> [> `TextLength ] attrib
    val a_rotate : Svg_types.numbers -> [> `Rotate ] attrib
    val a_startoffset : Svg_types.Unit.length -> [> `StartOffset ] attrib
    val a_method : [< `Align | `Stretch ] -> [> `Method ] attrib
    val a_spacing : [< `Auto | `Exact ] -> [> `Spacing ] attrib
    val a_glyphref : string -> [> `GlyphRef ] attrib
    val a_format : string -> [> `Format ] attrib
    val a_markerunits :
      [< `StrokeWidth | `UserSpaceOnUse ] -> [> `MarkerUnits ] attrib
    val a_refx : Svg_types.coord -> [> `RefX ] attrib
    val a_refy : Svg_types.coord -> [> `RefY ] attrib
    val a_markerwidth : Svg_types.Unit.length -> [> `MarkerWidth ] attrib
    val a_markerheight : Svg_types.Unit.length -> [> `MarkerHeight ] attrib
    val a_orient :
      [< `Angle of Svg_types.Unit.angle | `Auto ] -> [> `Orient ] attrib
    val a_local : string -> [> `Local ] attrib
    val a_renderingindent :
      [< `Absolute_colorimetric
       | `Auto
       | `Perceptual
       | `Relative_colorimetric
       | `Saturation ] ->
      [> `Rendering_Indent ] attrib
    val a_gradientunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] -> [ `GradientUnits ] attrib
    val a_gradienttransform :
      Svg_types.transforms -> [> `Gradient_Transform ] attrib
    val a_spreadmethod :
      [< `Pad | `Reflect | `Repeat ] -> [> `SpreadMethod ] attrib
    val a_fx : Svg_types.coord -> [> `Fx ] attrib
    val a_fy : Svg_types.coord -> [> `Fy ] attrib
    val a_offset :
      [< `Number of Svg_types.number | `Percentage of Svg_types.percentage ] ->
      [> `Offset ] attrib
    val a_patternunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] -> [> `PatternUnits ] attrib
    val a_patterncontentunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] ->
      [> `PatternContentUnits ] attrib
    val a_patterntransform :
      Svg_types.transforms -> [> `PatternTransform ] attrib
    val a_clippathunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] -> [> `ClipPathUnits ] attrib
    val a_maskunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] -> [> `MaskUnits ] attrib
    val a_maskcontentunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] ->
      [> `MaskContentUnits ] attrib
    val a_primitiveunits :
      [< `ObjectBoundingBox | `UserSpaceOnUse ] ->
      [> `PrimitiveUnits ] attrib
    val a_filterres :
      Svg_types.number_optional_number -> [> `FilterResUnits ] attrib
    val a_result : string -> [> `Result ] attrib
    val a_in :
      [< `BackgroundAlpha
       | `BackgroundImage
       | `FillPaint
       | `Ref of string
       | `SourceAlpha
       | `SourceGraphic
       | `StrokePaint ] ->
      [> `In ] attrib
    val a_in2 :
      [< `BackgroundAlpha
       | `BackgroundImage
       | `FillPaint
       | `Ref of string
       | `SourceAlpha
       | `SourceGraphic
       | `StrokePaint ] ->
      [> `In2 ] attrib
    val a_aizmuth : float -> [> `Azimuth ] attrib
    val a_elevation : float -> [> `Elevation ] attrib
    val a_pointatx : float -> [> `PointsAtX ] attrib
    val a_pointaty : float -> [> `PointsAtY ] attrib
    val a_pointatz : float -> [> `PointsAtZ ] attrib
    val a_specularexponent : float -> [> `SpecularExponent ] attrib
    val a_specularconstant : float -> [> `SpecularConstant ] attrib
    val a_limitingconeangle : float -> [> `LimitingConeAngle ] attrib
    val a_mode :
      [< `Darken | `Lighten | `Multiply | `Normal | `Screen ] ->
      [> `Mode ] attrib
    val a_typefecolor :
      [< `HueRotate | `LuminanceToAlpha | `Matrix | `Saturate ] ->
      [> `Type__fecolor ] attrib
    val a_values : Svg_types.numbers -> [> `Values ] attrib
    val a_transferttype :
      [< `Discrete | `Gamma | `Identity | `Linear | `Table ] ->
      [> `Type__transfert ] attrib
    val a_tablevalues : Svg_types.numbers -> [> `TableValues ] attrib
    val a_intercept : Svg_types.number -> [> `Intercept ] attrib
    val a_amplitude : Svg_types.number -> [> `Amplitude ] attrib
    val a_exponent : Svg_types.number -> [> `Exponent ] attrib
    val a_offsettransfer : Svg_types.number -> [> `Offset__transfer ] attrib
    val a_operator :
      [< `Arithmetic | `Atop | `In | `Out | `Over | `Xor ] ->
      [> `Operator ] attrib
    val a_k1 : Svg_types.number -> [> `K1 ] attrib
    val a_k2 : Svg_types.number -> [> `K2 ] attrib
    val a_k3 : Svg_types.number -> [> `K3 ] attrib
    val a_k4 : Svg_types.number -> [> `K4 ] attrib
    val a_order : Svg_types.number_optional_number -> [> `Order ] attrib
    val a_kernelmatrix : Svg_types.numbers -> [> `KernelMatrix ] attrib
    val a_divisor : Svg_types.number -> [> `Divisor ] attrib
    val a_bias : Svg_types.number -> [> `Bias ] attrib
    val a_kernelunitlength :
      Svg_types.number_optional_number -> [> `KernelUnitLength ] attrib
    val a_targetX : int -> [> `TargetX ] attrib
    val a_targetY : int -> [> `TargetY ] attrib
    val a_edgemode : [< `Duplicate | `None | `Wrap ] -> [> `TargetY ] attrib
    val a_preservealpha : bool -> [> `TargetY ] attrib
    val a_surfacescale : Svg_types.number -> [> `SurfaceScale ] attrib
    val a_diffuseconstant : Svg_types.number -> [> `DiffuseConstant ] attrib
    val a_scale : Svg_types.number -> [> `Scale ] attrib
    val a_xchannelselector :
      [< `A | `B | `G | `R ] -> [> `XChannelSelector ] attrib
    val a_ychannelselector :
      [< `A | `B | `G | `R ] -> [> `YChannelSelector ] attrib
    val a_stddeviation :
      Svg_types.number_optional_number -> [> `StdDeviation ] attrib
    val a_operatormorphology :
      [< `Dilate | `Erode ] -> [> `OperatorMorphology ] attrib
    val a_radius : Svg_types.number_optional_number -> [> `Radius ] attrib
    val a_basefrenquency :
      Svg_types.number_optional_number -> [> `BaseFrequency ] attrib
    val a_numoctaves : int -> [> `NumOctaves ] attrib
    val a_seed : Svg_types.number -> [> `Seed ] attrib
    val a_stitchtiles : [< `NoStitch | `Stitch ] -> [> `StitchTiles ] attrib
    val a_stitchtype :
      [< `FractalNoise | `Turbulence ] -> [> `TypeStitch ] attrib
    val a_xlinkshow : [< `New | `Replace ] -> [> `Xlink_show ] attrib
    val a_xlinkactuate : [< `OnRequest ] -> [> `Xlink_actuate ] attrib
    val a_target : string -> [> `Xlink_target ] attrib
    val a_viewtarget : string -> [> `ViewTarget ] attrib
    val a_attributename : string -> [> `AttributeName ] attrib
    val a_attributetype :
      [< `Auto | `CSS | `XML ] -> [> `AttributeType ] attrib
    val a_begin : string -> [> `Begin ] attrib
    val a_dur : string -> [> `Dur ] attrib
    val a_min : string -> [> `Min ] attrib
    val a_max : string -> [> `Max ] attrib
    val a_restart :
      [< `Always | `Never | `WhenNotActive ] -> [> `Restart ] attrib
    val a_repeatcount : string -> [> `RepeatCount ] attrib
    val a_repeatdur : string -> [> `RepeatDur ] attrib
    val a_fill : [< `Freeze | `Remove ] -> [> `Fill ] attrib
    val a_calcmode :
      [< `Discrete | `Linear | `Paced | `Spline ] -> [> `CalcMode ] attrib
    val a_values_anim : Svg_types.strings -> [> `Values__anim ] attrib
    val a_keytimes : Svg_types.strings -> [> `KeyTimes ] attrib
    val a_keysplines : Svg_types.strings -> [> `KeySplines ] attrib
    val a_from : string -> [> `From ] attrib
    val a_to : string -> [> `To ] attrib
    val a_by : string -> [> `By ] attrib
    val a_additive : [< `Replace | `Sum ] -> [> `Additive ] attrib
    val a_accumulate : [< `None | `Sum ] -> [> `Accumulate ] attrib
    val a_keypoints : Svg_types.numbers_semicolon -> [> `KeyPoints ] attrib
    val a_path : string -> [> `Path ] attrib
    val a_typeanimatecolor :
      [ `Rotate | `Scale | `SkewX | `SkewY | `Translate ] ->
      [ `Type__animatecolor ] attrib
    val a_horiz_origin_x :
      Svg_types.number -> [> `Horiz___origin___x ] attrib
    val a_horiz_origin_y :
      Svg_types.number -> [> `Horiz___origin___y ] attrib
    val a_horiz_adv_x : Svg_types.number -> [> `Horiz___adv___x ] attrib
    val a_vert_origin_x : Svg_types.number -> [> `Vert___origin___x ] attrib
    val a_vert_origin_y : Svg_types.number -> [> `Vert___origin___y ] attrib
    val a_vert_adv_y : Svg_types.number -> [> `Vert___adv___y ] attrib
    val a_unicode : string -> [> `Unicode ] attrib
    val a_glyphname : string -> [> `glyphname ] attrib
    val a_orientation : [< `H | `V ] -> [> `Orientation ] attrib
    val a_arabicform :
      [< `Initial | `Isolated | `Medial | `Terminal ] ->
      [> `Arabic___form ] attrib
    val a_lang : string -> [> `Lang ] attrib
    val a_u1 : string -> [> `U1 ] attrib
    val a_u2 : string -> [> `U2 ] attrib
    val a_g1 : string -> [> `G1 ] attrib
    val a_g2 : string -> [> `G2 ] attrib
    val a_k : string -> [> `K ] attrib
    val a_fontfamily : string -> [> `Font___Family ] attrib
    val a_fontstyle : string -> [> `Font___Style ] attrib
    val a_fontvariant : string -> [> `Font___Variant ] attrib
    val a_fontweight : string -> [> `Font___Weight ] attrib
    val a_fontstretch : string -> [> `Font___Stretch ] attrib
    val a_fontsize : string -> [> `Font___Size ] attrib
    val a_unicoderange : string -> [> `Unicode___Range ] attrib
    val a_unitsperem : string -> [> `Units___Per___Em ] attrib
    val a_stemv : Svg_types.number -> [> `Stemv ] attrib
    val a_stemh : Svg_types.number -> [> `Stemh ] attrib
    val a_slope : Svg_types.number -> [> `Slope ] attrib
    val a_capheight : Svg_types.number -> [> `Cap___Height ] attrib
    val a_xheight : Svg_types.number -> [> `X___Height ] attrib
    val a_accentheight : Svg_types.number -> [> `Accent___Height ] attrib
    val a_ascent : Svg_types.number -> [> `Ascent ] attrib
    val a_widths : string -> [> `Widths ] attrib
    val a_bbox : string -> [> `Bbox ] attrib
    val a_ideographic : Svg_types.number -> [> `Ideographic ] attrib
    val a_alphabetic : Svg_types.number -> [> `Alphabetic ] attrib
    val a_mathematical : Svg_types.number -> [> `Mathematical ] attrib
    val a_hanging : Svg_types.number -> [> `Hanging ] attrib
    val a_videographic : Svg_types.number -> [> `V___Ideographic ] attrib
    val a_valphabetic : Svg_types.number -> [> `V___Alphabetic ] attrib
    val a_vmathematical : Svg_types.number -> [> `V___Mathematical ] attrib
    val a_vhanging : Svg_types.number -> [> `V___Hanging ] attrib
    val a_underlineposition :
      Svg_types.number -> [> `Underline___Position ] attrib
    val a_underlinethickness :
      Svg_types.number -> [> `Underline___Thickness ] attrib
    val a_strikethroughposition :
      Svg_types.number -> [> `Strikethrough___Position ] attrib
    val a_strikethroughthickness :
      Svg_types.number -> [> `Strikethrough___Thickness ] attrib
    val a_overlineposition :
      Svg_types.number -> [> `Overline___Position ] attrib
    val a_overlinethickness :
      Svg_types.number -> [> `Overline___Thickness ] attrib
    val a_string : string -> [> `String ] attrib
    val a_name : string -> [> `Name ] attrib
    val a_onabort : string -> [> `Onabort ] attrib
    val a_onactivate : string -> [> `Onactivate ] attrib
    val a_onbegin : string -> [> `Onbegin ] attrib
    val a_onclick : string -> [> `Onclick ] attrib
    val a_onend : string -> [> `Onend ] attrib
    val a_onerror : string -> [> `Onerror ] attrib
    val a_onfocusin : string -> [> `Onfocusin ] attrib
    val a_onfocusout : string -> [> `Onfocusout ] attrib
    val a_onload : string -> [> `Onload ] attrib
    val a_onmousedown : string -> [> `Onmousdown ] attrib
    val a_onmouseup : string -> [> `Onmouseup ] attrib
    val a_onmouseover : string -> [> `Onmouseover ] attrib
    val a_onmouseout : string -> [> `Onmouseout ] attrib
    val a_onmousemove : string -> [> `Onmousemove ] attrib
    val a_onrepeat : string -> [> `Onrepeat ] attrib
    val a_onresize : string -> [> `Onresize ] attrib
    val a_onscroll : string -> [> `Onscroll ] attrib
    val a_onunload : string -> [> `Onunload ] attrib
    val a_onzoom : string -> [> `Onzoom ] attrib
    val metadata :
      ?a:Svg_types.metadata_attr attrib list ->
      Xml.elt list -> [> Svg_types.metadata ] elt
    val foreignobject :
      ?a:Svg_types.foreignobject_attr attrib list ->
      Xml.elt list -> [> Svg_types.foreignobject ] elt
    val svg :
      ([< Svg_types.svg_attr ], [< Svg_types.svg_content ],
       [> Svg_types.svg ])
      star
    val g :
      ([< Svg_types.g_attr ], [< Svg_types.g_content ], [> Svg_types.g ])
      star
    val defs :
      ([< Svg_types.defs_attr ], [< Svg_types.defs_content ],
       [> Svg_types.defs ])
      star
    val desc :
      ([< Svg_types.desc_attr ], [< Svg_types.desc_content ],
       [> Svg_types.desc ])
      unary
    val title :
      ([< Svg_types.title_attr ], [< Svg_types.title_content ],
       [> Svg_types.title ])
      unary
    val symbol :
      ([< Svg_types.symbol_attr ], [< Svg_types.symbol_content ],
       [> Svg_types.symbol ])
      star
    val use :
      ([< Svg_types.use_attr ], [< Svg_types.use_content ],
       [> Svg_types.use ])
      star
    val image :
      ([< Svg_types.image_attr ], [< Svg_types.image_content ],
       [> Svg_types.image ])
      star
    val switch :
      ([< Svg_types.switch_attr ], [< Svg_types.switch_content ],
       [> Svg_types.switch ])
      star
    val style :
      ([< Svg_types.style_attr ], [< Svg_types.style_content ],
       [> Svg_types.style ])
      unary
    val path :
      ([< Svg_types.path_attr ], [< Svg_types.path_content ],
       [> Svg_types.path ])
      star
    val rect :
      ([< Svg_types.rect_attr ], [< Svg_types.rect_content ],
       [> Svg_types.rect ])
      star
    val circle :
      ([< Svg_types.circle_attr ], [< Svg_types.circle_content ],
       [> Svg_types.circle ])
      star
    val ellipse :
      ([< Svg_types.ellipse_attr ], [< Svg_types.ellipse_content ],
       [> Svg_types.ellipse ])
      star
    val line :
      ([< Svg_types.line_attr ], [< Svg_types.line_content ],
       [> Svg_types.line ])
      star
    val polyline :
      ([< Svg_types.polyline_attr ], [< Svg_types.polyline_content ],
       [> Svg_types.polyline ])
      star
    val polygon :
      ([< Svg_types.polygon_attr ], [< Svg_types.polygon_content ],
       [> Svg_types.polygon ])
      star
    val text :
      ([< Svg_types.text_attr ], [< Svg_types.text_content ],
       [> Svg_types.text ])
      star
    val tspan :
      ([< Svg_types.tspan_attr ], [< Svg_types.tspan_content ],
       [> Svg_types.tspan ])
      star
    val tref :
      ([< Svg_types.tref_attr ], [< Svg_types.tref_content ],
       [> Svg_types.tref ])
      star
    val textpath :
      ([< Svg_types.textpath_attr ], [< Svg_types.textpath_content ],
       [> Svg_types.textpath ])
      star
    val altglyph :
      ([< Svg_types.altglyph_attr ], [< Svg_types.altglyph_content ],
       [> Svg_types.altglyph ])
      unary
    val altglyphdef :
      ([< Svg_types.altglyphdef_attr ], [< altglyphdef_content ],
       [> Svg_types.altglyphdef ])
      unary
    val altglyphitem :
      ([< Svg_types.altglyphitem_attr ], [< Svg_types.altglyphitem_content ],
       [> Svg_types.altglyphitem ])
      plus
    val glyphref :
      ([< Svg_types.glyphref_attr ], [> Svg_types.glyphref ]) nullary
    val marker :
      ([< Svg_types.marker_attr ], [< Svg_types.marker_content ],
       [> Svg_types.marker ])
      star
    val colorprofile :
      ([< Svg_types.colorprofile_attr ], [< Svg_types.colorprofile_content ],
       [> Svg_types.colorprofile ])
      star
    val lineargradient :
      ([< Svg_types.lineargradient_attr ],
       [< Svg_types.lineargradient_content ], [> Svg_types.lineargradient ])
      star
    val radialgradient :
      ([< Svg_types.radialgradient_attr ],
       [< Svg_types.radialgradient_content ], [> Svg_types.radialgradient ])
      star
    val gradientstop :
      ([< Svg_types.gradientstop_attr ], [< Svg_types.gradientstop_content ],
       [> Svg_types.gradientstop ])
      star
    val pattern :
      ([< Svg_types.pattern_attr ], [< Svg_types.pattern_content ],
       [> Svg_types.pattern ])
      star
    val clippath :
      ([< Svg_types.clippath_attr ], [< Svg_types.clippath_content ],
       [> Svg_types.clippath ])
      star
    val filter :
      ([< Svg_types.filter_attr ], [< Svg_types.filter_content ],
       [> Svg_types.filter ])
      star
    val fedistantlight :
      ([< Svg_types.fedistantlight_attr ],
       [< Svg_types.fedistantlight_content ], [> Svg_types.fedistantlight ])
      star
    val fepointlight :
      ([< Svg_types.fepointlight_attr ], [< Svg_types.fepointlight_content ],
       [> Svg_types.fepointlight ])
      star
    val fespotlight :
      ([< Svg_types.fespotlight_attr ], [< Svg_types.fespotlight_content ],
       [> Svg_types.fespotlight ])
      star
    val feblend :
      ([< Svg_types.feblend_attr ], [< Svg_types.feblend_content ],
       [> Svg_types.feblend ])
      star
    val fecolormatrix :
      ([< Svg_types.fecolormatrix_attr ],
       [< Svg_types.fecolormatrix_content ], [> Svg_types.fecolormatrix ])
      star
    val fecomponenttransfer :
      ([< Svg_types.fecomponenttransfer_attr ],
       [< Svg_types.fecomponenttransfer_content ],
       [> Svg_types.fecomponenttransfer ])
      star
    val fefunca :
      ([< Svg_types.fefunca_attr ], [< Svg_types.fefunca_content ],
       [> Svg_types.fefunca ])
      star
    val fefuncg :
      ([< Svg_types.fefuncg_attr ], [< Svg_types.fefuncg_content ],
       [> Svg_types.fefuncg ])
      star
    val fefuncb :
      ([< Svg_types.fefuncb_attr ], [< Svg_types.fefuncb_content ],
       [> Svg_types.fefuncb ])
      star
    val fefuncr :
      ([< Svg_types.fefuncr_attr ], [< Svg_types.fefuncr_content ],
       [> Svg_types.fefuncr ])
      star
    val fecomposite :
      ([< Svg_types.fecomposite_attr ], [< Svg_types.fecomposite_content ],
       [> Svg_types.fecomposite ])
      star
    val feconvolvematrix :
      ([< Svg_types.feconvolvematrix_attr ],
       [< Svg_types.feconvolvematrix_content ],
       [> Svg_types.feconvolvematrix ])
      star
    val fediffuselighting :
      ([< Svg_types.fediffuselighting_attr ],
       [< Svg_types.fediffuselighting_content ],
       [> Svg_types.fediffuselighting ])
      star
    val fedisplacementmap :
      ([< Svg_types.fedisplacementmap_attr ],
       [< Svg_types.fedisplacementmap_content ],
       [> Svg_types.fedisplacementmap ])
      star
    val feflood :
      ([< Svg_types.feflood_attr ], [< Svg_types.feflood_content ],
       [> Svg_types.feflood ])
      star
    val fegaussianblur :
      ([< Svg_types.fegaussianblur_attr ],
       [< Svg_types.fegaussianblur_content ], [> Svg_types.fegaussianblur ])
      star
    val feimage :
      ([< Svg_types.feimage_attr ], [< Svg_types.feimage_content ],
       [> Svg_types.feimage ])
      star
    val femerge :
      ([< Svg_types.femerge_attr ], [< Svg_types.femerge_content ],
       [> Svg_types.femerge ])
      star
    val femorphology :
      ([< Svg_types.femorphology_attr ], [< Svg_types.femorphology_content ],
       [> Svg_types.femorphology ])
      star
    val feoffset :
      ([< Svg_types.feoffset_attr ], [< Svg_types.feoffset_content ],
       [> Svg_types.feoffset ])
      star
    val fespecularlighting :
      ([< Svg_types.fespecularlighting_attr ],
       [< Svg_types.fespecularlighting_content ],
       [> Svg_types.fespecularlighting ])
      star
    val fetile :
      ([< Svg_types.fetile_attr ], [< Svg_types.fetile_content ],
       [> Svg_types.fetile ])
      star
    val feturbulence :
      ([< Svg_types.feturbulence_attr ], [< Svg_types.feturbulence_content ],
       [> Svg_types.feturbulence ])
      star
    val cursor :
      ([< Svg_types.cursor_attr ], [< Svg_types.cursor_content ],
       [> Svg_types.cursor ])
      star
    val a :
      ([< Svg_types.a_attr ], [< Svg_types.a_content ], [> Svg_types.a ])
      star
    val view :
      ([< Svg_types.view_attr ], [< Svg_types.view_content ],
       [> Svg_types.view ])
      star
    val script :
      ([< Svg_types.script_attr ], [< Svg_types.script_content ],
       [> Svg_types.script ])
      unary
    val animation :
      ([< Svg_types.animation_attr ], [< Svg_types.animation_content ],
       [> Svg_types.animation ])
      star
    val set :
      ([< Svg_types.set_attr ], [< Svg_types.set_content ],
       [> Svg_types.set ])
      star
    val animatemotion :
      ([< Svg_types.animatemotion_attr ],
       [< Svg_types.animatemotion_content ], [> Svg_types.animatemotion ])
      star
    val mpath :
      ([< Svg_types.mpath_attr ], [< Svg_types.mpath_content ],
       [> Svg_types.mpath ])
      star
    val animatecolor :
      ([< Svg_types.animatecolor_attr ], [< Svg_types.animatecolor_content ],
       [> Svg_types.animatecolor ])
      star
    val animatetransform :
      ([< Svg_types.animatetransform_attr ],
       [< Svg_types.animatetransform_content ],
       [> Svg_types.animatetransform ])
      star
    val font :
      ([< Svg_types.font_attr ], [< Svg_types.font_content ],
       [> Svg_types.font ])
      star
    val glyph :
      ([< Svg_types.glyph_attr ], [< Svg_types.glyph_content ],
       [> Svg_types.glyph ])
      star
    val missingglyph :
      ([< Svg_types.missingglyph_attr ], [< Svg_types.missingglyph_content ],
       [> Svg_types.missingglyph ])
      star
    val hkern : ([< Svg_types.hkern_attr ], [> Svg_types.hkern ]) nullary
    val vkern : ([< Svg_types.vkern_attr ], [> Svg_types.vkern ]) nullary
    val fontface :
      ([< Svg_types.fontface_attr ], [> Svg_types.fontface ]) nullary
    val fontfacesrc :
      ([< Svg_types.fontfacesrc_attr ], [< Svg_types.fontfacesrc_content ],
       [> Svg_types.fontfacesrc ])
      star
    val fontfaceuri :
      ([< Svg_types.fontfaceuri_attr ], [< Svg_types.fontfaceuri_content ],
       [> Svg_types.fontfaceuri ])
      star
    val fontfaceformat :
      ([< Svg_types.fontfaceformat_attr ], [> Svg_types.fontfaceformat ])
      nullary
    val fontfacename :
      ([< Svg_types.fontfacename_attr ], [> Svg_types.fontfacename ]) nullary
    val tot : Xml.elt -> 'a elt
    val totl : Xml.elt list -> 'a elt list
    val toelt : 'a elt -> Xml.elt
    val toeltl : 'a elt list -> Xml.elt list
    val to_xmlattribs : 'a attrib list -> Xml.attrib list
    val to_attrib : Xml.attrib -> 'a attrib
    type doc = [ `Svg ] elt
    val doc_toelt : doc -> Xml.elt
  end >>