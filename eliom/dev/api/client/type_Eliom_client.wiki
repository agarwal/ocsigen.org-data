<<code language="ocaml" | sig
  val init_client_app :
    app_name:string ->
    ?ssl:bool ->
    hostname:string ->
    ?port:int -> full_path:Eliom_lib.Url.path -> unit -> unit
  val is_client_app : unit -> bool
  val change_page :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, [< Eliom_service.service_method ],
             [< Eliom_service.attached ], [< Eliom_service.service_kind ],
             [< Eliom_service.suff ], 'd, 'e, [< Eliom_service.registrable ],
             [< Eliom_registration.non_ocaml_service ])
            Eliom_service.service ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool ->
    ?progress:(int -> int -> unit) ->
    ?upload_progress:(int -> int -> unit) ->
    ?override_mime_type:string -> 'a -> 'b -> unit Lwt.t
  val call_ocaml_service :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, [< Eliom_service.service_method ],
             [< Eliom_service.attached ], [< Eliom_service.service_kind ],
             [< Eliom_service.suff ], 'd, 'e, [< Eliom_service.registrable ],
             'return Eliom_service.ocaml_service)
            Eliom_service.service ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool ->
    ?progress:(int -> int -> unit) ->
    ?upload_progress:(int -> int -> unit) ->
    ?override_mime_type:string -> 'a -> 'b -> 'return Lwt.t
  val exit_to :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, [< Eliom_service.service_method ],
             [< Eliom_service.attached ], [< Eliom_service.service_kind ],
             [< Eliom_service.suff ], 'd, 'e, [< Eliom_service.registrable ],
             [< Eliom_registration.non_ocaml_service ])
            Eliom_service.service ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool -> 'a -> 'b -> unit
  val window_open :
    window_name:Js.js_string Js.t ->
    ?window_features:Js.js_string Js.t ->
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, unit, [< Eliom_service.get_service_kind ],
             [< Eliom_service.attached ], [< Eliom_service.service_kind ],
             [< Eliom_service.suff ], 'b, unit,
             [< Eliom_service.registrable ], 'c)
            Eliom_service.service ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool -> 'a -> Dom_html.window Js.t
  val change_url :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('get, unit, [< Eliom_service.get_service_kind ],
             [< Eliom_service.attached ], [< Eliom_service.service_kind ],
             [< Eliom_service.suff ], 'gn, unit,
             [< Eliom_service.registrable ], 'return)
            Eliom_service.service ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set -> 'get -> unit
  val call_service :
    ?absolute:bool ->
    ?absolute_path:bool ->
    ?https:bool ->
    service:('a, 'b, [< Eliom_service.service_method ],
             [< Eliom_service.attached ], [< Eliom_service.service_kind ],
             [< Eliom_service.suff ], 'd, 'e, [< Eliom_service.registrable ],
             'return)
            Eliom_service.service ->
    ?hostname:string ->
    ?port:int ->
    ?fragment:string ->
    ?keep_nl_params:[ `All | `None | `Persistent ] ->
    ?nl_params:Eliom_parameter.nl_params_set ->
    ?keep_get_na_params:bool ->
    ?progress:(int -> int -> unit) ->
    ?upload_progress:(int -> int -> unit) ->
    ?override_mime_type:string -> 'a -> 'b -> string Lwt.t
  val onload : (unit -> unit) -> unit
  val onunload : (unit -> string option) -> unit
  val wait_load_end : unit -> unit Lwt.t
  val get_application_name : unit -> string
  type ('a, 'b) server_function = 'a -> 'b Lwt.t
  val server_function :
    ?scope:[< Eliom_common.scope ] ->
    ?options:unit ->
    ?charset:string ->
    ?code:int ->
    ?content_type:string ->
    ?headers:Http_headers.t ->
    ?secure_session:bool ->
    name:string ->
    ?csrf_safe:bool ->
    ?csrf_scope:[< Eliom_common.user_scope ] ->
    ?csrf_secure:bool ->
    ?max_use:int ->
    ?timeout:float ->
    ?https:bool ->
    ?error_handler:((string * exn) list -> 'b Lwt.t) ->
    'a Deriving_Json.t -> unit -> ('a, 'b) Eliom_client.server_function
  val init : unit -> unit
  val reload_function : (unit -> unit -> unit Lwt.t) option Pervasives.ref
  val log_section : Eliom_lib.Lwt_log.section
  val middleClick : Dom_html.mouseEvent Js.t -> bool
  val set_content_local :
    ?offset:Eliommod_dom.position ->
    ?fragment:string -> Dom_html.element Js.t -> unit Lwt.t
end >>