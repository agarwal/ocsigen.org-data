<<code language="ocaml" | sig
  val on_start_process : (unit -> unit Lwt.t) -> unit
  val on_start_connected_process : (unit -> unit Lwt.t) -> unit
  val on_connected_request : (int64 -> unit Lwt.t) -> unit
  val on_open_session : (int64 -> unit Lwt.t) -> unit
  val on_close_session : (unit -> unit Lwt.t) -> unit
  val on_request : (unit -> unit Lwt.t) -> unit
  val on_denied_request : (int64 option -> unit Lwt.t) -> unit
  module Make :
    functor (C : Eba_config.Session) ->
      functor (Groups : Eba_sigs.Groups) ->
        sig
          type group = Groups.t
          exception Permission_denied
          exception Not_connected
          val connect : int64 -> unit Lwt.t
          val disconnect : unit -> unit Lwt.t
          val connected_fun :
            ?allow:group list ->
            ?deny:group list ->
            ?deny_fun:(int64 option -> 'c Lwt.t) ->
            (int64 -> 'a -> 'b -> 'c Lwt.t) -> 'a -> 'b -> 'c Lwt.t
          val connected_rpc :
            ?allow:group list ->
            ?deny:group list ->
            ?deny_fun:(int64 option -> 'b Lwt.t) ->
            (int64 -> 'a -> 'b Lwt.t) -> 'a -> 'b Lwt.t
          val get_current_userid : unit -> int64
          module Opt :
            sig
              val connected_fun :
                ?allow:group list ->
                ?deny:group list ->
                ?deny_fun:(int64 option -> 'c Lwt.t) ->
                (int64 option -> 'a -> 'b -> 'c Lwt.t) ->
                'a -> 'b -> 'c Lwt.t
              val connected_rpc :
                ?allow:group list ->
                ?deny:group list ->
                ?deny_fun:(int64 option -> 'b Lwt.t) ->
                (int64 option -> 'a -> 'b Lwt.t) -> 'a -> 'b Lwt.t
              val get_current_userid : unit -> int64 option
            end
        end
end >>