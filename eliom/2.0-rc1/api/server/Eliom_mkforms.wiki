=Module <<a_api_type subproject="server" | module Eliom_mkforms >> =
<<div class="code"|<<span class="keyword"|module>> Eliom_mkforms: <<span class='code'|sig>><<a_api subproject="server" text=".." | module Eliom_mkforms >><<span class='code'|end>>>>~This module defines the functor to use to creates modules
   generating form widgets for your own types of pages~.
   ~It is used for example in <<a_api subproject="server" | module Eliom_output >>~.\\

----
\\
~This module defines the functor to use to creates modules
   generating form widgets for your own types of pages~.
   ~It is used for example in <<a_api subproject="server" | module Eliom_output >>~.\\
<<div class="code"|<<span class="keyword"|module type>> <<a_api subproject="server" text="FORMS_PARAM" | module type Eliom_mkforms.FORMS_PARAM >> = <<span class='code'|sig>><<a_api subproject="server" text=".." | module type Eliom_mkforms.FORMS_PARAM >><<span class='code'|end>>>><<div class="code"|<<span class="keyword"|module>> <<a_api subproject="server" text="MakeForms" | module Eliom_mkforms.MakeForms >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~Pages>><<span class='code'| ~: >><<span class="code type"|<<a_api subproject="server" text="FORMS_PARAM" | module Eliom_mkforms.FORMS_PARAM >>>><<span class='code'|~) ~-~> >><<span class='code'|sig>><<a_api subproject="server" text=".." | module Eliom_mkforms.MakeForms >><<span class='code'|end>>>>>>