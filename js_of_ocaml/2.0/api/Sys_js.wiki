=Module <<a_api_type | module Sys_js >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Sys_js>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Sys_js >><<span class="ocsforge_color_keyword"|end>>>>~Register a file to a ~Pseudo ~Filesystem~.
      <<span class="odocwiki_inlinecode"|register~_file ~~name ~~content>> register the file <<span class="odocwiki_inlinecode"|name>> with content <<span class="odocwiki_inlinecode"|content>>
      so it can be be opened with <<span class="odocwiki_inlinecode"|~Pervasives~.open~_in name>>

----
<<pre id="VALregister_file" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|register~_file>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_label"| name: >>string <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_label"| content: >>string <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Register a file to a ~Pseudo ~Filesystem~.
      <<span class="odocwiki_inlinecode"|register~_file ~~name ~~content>> register the file <<span class="odocwiki_inlinecode"|name>> with content <<span class="odocwiki_inlinecode"|content>>
      so it can be be opened with <<span class="odocwiki_inlinecode"|~Pervasives~.open~_in name>>
>>
<<pre id="VALregister_autoload" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|register~_autoload>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_label"| path: >>string <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> string option<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Register a callback to the <<span class="odocwiki_inlinecode"|path>> to dynamicly load missing files~.
      ~Whenever a file is missing in <<span class="odocwiki_inlinecode"|path>>~, the callback is used to optionally
      get the content of the file~.
      <<span class="odocwiki_inlinecode"|register~_autoload ~~path f>> register the callback <<span class="odocwiki_inlinecode"|f>> to the path <<span class="odocwiki_inlinecode"|path>>~.
      ~The callback <<span class="odocwiki_inlinecode"|f>> receives the absolute filename as arguement~.
>>
<<pre id="VALset_channel_flusher" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|set~_channel~_flusher>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_uid"|Pervasives>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|out_channel>> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> unit<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|~Set a callback to be called when an out~_channel flush its buffer~.
      <<span class="odocwiki_inlinecode"|set~_channel~_flusher chan cb>> install the callback <<span class="odocwiki_inlinecode"|cb>> for <<span class="odocwiki_inlinecode"|chan>> out~_channel~.
      <<span class="odocwiki_inlinecode"|cb>> will be called with the string to flush~.
>>
