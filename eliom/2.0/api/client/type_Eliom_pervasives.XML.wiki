<<code language="ocaml" | sig
  type aname = string
  type attrib
  type caml_event =
      CE_registered_closure of (unit -> unit) Eliom_pervasives.client_expr
    | CE_client_closure of (unit -> unit)
    | CE_call_service of
        ([ `A | `Form_get | `Form_post ] * (bool * string list) option)
        option Eliom_lazy.request
  type event = Raw of string | Caml of Eliom_pervasives.XML.caml_event
  type ename = string
  type elt
  type econtent = private
      Empty
    | Comment of string
    | EncodedPCDATA of string
    | PCDATA of string
    | Entity of string
    | Leaf of Eliom_pervasives.XML.ename * Eliom_pervasives.XML.attrib list
    | Node of Eliom_pervasives.XML.ename * Eliom_pervasives.XML.attrib list *
        Eliom_pervasives.XML.elt list
  val event_of_service :
    ([ `A | `Form_get | `Form_post ] * (bool * string list) option) option
    Eliom_lazy.request -> Eliom_pervasives.XML.event
  val event_of_function : (unit -> unit) -> Eliom_pervasives.XML.event
  type separator = Space | Comma
  type acontent = private
      AFloat of Eliom_pervasives.XML.aname * float
    | AInt of Eliom_pervasives.XML.aname * int
    | AStr of Eliom_pervasives.XML.aname * string
    | AStrL of Eliom_pervasives.XML.separator * Eliom_pervasives.XML.aname *
        string list
  val acontent : Eliom_pervasives.XML.attrib -> Eliom_pervasives.XML.acontent
  type racontent =
      RA of Eliom_pervasives.XML.acontent
    | RACamlEvent of
        (Eliom_pervasives.XML.aname * Eliom_pervasives.XML.caml_event)
    | RALazyString of Eliom_pervasives.XML.aname * string Eliom_lazy.request
  val racontent :
    Eliom_pervasives.XML.attrib -> Eliom_pervasives.XML.racontent
  val aname : Eliom_pervasives.XML.attrib -> Eliom_pervasives.XML.aname
  val float_attrib :
    Eliom_pervasives.XML.aname -> float -> Eliom_pervasives.XML.attrib
  val int_attrib :
    Eliom_pervasives.XML.aname -> int -> Eliom_pervasives.XML.attrib
  val string_attrib :
    Eliom_pervasives.XML.aname -> string -> Eliom_pervasives.XML.attrib
  val space_sep_attrib :
    Eliom_pervasives.XML.aname -> string list -> Eliom_pervasives.XML.attrib
  val comma_sep_attrib :
    Eliom_pervasives.XML.aname -> string list -> Eliom_pervasives.XML.attrib
  val event_attrib :
    Eliom_pervasives.XML.aname ->
    Eliom_pervasives.XML.event -> Eliom_pervasives.XML.attrib
  val content : Eliom_pervasives.XML.elt -> Eliom_pervasives.XML.econtent
  val pcdata : string -> Eliom_pervasives.XML.elt
  val encodedpcdata : string -> Eliom_pervasives.XML.elt
  val entity : string -> Eliom_pervasives.XML.elt
  val empty : unit -> Eliom_pervasives.XML.elt
  val comment : string -> Eliom_pervasives.XML.elt
  val leaf :
    ?a:Eliom_pervasives.XML.attrib list ->
    Eliom_pervasives.XML.ename -> Eliom_pervasives.XML.elt
  val node :
    ?a:Eliom_pervasives.XML.attrib list ->
    Eliom_pervasives.XML.ename ->
    Eliom_pervasives.XML.elt list -> Eliom_pervasives.XML.elt
  val lazy_node :
    ?a:Eliom_pervasives.XML.attrib list ->
    Eliom_pervasives.XML.ename ->
    Eliom_pervasives.XML.elt list Eliom_lazy.request ->
    Eliom_pervasives.XML.elt
  val cdata : string -> Eliom_pervasives.XML.elt
  val cdata_script : string -> Eliom_pervasives.XML.elt
  val cdata_style : string -> Eliom_pervasives.XML.elt
  val make_unique :
    ?copy:Eliom_pervasives.XML.elt ->
    Eliom_pervasives.XML.elt -> Eliom_pervasives.XML.elt
  val is_unique : Eliom_pervasives.XML.elt -> bool
  val get_unique_id : Eliom_pervasives.XML.elt -> string option
  type node_id = string
  type ref_tree =
      Ref_node of
        (Eliom_pervasives.XML.node_id option *
         (string * Eliom_pervasives.XML.caml_event) list *
         Eliom_pervasives.XML.ref_tree list)
    | Ref_empty of int
end >>