=Module <<a_api_type | module XHTML_f >> =
<<div class="code"|<<span class="keyword"|module>> XHTML_f: <<span class='code'|sig>><<a_api text=".." | module XHTML_f >><<span class='code'|end>>>>~Typesafe constructors for ~X~H~T~M~L documents ~(~Functorial interface~)\\

----
<<div class="code"|<<span class="keyword"|module>> <<a_api text="Make_01_00" | module XHTML_f.Make_01_00 >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~X~M~L>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.T" | module XML_sigs.T >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(XML).T_01_00>><<span class="code type"|{{{  }}}>>>>>><<div class="code"|<<span class="keyword"|module>> <<a_api text="Make_01_01" | module XHTML_f.Make_01_01 >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~X~M~L>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.T" | module XML_sigs.T >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(XML).T_01_01>><<span class="code type"|{{{  }}}>>>>>><<div class="code"|<<span class="keyword"|module>> <<a_api text="Make_01_00_compat" | module XHTML_f.Make_01_00_compat >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~X~M~L>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.T" | module XML_sigs.T >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(XML).T_01_00>><<span class="code type"|{{{  }}} with type 'a elt = 'a Make_01_00(XML).elt>>>>>><<div class="code"|<<span class="keyword"|module>> <<a_api text="Make_01_01_compat" | module XHTML_f.Make_01_01_compat >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~X~M~L>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.T" | module XML_sigs.T >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(XML).T_01_01>><<span class="code type"|{{{  }}} with type 'a elt = 'a Make_01_01(XML).elt>>>>>><<div class="code"|<<span class="keyword"|module>> <<a_api text="Make" | module XHTML_f.Make >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~X~M~L>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.T" | module XML_sigs.T >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(XML).T>><<span class="code type"|{{{  }}}>>>>>>