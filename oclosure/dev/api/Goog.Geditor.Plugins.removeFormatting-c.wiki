=Class type <<a_api_type | class type Goog.Geditor.Plugins.removeFormatting >> =
<<pre class="ocsforge_color odocwiki_code"|<<span id="TYPEremoveFormatting"|<<span class="ocsforge_color_keyword"|class type>> <<span class="ocsforge_color_name"|removeFormatting>>>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|object>><<a_api text=".." | class type Goog.Geditor.Plugins.removeFormatting >><<span class="ocsforge_color_keyword"|end>>>>**~Inherits**
* <<a_api | class Goog.Geditor.plugin >>

----
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODgetTrogClassId"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|getTrogClassId>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"|**Returns** ~The ~I~D unique to this plugin class~. ~Note that different
     instances off the plugin share the same class~Id~.\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODgetValueForNode"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|getValueForNode>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\'a. <<span class="ocsforge_color_delimiter"| ( >>~#<<span class="ocsforge_color_uid"|Dom>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|node>> as 'a<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|opt>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"| ~Handle per node special processing if neccessary~. ~If this function returns
 null then standard cleanup is applied~. ~Otherwise this node and all children
 are assumed to be cleaned~.
 ~N~O~T~E~(user~)~: ~If an alternate ~Remove~Formatting processor is provided
 ~(set~Remove~Formatting~Func~(~)~)~, this will no longer work~.

**Returns** ~The ~H~T~M~L strig representation of the cleaned data~.\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODhandleKeyboardShortcut"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|handleKeyboardShortcut>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\<<a_api text="Goog.Events.browserEvent" | class type Goog.Events.browserEvent >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >>\\<<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> bool <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> bool <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"| ~Handles keyboard shortcuts~.  ~Preferred to using handle~Key~* as it will use
 the proper event based on browser and will be more performant~. ~If
 handle~Key~Press~/handle~Key~Down returns true~, this will not be called~. ~If the
 plugin handles the shortcut~, it is responsible for dispatching appropriate
 events ~(change~, selection change at the time of this comment~)~. ~If the plugin
 calls exec~Command on the editable field~, then exec~Command already takes care
 of dispatching events~.
 ~N~O~T~E~: ~For performance reasons this is only called when any key is pressed
 in conjunction with ctrl~/meta keys ~O~R when a small subset of keys ~(defined
 in goog~.editor~.~Field~.~P~O~T~E~N~T~I~A~L~_~S~H~O~R~T~C~U~T~_~K~E~Y~C~O~D~E~S~_~) are pressed without
 ctrl~/meta keys~. ~We specifically don~'t invoke it when alt~Key is pressed since
 alt key is used in many i~8n ~U~Is to enter certain characters~.

**Returns** ~Whether the event was handled and thus should ~*not~* be
     propagated to other plugins~. ~We also call prevent~Default on the event if
     the return value is true~.\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODisSupportedCommand"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|isSupportedCommand>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> bool <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"| ~Whether the string corresponds to a command this plugin handles~.

**Returns** ~Whether the plugin handles this type of command~.\\
>>
<<pre class="ocsforge_color odocwiki_code"|<<span id="METHODsetRemoveFormattingFunc"|<<span class="ocsforge_color_keyword"|method>> <<span class="odocwiki_name"|setRemoveFormattingFunc>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\<<span class="ocsforge_color_delimiter"| ( >><<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>> <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|js_string>> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|t>><<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|callback>> <<span class="ocsforge_color_delimiter"| -> >> unit <<span class="ocsforge_color_uid"|Js>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|meth>>>>>><<div class="odocwiki_info"| ~Sets a function to be used for remove formatting~.

>>
