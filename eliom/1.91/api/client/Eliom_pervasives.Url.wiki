=Module <<a_api_type subproject="client" | module Eliom_pervasives.Url >> =
<<div class="code"|<<span class="keyword"|module>> Url: <<span class='code'|sig>><<a_api subproject="client" text=".." | module Eliom_pervasives.Url >><<span class='code'|end>>>>
----
<<div class="code"|<<span class="keyword"|include>> Url>>
<<div class="code" id="TYPEt"|<<span class="keyword"|type>> t = <<span class="code type"|string>> >>

<<div class="code" id="TYPEpath"|<<span class="keyword"|type>> path = <<span class="code type"|string list>> >>

<<div id="VALmake_absolute_url" class="code"|<<span class="keyword"|val>> make~_absolute~_url : <<span class="code type"|https:bool -> host:string -> port:int -> string -> <<a_api subproject="client" text="t" | type Eliom_pervasives.Url.t >>>>>><<div id="VALremove_internal_slash" class="code"|<<span class="keyword"|val>> remove~_internal~_slash : <<span class="code type"|string list -> string list>>>><<div id="VALremove_slash_at_beginning" class="code"|<<span class="keyword"|val>> remove~_slash~_at~_beginning : <<span class="code type"|string list -> string list>>>><<div id="VALdecode" class="code"|<<span class="keyword"|val>> decode : <<span class="code type"|string -> string>>>><<div id="VALencode" class="code"|<<span class="keyword"|val>> encode : <<span class="code type"|?plus:bool -> string -> string>>>><<div id="VALmake_encoded_parameters" class="code"|<<span class="keyword"|val>> make~_encoded~_parameters : <<span class="code type"|(string * string) list -> string>>>>