=Module <<a_api_type | module XHTML >> =
<<div class="code"|<<span class="keyword"|module>> XHTML: <<span class='code'|sig>><<a_api text=".." | module XHTML >><<span class='code'|end>>>>~Typesafe constructors and printers for ~X~H~T~M~L ~1~.~0 and ~1~.~1 documents\\
**See also** [[http://www.w3.org/TR/xhtml11/|~W~3~C ~Recommendation]]\\

----
\\

=@@id="1_Currentversion"@@~Current version =
\\
<<div class="code"|<<span class="keyword"|module type>> <<a_api text="T" | module type XHTML.T >> = <<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(<<a_api text="XML.M" | module XML.M >>).T>>>><<div class="info"|~Type signature of ~X~H~T~M~L typesafe constructors
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="M" | module XHTML.M >>: <<span class="code type"|<<a_api text="T" | module XHTML.T >>>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Concrete implementation of ~X~H~T~M~L typesafe constructors
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="P" | module XHTML.P >>: <<span class="code type"|<<a_api text="XML_sigs.TypedSimplePrinter" | module XML_sigs.TypedSimplePrinter >>(<<a_api text="XML.M" | module XML.M >>)(M).T>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Simple printer for ~X~H~T~M~L documents ~(~H~T~M~L compatible printer~)
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="MakePrinter" | module XHTML.MakePrinter >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~O>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.Output" | module XML_sigs.Output >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XML_sigs.TypedPrinter" | module XML_sigs.TypedPrinter >>(<<a_api text="XML.M" | module XML.M >>)(M)(O).T>><<span class="code type"|{{{  }}}>>>>>><<div class="info"|~Parametrized stream printer for ~X~H~T~M~L documents ~(~H~T~M~L compatible printer~)
>>
\\

=@@id="1_XHTML11"@@~X~H~T~M~L ~1~.~1=
\\
<<div class="code"|<<span class="keyword"|module type>> <<a_api text="T_01_01" | module type XHTML.T_01_01 >> = <<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(<<a_api text="XML.M" | module XML.M >>).T_01_01>>>><<div class="info"|~Type signature of ~X~H~T~M~L ~1~.~1 typesafe constructors
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="M_01_01" | module XHTML.M_01_01 >>: <<span class="code type"|<<a_api text="T_01_01" | module XHTML.T_01_01 >>>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Concrete implementation of ~X~H~T~M~L ~1~.~1 typesafe constructors
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="P_01_01" | module XHTML.P_01_01 >>: <<span class="code type"|<<a_api text="XML_sigs.TypedSimplePrinter" | module XML_sigs.TypedSimplePrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_01).T>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Simple printer for ~X~H~T~M~L ~1~.~1 documents
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="P_01_01_compat" | module XHTML.P_01_01_compat >>: <<span class="code type"|<<a_api text="XML_sigs.TypedSimplePrinter" | module XML_sigs.TypedSimplePrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_01).T>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Simple printer for ~X~H~T~M~L ~1~.~1 documents ~(~H~T~M~L compatible printer~)
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="MakePrinter_01_01" | module XHTML.MakePrinter_01_01 >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~O>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.Output" | module XML_sigs.Output >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XML_sigs.TypedPrinter" | module XML_sigs.TypedPrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_01)(O).T>><<span class="code type"|{{{  }}}>>>>>><<div class="info"|~Parametrized stream printer for ~X~H~T~M~L ~1~.~1 documents
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="MakePrinter_01_01_compat" | module XHTML.MakePrinter_01_01_compat >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~O>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.Output" | module XML_sigs.Output >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XML_sigs.TypedPrinter" | module XML_sigs.TypedPrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_01)(O).T>><<span class="code type"|{{{  }}}>>>>>><<div class="info"|~Parametrized stream printer for ~X~H~T~M~L ~1~.~1 documents ~(~H~T~M~L compatible printer~)
>>
\\

=@@id="1_XHTML10"@@~X~H~T~M~L ~1~.~0 =
\\
<<div class="code"|<<span class="keyword"|module type>> <<a_api text="T_01_00" | module type XHTML.T_01_00 >> = <<span class="code type"|<<a_api text="XHTML_sigs.XHTML" | module XHTML_sigs.XHTML >>(<<a_api text="XML.M" | module XML.M >>).T_01_00>>>><<div class="info"|~Type signature of ~X~H~T~M~L ~1~.~0 typesafe constructors
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="M_01_00" | module XHTML.M_01_00 >>: <<span class="code type"|<<a_api text="T_01_00" | module XHTML.T_01_00 >>>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Concrete implementation of ~X~H~T~M~L ~1~.~0 typesafe constructors
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="P_01_00" | module XHTML.P_01_00 >>: <<span class="code type"|<<a_api text="XML_sigs.TypedSimplePrinter" | module XML_sigs.TypedSimplePrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_00).T>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Simple printer for ~X~H~T~M~L ~1~.~0 documents
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="P_01_00_compat" | module XHTML.P_01_00_compat >>: <<span class="code type"|<<a_api text="XML_sigs.TypedSimplePrinter" | module XML_sigs.TypedSimplePrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_00).T>><<span class="code type"|{{{  }}}>>>><<div class="info"|~Simple printer for ~X~H~T~M~L ~1~.~0 documents ~(~H~T~M~L compatible printer~)
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="MakePrinter_01_00" | module XHTML.MakePrinter_01_00 >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~O>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.Output" | module XML_sigs.Output >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XML_sigs.TypedPrinter" | module XML_sigs.TypedPrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_00)(O).T>><<span class="code type"|{{{  }}}>>>>>><<div class="info"|~Parametrized stream printer for ~X~H~T~M~L ~1~.~0 documents
>>
<<div class="code"|<<span class="keyword"|module>> <<a_api text="MakePrinter_01_00_compat" | module XHTML.MakePrinter_01_00_compat >>: <<div class="sig_block"|<<span class='code'|functor ~(>><<span class='code'|~O>><<span class='code'| ~: >><<span class="code type"|<<a_api text="XML_sigs.Output" | module XML_sigs.Output >>>><<span class='code'|~) ~-~> >><<span class="code type"|<<a_api text="XML_sigs.TypedPrinter" | module XML_sigs.TypedPrinter >>(<<a_api text="XML.M" | module XML.M >>)(M_01_00)(O).T>><<span class="code type"|{{{  }}}>>>>>><<div class="info"|~Parametrized stream printer for ~X~H~T~M~L ~1~.~0 documents ~(~H~T~M~L compatible printer~)
>>
