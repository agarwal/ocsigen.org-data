=Module <<a_api_type subproject="client" | module Eliom_content.Html5.R >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|R>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api subproject="client" text=".." | module Eliom_content.Html5.R >><<span class="ocsforge_color_keyword"|end>>>>~Creation of ~H~T~M~L~5 content from
      [[ http://erratique.ch/software/react| ~React ]] signals~.
      ~H~T~M~L~5~'s trees are automatically updated whenever
      corresponding signals change~.

----


==@@id="2_Contentcreation"@@~Content creation==

        ~See <<a_api project="tyxml" | module Html5_sigs.T >> ~,
        ~If you want to create an untyped form~,
        you will have to use <<a_api|module Eliom_content.Html5.D.Raw>> 
        otherwise~, use the form module~.
        ~For more information~,
        see [[http://ocsigen.org/howto/forms/|"how to make forms"]]
<<pre id="VALnode" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|node>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  'a <<a_api subproject="client" text="Eliom_content.Html5.elt" | type Eliom_content.Html5.elt >> <<span class="ocsforge_color_uid"|React>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|signal>> <<a_api subproject="client" text="Eliom_pervasives.client_value" | type Eliom_pervasives.client_value >> <<span class="ocsforge_color_delimiter"| -> >>\\  'a <<a_api subproject="client" text="Eliom_content.Html5.elt" | type Eliom_content.Html5.elt >>>>>><<div class="odocwiki_info"|~Function <<span class="odocwiki_inlinecode"|node s>> create an ~H~T~M~L~5 <<span class="odocwiki_inlinecode"|elt>> from a signal <<span class="odocwiki_inlinecode"|s>>~.
        ~The resulting ~H~T~M~L~5 <<span class="odocwiki_inlinecode"|elt>> can then be used like anyother ~H~T~M~L~5 <<span class="odocwiki_inlinecode"|elt>>
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api subproject="client" text="Raw" | module Eliom_content.Html5.R.Raw >> <<span class="ocsforge_color_delimiter"|~:>> \\  \\  \\  <<span class="odocwiki_type"|<<span class="ocsforge_color_uid"|Html5_sigs.T>>>><<span class="odocwiki_type"| with type Xml.uri = Xml.uri\\              and type Xml.event_handler = Xml.event_handler\\              and type Xml.mouse_event_handler = Xml.mouse_event_handler\\              and type Xml.keyboard_event_handler = Xml.keyboard_event_handler\\              and type Xml.attrib = Xml.attrib and type Xml.elt = Xml.elt\\              and\\                type 'a Xml.wrap =\\                  ('a React.signal) Eliom_pervasives.client_value\\              and\\                type 'a Xml.list_wrap =\\                  ('a <<span class="ocsforge_color_uid"|ReactiveData.RList>>.t) Eliom_pervasives.client_value>><<span class="odocwiki_type"|\\              with module Svg := <<span class="ocsforge_color_uid"|Svg.R.Raw>>>><<span class="odocwiki_type"| with type (+'a) elt = 'a elt\\          and type 'a wrap = ('a React.signal) Eliom_pervasives.client_value\\          and\\            type 'a list_wrap =\\              ('a <<span class="ocsforge_color_uid"|ReactiveData.RList>>.t) Eliom_pervasives.client_value\\          and type 'a attrib = 'a attrib and type uri = uri>>>><<div class="odocwiki_info"|~Cf~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|include>> <<a_api subproject="client" | module Eliom_content.Html5.R.Raw >>>>
