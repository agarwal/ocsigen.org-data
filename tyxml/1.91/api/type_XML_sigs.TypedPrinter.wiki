<<code language="ocaml" | functor (XML : T) ->
  functor (TypedXML : TypedXML(XML).T) ->
    functor (O : Output) ->
      sig
        module type T =
          sig
            val print_list :
              ?encode:(string -> string) -> 'a TypedXML.elt list -> O.out
            val print :
              ?encode:(string -> string) ->
              ?advert:string -> TypedXML.doc -> O.out
          end
      end >>